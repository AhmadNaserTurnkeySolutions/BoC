<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Services</name>
    </assembly>
    <members>
        <member name="T:System.Data.Services.ExpressionVisitor">
            <summary>
            base vistor class for walking an expression tree bottom up.
            </summary>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Main visit method for ExpressionVisitor
            </summary>
            <param name="exp">The expression to visit</param>
            <returns>The visited expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            MemberBinding visit method
            </summary>
            <param name="binding">The MemberBinding expression to visit</param>
            <returns>The visited MemberBinding expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
            <summary>
            ElementInit visit method
            </summary>
            <param name="initializer">The ElementInit expression to visit</param>
            <returns>The visited ElementInit expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            UnaryExpression visit method
            </summary>
            <param name="u">The UnaryExpression expression to visit</param>
            <returns>The visited UnaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            BinaryExpression visit method
            </summary>
            <param name="b">The BinaryExpression expression to visit</param>
            <returns>The visited BinaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            TypeBinaryExpression visit method
            </summary>
            <param name="b">The TypeBinaryExpression expression to visit</param>
            <returns>The visited TypeBinaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            ConstantExpression visit method
            </summary>
            <param name="c">The ConstantExpression expression to visit</param>
            <returns>The visited ConstantExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            ConditionalExpression visit method
            </summary>
            <param name="c">The ConditionalExpression expression to visit</param>
            <returns>The visited ConditionalExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            ParameterExpression visit method
            </summary>
            <param name="p">The ParameterExpression expression to visit</param>
            <returns>The visited ParameterExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            MemberExpression visit method
            </summary>
            <param name="m">The MemberExpression expression to visit</param>
            <returns>The visited MemberExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            MethodCallExpression visit method
            </summary>
            <param name="m">The MethodCallExpression expression to visit</param>
            <returns>The visited MethodCallExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Expression list visit method
            </summary>
            <param name="original">The expression list to visit</param>
            <returns>The visited expression list</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            MemberAssignment visit method
            </summary>
            <param name="assignment">The MemberAssignment to visit</param>
            <returns>The visited MemberAssignmentt</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            MemberMemberBinding visit method
            </summary>
            <param name="binding">The MemberMemberBinding to visit</param>
            <returns>The visited MemberMemberBinding</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            MemberListBinding visit method
            </summary>
            <param name="binding">The MemberListBinding to visit</param>
            <returns>The visited MemberListBinding</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Binding List visit method
            </summary>
            <param name="original">The Binding list to visit</param>
            <returns>The visited Binding list</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            ElementInit expression list visit method
            </summary>
            <param name="original">The ElementInit expression list  to visit</param>
            <returns>The visited ElementInit expression list </returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            LambdaExpression visit method
            </summary>
            <param name="lambda">The LambdaExpression to visit</param>
            <returns>The visited LambdaExpression</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            NewExpression visit method
            </summary>
            <param name="nex">The NewExpression to visit</param>
            <returns>The visited NewExpression</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            MemberInitExpression visit method
            </summary>
            <param name="init">The MemberInitExpression to visit</param>
            <returns>The visited MemberInitExpression</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            ListInitExpression visit method
            </summary>
            <param name="init">The ListInitExpression to visit</param>
            <returns>The visited ListInitExpression</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            NewArrayExpression visit method
            </summary>
            <param name="na">The NewArrayExpression to visit</param>
            <returns>The visited NewArrayExpression</returns>
        </member>
        <member name="M:System.Data.Services.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            InvocationExpression visit method
            </summary>
            <param name="iv">The InvocationExpression to visit</param>
            <returns>The visited InvocationExpression</returns>
        </member>
        <member name="T:System.Data.Services.Client.ParameterReplacerVisitor">
            <summary>Provides an expression visitor that can replace a <see cref="T:System.Linq.Expressions.ParameterExpression"/>.</summary>
        </member>
        <member name="F:System.Data.Services.Client.ParameterReplacerVisitor.newExpression">
            <summary>Expression to replace with.</summary>
        </member>
        <member name="F:System.Data.Services.Client.ParameterReplacerVisitor.oldParameter">
            <summary>Parameter to replace.</summary>
        </member>
        <member name="M:System.Data.Services.Client.ParameterReplacerVisitor.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Client.ParameterReplacerVisitor"/> instance.</summary>
            <param name="oldParameter">Parameter to replace.</param>
            <param name="newExpression">Expression to replace with.</param>
        </member>
        <member name="M:System.Data.Services.Client.ParameterReplacerVisitor.Replace(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Replaces the occurences of <paramref name="oldParameter"/> for <paramref name="newParameter"/> in
            <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression to perform replacement on.</param>
            <param name="oldParameter">Parameter to replace.</param>
            <param name="newExpression">Expression to replace with.</param>
            <returns>A new expression with the replacement performed.</returns>
        </member>
        <member name="M:System.Data.Services.Client.ParameterReplacerVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>ParameterExpression visit method.</summary>
            <param name="p">The ParameterExpression expression to visit</param>
            <returns>The visited ParameterExpression expression </returns>
        </member>
        <member name="T:System.Data.Services.BatchStream">
            <summary>
            materialize objects from an application/atom+xml stream
            </summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.DefaultBufferSize">
            <summary>Default buffer size, should be larger than buffer size of StreamReader</summary> 
        </member>
        <member name="F:System.Data.Services.BatchStream.batchRequest">
            <summary>Is this a batch resquest or batch response</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.byteBuffer">
            <summary>Buffered bytes from the stream.</summary> 
        </member>
        <member name="F:System.Data.Services.BatchStream.reader">
            <summary>Underlying stream being buffered.</summary> 
        </member>
        <member name="F:System.Data.Services.BatchStream.byteLength">
            <summary>Number of valid bytes in the byteBuffer.</summary> 
        </member>
        <member name="F:System.Data.Services.BatchStream.bytePosition">
            <summary>Position in the byteBuffer.</summary> 
        </member>
        <member name="F:System.Data.Services.BatchStream.batchEncoding">
            <summary>Discovered encoding of underlying stream.</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.checkPreamble">
            <summary>check preamble.</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.batchBoundary">
            <summary>batch boundary.</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.batchLength">
            <summary>batch length</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.totalCount">
            <summary>running total byte count</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.changesetBoundary">
            <summary>changeset boundary.</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.changesetEncoding">
            <summary>Discovered encoding of underlying neseted stream.</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.contentHeaders">
            <summary>content headers</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.contentStream">
            <summary>content stream</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.disposeWithContentStreamDispose">
            <summary>stream dispose delayed until the contentStream is disposed</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.contentUri">
            <summary>content uri</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.batchState">
            <summary>batch state</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.writer">
            <summary>everything batch reads to help debugging</summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.#ctor(System.IO.Stream,System.String,System.Text.Encoding,System.Boolean)">
            <summary>Wrap a stream for batching.</summary>
            <param name="stream">underlying stream</param>
            <param name="boundary">batch boundary</param>
            <param name="batchEncoding">encoding of batch</param>
            <param name="requestStream">is request stream or response stream</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.Flush">
            <summary>Does nothing.</summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Not supported.</summary>
            <param name="buffer">The parameter is not used.</param>
            <param name="offset">The parameter is not used.</param>
            <param name="count">The parameter is not used.</param>
            <param name="callback">The parameter is not used.</param>
            <param name="state">The parameter is not used.</param>
            <returns>nothing</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Not supported.</summary>
            <param name="buffer">The parameter is not used.</param>
            <param name="offset">The parameter is not used.</param>
            <param name="count">The parameter is not used.</param>
            <returns>nothing</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Forward seek in buffered underlying stream.
            </summary>
            <param name="offset">non-negative bytes to forward seek</param>
            <param name="origin">must be Current</param>
            <returns>underlying stream forward seek result.</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.SetLength(System.Int64)">
            <summary>Not supported.</summary>
            <param name="value">The parameter is not used.</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Not supported.</summary>
            <param name="buffer">The parameter is not used.</param>
            <param name="offset">The parameter is not used.</param>
            <param name="count">The parameter is not used.</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.GetBoundaryAndEncodingFromMultipartMixedContentType(System.String,System.String@,System.Text.Encoding@)">
            <summary>
            Get the boundary string and encoding if the content type is multipart/mixed.
            </summary>
            <param name="contentType">content type specified in the request.</param>
            <param name="boundary">returns the boundary string specified in the content type.</param>
            <param name="encoding">returns the encoding specified in the content type.</param>
            <returns>true if multipart/mixed with boundary</returns>
            <exception cref="T:System.InvalidOperationException">if multipart/mixed without boundary</exception>
        </member>
        <member name="M:System.Data.Services.BatchStream.MoveNext">
            <summary>start a multipart content section with a specific boundary</summary>
            <returns>true if this is content to process</returns>
            <remarks>
            5.1.2
            an improperly truncated "multipart" entity may not have
            any terminating boundary marker.
            MIME implementations are required to recognize outer level
            boundary markers at ANY level of inner nesting.
            5.1.3
            The "mixed" subtype of "multipart" is intended for use when the body
            parts are independent and need to be bundled in a particular order.
            Any "multipart" subtypes that an implementation does not recognize
            must be treated as being of subtype "mixed".
            </remarks>
        </member>
        <member name="M:System.Data.Services.BatchStream.GetContentStream">
            <summary>Method to get content stream instead of property so it can be passed as function</summary>
            <returns>ContentStream</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.Dispose(System.Boolean)">
            <summary>Dispose underlying stream</summary>
            <param name="disposing">true if active dispose, false if finalizer</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.GetStateBasedOnHttpMethodName(System.String)">
            <summary>
            Validates the method name and returns the state based on the method name
            </summary>
            <param name="methodName">method name to be validated</param>
            <returns>state based on the method name</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.VerifyBoundary(System.String)">
            <summary>
            verify boundary delimiter if valid
            </summary>
            <param name="boundary">boundary to test</param>
            <returns>"--" + boundary</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.ClearPreviousOperationInformation">
            <summary>
            Clears the headers, contentUri and stream of the previous operation
            </summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.Append(System.Byte[]@,System.Int32)">
            <summary>appends bytes from byteBuffer to buffer</summary>
            <param name="buffer">buffer to append to, grows as necessary</param>
            <param name="count">count of bytes to append</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.AssertOpen">
            <summary>verify reader is open</summary>
            <exception cref="T:System.ObjectDisposedException">if reader is used after dispose</exception>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadBuffer">
            <summary>Fill the buffer from the underlying stream.</summary>
            <returns>true if any data was read.</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadLine">
            <summary>
            Reads a line. A line is defined as a sequence of characters followed by
            a carriage return ('\r'), a line feed ('\n'), or a carriage return
            immediately followed by a line feed. The resulting string does not
            contain the terminating carriage return and/or line feed. The returned
            value is null if the end of the input stream has been reached.
            </summary>
            <returns>line from the buffered stream</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.DetectEncoding">
            <summary>Detect the encoding based data from the stream.</summary>
            <returns>discovered encoding</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadDelimiter(System.Byte[],System.Int32,System.Int32)">
            <summary>
            read from BatchStream buffer into user buffer, stopping when a boundary delimiter is found
            </summary>
            <param name="buffer">place to copy bytes read from underlying stream</param>
            <param name="offset">offset in buffer to start writing</param>
            <param name="count">count of bytes to read from buffered underlying stream</param>
            <returns>count of bytes actualy copied into buffer</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadLength(System.Byte[],System.Int32,System.Int32)">
            <summary>Read from internal buffer or use unbuffered read from underlying stream.</summary>
            <param name="buffer">place to copy bytes read from underlying stream</param>
            <param name="offset">offset in buffer to start writing</param>
            <param name="count">count of bytes to read from buffered underlying stream</param>
            <returns>count of bytes actualy copied into buffer</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadContentHeaders">
            <summary>
            Read the content headers
            </summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.ReadHttpHeaders">
            <summary>
            Validate that the first header is the http method name, followed by url followed by http version
            E.g. POST /Customers HTTP/1.1
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.ContentHeaders">
            <summary>content headers</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.ContentUri">
            <summary>Content URI.</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.Encoding">
            <summary>encoding</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.State">
            <summary>batch state</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.CanRead">
            <summary>Delegate to underlying stream</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.CanSeek">
            <summary>False</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.CanWrite">
            <summary>False</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.Length">
            <summary>Not supported.</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.Position">
            <summary>Not supported.</summary>
        </member>
        <member name="T:System.Data.Services.BatchStream.StreamWithDelimiter">
            <summary>
            sub stream of BatchStream that reads up to a boundary delimiter
            </summary>
        </member>
        <member name="T:System.Data.Services.BatchStream.StreamWithLength">
            <summary>
            sub stream of BatchStream that reads a specific length from underlying stream
            </summary>
            <remarks>
            Allows users of stream to call Dispose multiple times
            without affecting the BatchStream
            </remarks>
        </member>
        <member name="F:System.Data.Services.BatchStream.StreamWithLength.target">
            <summary>Underlying batch stream</summary>
        </member>
        <member name="F:System.Data.Services.BatchStream.StreamWithLength.length">
            <summary>Max remaining byte length to read from underlying stream</summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.#ctor(System.Data.Services.BatchStream,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="stream">underlying stream</param>
            <param name="contentLength">max byte length to read</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.Flush">
            <summary>Does nothing.</summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>read bytes from stream</summary>
            <param name="buffer">buffer to store bytes being read</param>
            <param name="offset">offset in buffer to start storing bytes</param>
            <param name="count">count of bytes to read</param>
            <returns>count of bytes actualy read into the buffer</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Not supported.</summary>
            <param name="offset">The parameter is not used.</param>
            <param name="origin">The parameter is not used.</param>
            <returns>nothing</returns>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.SetLength(System.Int64)">
            <summary>Not supported.</summary>
            <param name="value">ignored</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Not supported.</summary>
            <param name="buffer">The parameter is not used.</param>
            <param name="offset">The parameter is not used.</param>
            <param name="count">The parameter is not used.</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithLength.Dispose(System.Boolean)">
            <summary>Dispose of this nested stream.</summary>
            <param name="disposing">true if active dispose</param>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.CanRead">
            <summary>Delegate to underlying stream</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.CanSeek">
            <summary>False</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.CanWrite">
            <summary>False</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.Length">
            <summary>Not supported.</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.Position">
            <summary>Not supported.</summary>
        </member>
        <member name="P:System.Data.Services.BatchStream.StreamWithLength.Target">
            <summary>Underlying batch stream</summary>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithDelimiter.#ctor(System.Data.Services.BatchStream)">
            <summary>
            constructor
            </summary>
            <param name="stream">underlying stream</param>
        </member>
        <member name="M:System.Data.Services.BatchStream.StreamWithDelimiter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>read bytes from stream</summary>
            <param name="buffer">buffer to store bytes being read</param>
            <param name="offset">offset in buffer to start storing bytes</param>
            <param name="count">count of bytes to read</param>
            <returns>count of bytes actualy read into the buffer</returns>
        </member>
        <member name="T:System.Data.Services.BatchStreamState">
            <summary>
            states of the batch stream
            </summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.EndBatch">
            <summary>EndBatch</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.StartBatch">
            <summary>StartBatch</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.BeginChangeSet">
            <summary>BeginChangeSet</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.EndChangeSet">
            <summary>EndChangeSet</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.Post">
            <summary>request Post</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.Put">
            <summary>request Put</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.Delete">
            <summary>request Delete</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.Get">
            <summary>request Get</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.Merge">
            <summary>request Merge</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.GetResponse">
            <summary>response to a Get</summary>
        </member>
        <member name="F:System.Data.Services.BatchStreamState.ChangeResponse">
            <summary>response to a Post/Put/Merge/Delete</summary>
        </member>
        <member name="T:System.Data.Services.UriUtil">
            <summary>
            static uri utility functions
            </summary>
        </member>
        <member name="M:System.Data.Services.UriUtil.CreateBaseComparableUri(System.Uri)">
            <summary>Creates a URI suitable for host-agnostic comparison purposes.</summary>
            <param name="uri">URI to compare.</param>
            <returns>URI suitable for comparison.</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.GetNameFromAtomLinkRelationAttribute(System.String)">
            <summary>Parse the atom link relation attribute value</summary>
            <param name="value">atom link relation attribute value</param>
            <returns>the assocation name or null</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.IsBaseOf(System.Uri,System.Uri)">
            <summary>is the serviceRoot the base of the request uri</summary>
            <param name="baseUriWithSlash">baseUriWithSlash</param>
            <param name="requestUri">requestUri</param>
            <returns>true if the serviceRoot is the base of the request uri</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.UriInvariantInsensitiveIsBaseOf(System.Uri,System.Uri)">
            <summary>
            Determines whether the <paramref name="current"/> Uri instance is a 
            base of the specified Uri instance. 
            </summary>
            <param name="current">Candidate base URI.</param>
            <param name="uri">The specified Uri instance to test.</param>
            <returns>true if the current Uri instance is a base of uri; otherwise, false.</returns>
        </member>
        <member name="T:System.Data.Services.XmlUtil">
            <summary>
            static xml utility function
            </summary>
        </member>
        <member name="M:System.Data.Services.XmlUtil.CreateAtomNameTable">
            <summary>
            An initial nametable so that string comparisons during
            deserialization become reference comparisions
            </summary>
            <returns>nametable with element names used in application/atom+xml payload</returns>
        </member>
        <member name="M:System.Data.Services.XmlUtil.CreateXmlReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new XmlReader instance using the specified stream reader
            </summary>
            <param name="stream">The stream reader from which you want to read</param>
            <param name="encoding">The encoding of the stream</param>
            <returns>XmlReader with the appropriate xml settings</returns>
        </member>
        <member name="M:System.Data.Services.XmlUtil.CreateXmlWriterAndWriteProcessingInstruction(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new XmlWriter instance using the specified stream and writers the processing instruction
            with the given encoding value
            </summary>
            <param name="stream"> The stream to which you want to write</param>
            <param name="encoding"> Encoding that you want to specify in the reader settings as well as the processing instruction </param>
            <returns>mlWriter with the appropriate xml settings and processing instruction</returns>
        </member>
        <member name="T:System.Data.Services.BatchServiceHost">
            <summary>
            Keeps track of the request and response headers for each
            operation in the batch
            </summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceHost2">
            <summary>
            Extends IDataServiceHost to include extra request and response headers.
            </summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceHost">
            <summary>
            Provides access to the environment for a DataService,
            including information about the current request.
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>Method to handle a data service exception during processing.</summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri">
            <summary>Gets the absolute resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestAccept">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet">
            <summary>
            Gets the string with the specification for the character set 
            encoding that the client requested, possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestContentType">
            <summary>Gets the HTTP MIME type of the request stream.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestHttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> from which the input must be read
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseCacheControl">
            <summary>Gets or sets the Cache-Control header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseContentType">
            <summary>Gets or sets the HTTP MIME type of the output stream.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseETag">
            <summary>Gets/Sets the value of the ETag header on the response</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseLocation">
            <summary>Gets or sets the Location header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseStatusCode">
            <summary>
            Returns the status code for the request made
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> to be written to send a response
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseVersion">
            <summary>Gets or sets the value for the DataServiceVersion response header.</summary>
        </member>
        <member name="M:System.Data.Services.IDataServiceHost2.SetResponseHeader(System.String,System.String)">
            <summary>
            Sets a response header.
            </summary>
            <param name="header">Response header name.</param>
            <param name="value">Response header value.</param>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost2.RequestHeaders">
            <summary>Dictionary of all request headers from the host.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost2.ResponseHeaders">
            <summary>Enumerates all response headers that has been set.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.boundary">
            <summary>Response separator string.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.requestParams">
            <summary>Request headers.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.requestStream">
            <summary>Request Stream.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.contentId">
            <summary>Content Id for this operation.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.writer">
            <summary>Output writer.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.queryParameters">
            <summary>List of query parameters as specified in the request uri.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.responseStatusCode">
            <summary>Value of the response StatusCode header.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.responseHeaders">
            <summary>Dictionary of additional response headers to return, besides those already in IDataServiceHost.</summary>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.#ctor(System.Data.Services.CachedRequestParams,System.IO.Stream,System.String,System.String,System.IO.StreamWriter)">
            <summary>
            Initializes a new dummy host for the batch request.
            This host represents a single operation in the batch.
            </summary>
            <param name='requestParams'>cached request headers.</param>
            <param name="requestStream">Request stream (possibly null, eg for a DELETE operation).</param>
            <param name="contentId">content id for the given operation host.</param>
            <param name='boundary'>Response separator string.</param>
            <param name='writer'>Output writer.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.#ctor(System.String,System.IO.StreamWriter)">
            <summary>
            Initializes a host for error scenarios - something to which we can write the response header values
            and write them to the underlying stream.
            </summary>
            <param name='boundary'>Response separator string.</param>
            <param name='writer'>Output writer.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>Method to handle a data service exception during processing.</summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost2#SetResponseHeader(System.String,System.String)">
            <summary>
            Sets a response header.
            </summary>
            <param name="header">Response header name.</param>
            <param name="value">Response header value.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.GetUriAndQueryParameters">
            <summary>
            Given the request uri, parse the uri and query parameters and cache them
            </summary>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.TryGetResponseHeader(System.String)">
            <summary>
            Try and get a response header value.
            </summary>
            <param name="responseHeaderName">Response header name.</param>
            <returns>Response header value if found. Otherwise null is returned.</returns>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#AbsoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestAccept">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestAcceptCharSet">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestContentType">
            <summary>Gets the HTTP MIME type of the input stream.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestHttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseCacheControl">
            <summary>Gets or sets the Cache-Control header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseContentType">
            <summary>Gets or sets the HTTP MIME type of the output stream.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseETag">
            <summary>Gets/Sets the value of the ETag header on the outgoing response</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseLocation">
            <summary>Gets or sets the Location header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseStatusCode">
            <summary>
            Gets/Sets the status code for the request made.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> to be written to send a response
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseVersion">
            <summary>Gets or sets the value for the DataServiceVersion response header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> from which the request data can be read from
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost2#RequestHeaders">
            <summary>Dictionary of all request headers.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost2#ResponseHeaders">
            <summary>Enumerates all response headers that has been set.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.BoundaryString">
            <summary>Response separator string.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.RequestParams">
            <summary> returns all the cached request headers </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.ContentId">
            <summary>
            Gets/Sets the content id as specified in the batch request.
            This same value is written out in the response headers also to allow mapping requests on the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.Writer">
            <summary>Output writer.</summary>
        </member>
        <member name="T:System.Data.Services.AstoriaVerbs">
            <summary>
            Enum to represent various http methods
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.None">
            <summary>Not Initialized.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.GET">
            <summary>Represents the GET http method.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.PUT">
            <summary>Represents the PUT http method.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.POST">
            <summary>Represents the POST http method.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.DELETE">
            <summary>Represents the DELETE http method.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaVerbs.MERGE">
            <summary>Represents the MERGE http method.</summary>
        </member>
        <member name="T:System.Data.Services.CachedRequestParams">
            <summary>
            Use this class to hold on to request parameters that may be inaccessible after a response writing begins.
            </summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.AbsoluteRequestUri">
            <summary>Gets the absolute resource upon which to apply the request.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.Accept">
            <summary>Value for the Accept header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.AcceptCharset">
            <summary>Value for the Accept-Charset header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.ContentType">
            <summary>Value of the Content-Type header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.HttpMethod">
            <summary>HTTP method used for the request.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.IfMatch">
            <summary>Value for the If-Match header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.IfNoneMatch">
            <summary>Value for the If-None-Match header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.MaxVersion">
            <summary>Value for the MaxDataServiceVersion header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.Version">
            <summary>Value for the DataServiceVersion header.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.RequestHeaders">
            <summary>Dictionary of all request headers.</summary>
        </member>
        <member name="F:System.Data.Services.CachedRequestParams.astoriaHttpVerb">
            <summary>enum indicating http method used on the request, </summary>
        </member>
        <member name="M:System.Data.Services.CachedRequestParams.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Initializes a new <see cref="T:System.Data.Services.CachedRequestParams"/> instance.</summary>
            <param name="accept">Value for the Accept header.</param>
            <param name="acceptCharset">Value for the Accept-Charset header.</param>
            <param name="contentType">Value of the Content-Type header.</param>
            <param name="httpMethod">HTTP method used for the request.</param>
            <param name="headerIfMatch">Value for the If-Match header.</param>
            <param name="headerIfNoneMatch">Value for the If-None-Match header.</param>
            <param name="version">Value for the DataServiceVersion header.</param>
            <param name="maxVersion">Value for the MaxDataServiceVersion header.</param>
            <param name="absoluteRequestUri">The absolute URI to the resource upon which to apply the request.</param>
            <param name="serviceUri">URI to the service.</param>
            <param name="requestHeaders">Dictionary of request headers.</param>
        </member>
        <member name="P:System.Data.Services.CachedRequestParams.AstoriaHttpVerb">
            <summary>
            Get the enum representing the http method name.
            </summary>
            <param name="httpMethodName">http method used for the request.</param>
            <returns>enum representing the http method name.</returns>
        </member>
        <member name="T:System.Data.Services.ChangeInterceptorAttribute">
            <summary>
            Use this attribute on a DataService method to indicate that
            this method should be invoked with data changes.
            </summary>
        </member>
        <member name="F:System.Data.Services.ChangeInterceptorAttribute.entitySetName">
            <summary>Container name that the method filters.</summary>
        </member>
        <member name="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)">
            <summary>Declares a new <see cref="T:System.Data.Services.ChangeInterceptorAttribute"/> instance.</summary>
            <param name="entitySetName">Name of entity set that the method intercepts changes to.</param>
        </member>
        <member name="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName">
            <summary>Entity set name that the method intercepts changes to.</summary>
        </member>
        <member name="T:System.Data.Services.ContentFormat">
            <summary>This enumeration provides values for the content format.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Binary">
            <summary>A binary format with no additional modifications.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Json">
            <summary>The application/json format.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Text">
            <summary>A text-based format with no additional markup.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Atom">
            <summary>The application/atom+xml format.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.MetadataDocument">
            <summary>An XML document for CSDL.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.PlainXml">
            <summary>An XML document for primitive and complex types.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Unknown">
            <summary>An as-yet-undetermined format.</summary>
        </member>
        <member name="F:System.Data.Services.ContentFormat.Unsupported">
            <summary>An unsupported format.</summary>
        </member>
        <member name="T:System.Data.Services.DataService`1">
            <summary>
            Represents a strongly typed service that can process data-oriented 
            resource requests.
            </summary>
            <typeparam name="T">The type of the store to provide resources.</typeparam>
            <remarks>
            <paramref name="T"/> will typically be a subtype of 
            System.Data.Object.ObjectContext or another class that provides IQueryable
            properties.
            </remarks>
        </member>
        <member name="T:System.Data.Services.IRequestHandler">
            <summary>
            This interface declares the service contract for a DataWeb
            service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
            <summary>Provides an entry point for all requests.</summary>
            <param name="messageBody">Incoming message body.</param>
            <returns>The resulting <see cref="T:System.ServiceModel.Channels.Message"/> for this request.</returns>
        </member>
        <member name="T:System.Data.Services.IDataService">
            <summary>Provides a non-generic interface for web data services.</summary>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalApplyingExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
            <summary>
            This method is called during query processing to validate and customize 
            paths for the $expand options are applied by the provider.
            </summary>
            <param name='queryable'>Query which will be composed.</param>
            <param name='expandPaths'>Collection of segment paths to be expanded.</param>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.IDataService.GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.IDataService.GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.IDataService.DisposeDataSource">
            <summary>
            Dispose the data source instance and set it to null
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataService.DisposeStreamProvider">
            <summary>
            Dispose the stream provider instance and set it to null
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="P:System.Data.Services.IDataService.Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Host">
            <summary>Host implementation for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Instance">
            <summary>Returns the instance of the data service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.RequestParams">
            <summary>Cached request headers.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.StreamProvider">
            <summary>Reference to IDataServiceStreamProvider interface</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.cachedConstructor">
            <summary>A delegate used to create an instance of the data context.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.host">
            <summary>Host implementation for this data service.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.updatable">
            <summary>IUpdatable interface for this datasource's provider</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.requestParams">
            <summary>Cached request headers.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.streamProvider">
            <summary>Reference to IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalApplyingExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
            <summary>
            This method is called during query processing to validate and customize 
            paths for the $expand options are applied by the provider.
            </summary>
            <param name='queryable'>Query which will be composed.</param>
            <param name='expandPaths'>Collection of segment paths to be expanded.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#DisposeDataSource">
            <summary>Disposes the data source of the current <see cref="F:System.Data.Services.DataService`1.provider"/> if necessary.</summary>
            <remarks>
            Because the provider has affinity with a specific data source
            (which is created and set by the DataService), we set
            the provider to null so we remember to re-create it if the
            service gets reused for a different request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#DisposeStreamProvider">
            <summary>
            Dispose the stream provider instance and set it to null
            </summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost2)">
            <summary>Attaches the specified host to this service.</summary>
            <param name="host">Host for service to interact with.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)">
            <summary>Processes the specified <paramref name="message"/>.</summary>
            <param name="messageBody"><see cref="T:System.IO.Stream"/> with message body to process.</param>
            <returns>The response <see cref="T:System.ServiceModel.Channels.Message"/>.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessRequest">
            <summary>Provides a host-agnostic entry point for request processing.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateDataSource">
            <summary>Initializes a new data source instance.</summary>
            <returns>A new data source instance.</returns>
            <remarks>
            The default implementation uses a constructor with no parameters
            to create a new instance.
            
            The instance will only be used for the duration of a single
            request, and will be disposed after the request has been
            handled.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Handles an exception thrown while processing a request.</summary>
            <param name="args">Arguments to the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before processing each request. For batch requests
            it is called once for the top batch request and once for each operation
            in the batch.
            </summary>
            <param name="args">args containing information about the request.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.CheckVersion(System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>Checks that the specified <paramref name='service' /> has a known version.</summary>
            <param name='service'>Service to check.</param>
            <param name="requestDescription">The request description object</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.CheckETagValues(System.Data.Services.CachedRequestParams)">
            <summary>
            Checks that if etag values are specified in the header, they must be valid.
            </summary>
            <param name="requestParams">header values.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.IsETagValueValid(System.String)">
            <summary>
            Returns false if the given etag value is not valid.
            Look in http://www.ietf.org/rfc/rfc2616.txt?number=2616 (Section 14.26) for more information
            </summary>
            <param name="etag">etag value to be checked.</param>
            <returns>returns true if the etag value is valid, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.String,System.Action{System.IO.Stream},System.Data.Services.IDataService)">
            <summary>
            Creates a <see cref="T:System.ServiceModel.Channels.Message"/> that invokes the specified 
            <paramref name="writer"/> callback to write its body.
            </summary>
            <param name="version">Version for message.</param>
            <param name="action">Action for message.</param>
            <param name="contentType">MIME content type for body.</param>
            <param name="writer">Callback.</param>
            <param name="service">Service with context to dispose once the response has been written.</param>
            <returns>A new <see cref="T:System.ServiceModel.Channels.Message"/>.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateConfiguration(System.Type,System.Data.Services.Providers.IDataServiceProvider,System.Boolean)">
            <summary>
            Creates a new data service configuration instance
            </summary>
            <param name="dataServiceType">data service type</param>
            <param name="provider">provider instance</param>
            <param name="registerCallBacks">whether or not to register call backs</param>
            <returns>data service configuration instance</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateProvider``1(System.Data.Services.DataService{``0},System.Data.Services.DataServiceConfiguration@)">
            <summary>
            Creates a provider implementation that wraps the T type.
            </summary>
            <typeparam name="TData">type of the datasource.</typeparam>
            <param name="dataService">Data service we need to create a provider for</param>
            <param name='configuration'>Service configuration information.</param>
            <returns>
            A (possibly shared) provider implementation that wraps the T type.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetRequestAcceptEncoding(System.Data.Services.ContentFormat,System.String)">
            <summary>
            Gets the appropriate encoding specified by the request, taking 
            the format into consideration.
            </summary>
            <param name="responseFormat">Content format for response.</param>
            <param name="acceptCharset">Accept-Charset header as specified in request.</param>
            <returns>The requested encoding, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SelectResponseFormat(System.Data.Services.IDataServiceHost,System.String,System.Boolean)">
            <summary>
            Selects a response format for the host's request and sets the
            appropriate response header.
            </summary>
            <param name="host">Host with request.</param>
            <param name="acceptTypesText">An comma-delimited list of client-supported MIME accept types.</param>
            <param name="entityTarget">Whether the target is an entity.</param>
            <returns>The selected response format.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.ValidateRequest(System.Data.Services.CachedRequestParams)">
            <summary>Validate the given request.</summary>
            <param name="requestParams">Request parameters.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.RaiseResponseVersionForMetadata(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Raises the response version header if necessary for the $metadata path.
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource types.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
            <param name="description">description about the request uri</param>
            <param name="dataService">data service to which the request was made</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessIncomingRequest(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Processes the incoming request, without writing anything to the response body.
            </summary>
            <param name="description">description about the request uri</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>
            A delegate to be called to write the body; null if no body should be written out.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SerializeResponseBody(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Serializes the results for a request into the body of a response message.</summary>
            <param name='description'>Description of the data requested.</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>A delegate that can serialize the body into an IEnumerable.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SelectResponseFormatForType(System.Data.Services.RequestTargetKind,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Data.Services.SegmentInfo,System.Data.Services.IDataService)">
            <summary>Selects the correct content format for a given resource type.</summary>
            <param name="targetKind">Target resource to return.</param>
            <param name="resourceType">resource type.</param>
            <param name="acceptTypesText">Accept header value.</param>
            <param name="mimeType">Required MIME type.</param>
            <param name="lastSegmentInfo">Last segment info of the request.</param>
            <param name="service">Data service.</param>
            <returns>
            The content format for the resource; Unknown if it cannot be determined statically.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SelectPrimitiveContentType(System.Data.Services.Providers.ResourceType,System.String,System.String,System.Data.Services.IDataServiceHost)">
            <summary>Selects the correct content format for a primitive type.</summary>
            <param name="targetResourceType">resource type.</param>
            <param name="acceptTypesText">Accept header value.</param>
            <param name="requiredContentType">Required MIME type, possibly null.</param>
            <param name="host">Host implementation for this data service.</param>
            <returns>The content format for the resource.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SelectMediaResourceContentType(System.Object,System.String,System.Data.Services.IDataService)">
            <summary>Selects the correct content format for a media resource.</summary>
            <param name="mediaLinkEntry">The media link entry.</param>
            <param name="acceptTypesText">Accept header value.</param>
            <param name="service">Data service instance.</param>
            <returns>The content format for the resource.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandlePostOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles POST requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>a new request description object, containing information about the response payload</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandlePutOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles PUT requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>new request description which contains the info about the entity resource getting modified.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleDeleteOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles DELETE requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleInternalResources(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles a request for an internal resource if applicable.</summary>
            <param name="description">Request description.</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>
            An action that produces the resulting stream; null if the description isn't for an internal resource.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CompareETagAndWriteResponse(System.Data.Services.RequestDescription,System.Data.Services.ContentFormat,System.Data.Services.IDataService)">
            <summary>
            Compare the ETag value and then serialize the value if required
            </summary>
            <param name="description">Description of the uri requested.</param>
            <param name="responseFormat">Content format for response.</param>
            <param name="dataService">Data service to which the request was made.</param>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.ResolveUnknownFormat(System.Data.Services.RequestDescription,System.Object,System.Data.Services.IDataService)">
            <summary>Resolves the content format required when it is statically unknown.</summary>
            <param name='description'>Request description.</param>
            <param name='element'>Result target.</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>The format for the specified element.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.WriteSingleElementResponse(System.Data.Services.RequestDescription,System.Data.Services.ContentFormat,System.Collections.IEnumerator,System.Int32,System.String,System.Data.Services.IDataService)">
            <summary>
            Compare the ETag value and then serialize the value if required
            </summary>
            <param name="description">Description of the uri requested.</param>
            <param name="responseFormat">format of the response</param>
            <param name="queryResults">Enumerator whose current resource points to the resource which needs to be written</param>
            <param name="parentResourceIndex">index of the segment info that represents the last resource</param>
            <param name="etagValue">etag value for the resource specified in parent resource parameter</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.WriteETagValueInResponseHeader(System.String,System.Data.Services.IDataServiceHost)">
            <summary>
            Write the etag header value in the response
            </summary>
            <param name="etagValue">etag value that needs to be written.</param>
            <param name="host">Host implementation for this data service.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetContainerAndActualEntityInstance(System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.Data.Services.Providers.ResourceSet@)">
            <summary>
            Returns the actual entity instance and its containers for the resource in the description results.
            </summary>
            <param name="service">Data service</param>
            <param name="description">description about the request made.</param>
            <param name="container">returns the container to which the result resource belongs to.</param>
            <returns>returns the actual entity instance for the given resource.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetEmptyStreamWriter(System.Data.Services.IDataService)">
            <summary>
            Disposes the stream provider and returns a no-op method for a stream-writing action.
            </summary>
            <param name="service">Data Service</param>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleUnbindOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Handles the unbind operations
            </summary>
            <param name="description">description about the request made.</param>
            <param name="dataService">data service to which the request was made.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetContentFormat(System.String)">
            <summary>
            Get the content format corresponding to the given mime type.
            </summary>
            <param name="mime">mime type for the request.</param>
            <returns>content format mapping to the given mime type.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleRequest">
            <summary>
            Handle the request - whether its a batch request or a non-batch request
            </summary>
            <returns>Returns the delegate for writing the response</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleNonBatchRequest(System.Data.Services.RequestDescription)">
            <summary>
            Handle non-batch requests
            </summary>
            <param name="description">description about the request uri.</param>
            <returns>Returns the delegate which takes the response stream for writing the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleBatchRequest">
            <summary>Handle the batch request.</summary>
            <returns>Returns the delegate which takes the response stream for writing the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.EnsureProviderAndConfigForRequest">
            <summary>Creates the provider and configuration as necessary to be used for this request.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessIncomingRequestUriAndCacheHeaders">
            <summary>
            Processes the incoming request and cache all the request headers
            </summary>
            <returns>description about the request uri.</returns>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Host">
            <summary>Host implementation for this data service</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Provider">
            <summary>Data provider for this data service</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Instance">
            <summary>Returns the instance of data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#RequestParams">
            <summary>Cached request headers.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#StreamProvider">
            <summary>Reference to IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.CurrentDataSource">
            <summary>The data source used in the current request processing.</summary>
        </member>
        <member name="T:System.Data.Services.DataService`1.BatchDataService">
            <summary>
            Dummy data service for batch requests
            </summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.dataService">
            <summary>Original data service instance.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchRequestStream">
            <summary>batch stream which reads the content of the batch from the underlying request stream.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchBoundary">
            <summary>batch response seperator string.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.contentIds">
            <summary>Hashset to make sure that the content ids specified in the batch are all unique.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.contentIdsToSegmentInfoMapping">
            <summary>Dictionary to track objects represented by each content id within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchElementCount">
            <summary>Number of changset/query operations encountered in the current batch.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchLimitExceeded">
            <summary>Whether the batch limit has been exceeded (implies no further processing should take place).</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchRequestDescription">
            <summary>List of the all request description within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchRequestHost">
            <summary>List of the all response headers and results of each operation within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.changeSetElementCount">
            <summary>Number of CUD operations encountered in the current changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.host">
            <summary>Batch Host which caches the request headers and response headers per operation within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.updatable">
            <summary>Instance which implements IUpdatable interface.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.#ctor(System.Data.Services.IDataService,System.Data.Services.BatchStream,System.String)">
            <summary>
            Creates an instance of the batch data service which keeps track of the 
            request and response headers per operation in the batch
            </summary>
            <param name="dataService">original data service to which the batch request was made</param>
            <param name="batchRequestStream">batch stream which read batch content from the request stream</param>
            <param name="batchBoundary">batch response seperator string.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalApplyingExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
            <summary>
            This method is called during query processing to validate and customize 
            paths for the $expand options are applied by the provider.
            </summary>
            <param name='queryable'>Query which will be composed.</param>
            <param name='expandPaths'>Collection of segment paths to be expanded.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.DisposeDataSource">
            <summary>
            Dispose the data source instance
            </summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.DisposeStreamProvider">
            <summary>
            Dispose the stream provider instance and set it to null
            </summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.HandleBatchContent(System.IO.Stream)">
            <summary>
            Handle the batch content
            </summary>
            <param name="responseStream">response stream for writing batch response</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Gets the value of the given header from the given header collection
            </summary>
            <param name="headers">Dictionary with header names and values.</param>
            <param name="headerName">name of the header whose value needs to be returned.</param>
            <returns>value of the given header.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.CreateHostFromHeaders(System.Data.Services.IDataServiceHost,System.Data.Services.BatchStream,System.Collections.Generic.HashSet{System.Int32},System.String,System.IO.StreamWriter)">
            <summary>
            Creates a batch host from the given headers
            </summary>
            <param name="host">IDataServiceHost implementation host for this data service.</param>
            <param name="batchStream">batch stream which contains the header information.</param>
            <param name="contentIds">content ids that are defined in the batch.</param>
            <param name="boundary">Part separator for host.</param>
            <param name="writer">Output writer.</param>
            <returns>instance of the batch host which represents the current operation.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.CreateRequestParams(System.Data.Services.IDataServiceHost,System.Data.Services.BatchStream)">
            <summary>
            Creates a new instance of CachedRequestParams given the header information
            </summary>
            <param name="host">IDataServiceHost implementation host for this data service.</param>
            <param name="batchStream">batch stream which contains the header information.</param>
            <returns>instance of the CachedRequestParams with all request header information.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetHttpMethodName(System.Data.Services.BatchStreamState)">
            <summary>
            Returns the http method name given the batch stream state
            </summary>
            <param name="state">state of the batch stream.</param>
            <returns>returns the http method name</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.HandleChangesetException(System.Exception,System.Collections.Generic.List{System.Data.Services.BatchServiceHost},System.String,System.IO.StreamWriter)">
            <summary>
            Write the exception encountered in the middle of the changeset to the response
            </summary>
            <param name="exception">exception encountered</param>
            <param name="changesetHosts">list of hosts</param>
            <param name="changesetBoundary">changeset boundary for the current processing changeset</param>
            <param name="writer">writer to which the response needs to be written</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.IncreaseBatchCount">
            <summary>Increases the count of batch changsets/queries found, and checks it is within limits.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.IncreaseChangeSetCount">
            <summary>Increases the count of changeset CUD operations found, and checks it is within limits.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.UpdateRequestEnumerableForPut(System.Data.Services.RequestDescription)">
            <summary>
             For POST operations, the RequestEnumerable could be out of date
             when a PUT is referring to the POST within the changeset.
             We need to update the RequestEnumerable to reflect what actually
             happened to the database.
            </summary>
            <param name="requestDescription">description for the current request.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.WriteRequest(System.Data.Services.RequestDescription,System.Data.Services.BatchServiceHost)">
            <summary>
            Write the response for the given request, if required.
            </summary>
            <param name="description">description of the request uri. If this is null, means that no response needs to be written</param>
            <param name="batchHost">Batch host for which the request should be written.</param>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Host">
            <summary>Host implementation for the batch data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.StreamProvider">
            <summary>Reference to IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Instance">
            <summary>Instance of the data provider.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.RequestParams">
            <summary>Gets the cached request headers.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceConfiguration">
            <summary>Use this class to manage the configuration data for a data service.</summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceConfiguration">
            <summary>
            Use this interface to modify the configuration of a web data service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
            <summary>Sets the access rights on the specified resource set.</summary>
            <param name="name">
            Name of resource set to set; '*' to indicate all 
            resource sets not otherwise specified.
            </param>
            <param name="rights">Rights to be granted to this resource.</param>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
            <summary>Sets the access rights on the specified service operation.</summary>
            <param name="name">
            Name of service operation to set; '*' to indicate all 
            service operations not otherwise specified.
            </param>
            <param name="rights">Rights to be granted to this operation.</param>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
            <summary>
            Add the type to the list of known types for the data service
            </summary>
            <param name="type">interested type whose metadata needs to be considered</param>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
            <summary>Maximum number of change sets and query operations in a batch.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
            <summary>Maximum number of changes in a change set.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
            <summary>Maximum number of segments to be expanded allowed in a request.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
            <summary>Maximum number of segments in a single $expand path.</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
            <summary>Maximum number of elements in each returned collection (top-level or expanded).</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
            <summary>Maximum number of objects that can be referee in each returned collection (top-level or expanded).</summary>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
            <summary>Gets or sets whether verbose errors should be used by default.</summary>
            <remarks>
            This property sets the default for the whole service; individual responses may behave differently
            depending on the value of the VerboseResponse property of the arguments to the HandleException
            method on the <see cref="T:System.Data.Services.DataService`1"/> class.
            </remarks>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.configurationSealed">
            <summary>Whether this configuration has been sealed.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxBatchCount">
            <summary>Maximum number of change sets and query operations in a batch.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxChangeSetCount">
            <summary>Maximum number of changes in a change set.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxExpandCount">
            <summary>Maximum number of segments to be expanded allowed in a request.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxExpandDepth">
            <summary>Maximum number of segments in a single $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxResultsPerCollection">
            <summary>Maximum number of elements in each returned collection (top-level or expanded).</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxObjectCountOnInsert">
            <summary>maximum number of objects that can be referred in a single insert request.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.provider">
            <summary>The provider for the web service.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.rightsForUnspecifiedResourceContainer">
            <summary>Rights used for unspecified resource sets.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.rightsForUnspecifiedServiceOperation">
            <summary>Rights used for unspecified service operations.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.defaultPageSize">
            <summary>Page size for unspecified resource sets</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.resourceRights">
            <summary>A lookup of containers to their rights.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.serviceRights">
            <summary>A lookup of service operations to their rights.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.pageSizes">
            <summary>A lookup of resource sets to their page sizes</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.knownTypes">
            <summary>A list of known types.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.useVerboseErrors">
            <summary>Whether verbose errors should be returned by default.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.typeConversion">
            <summary>
            Perform type conversion from the type specified in the payload to the actual property type.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.#ctor(System.Data.Services.Providers.IDataServiceProvider)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.DataServiceConfiguration"/> with
            the specified <paramref name="provider"/>.
            </summary>
            <param name="provider">Non-null provider for this configuration.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
            <summary>Sets the access rights on the specified resource set.</summary>
            <param name="name">
            Name of resource set to set; '*' to indicate all 
            resource sets not otherwise specified.
            </param>
            <param name="rights">Rights to be granted to this resource.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
            <summary>Sets the access rights on the specified service operation.</summary>
            <param name="name">
            Name of service operation to set; '*' to indicate all 
            service operations not otherwise specified.
            </param>
            <param name="rights">Rights to be granted to this operation.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)">
            <summary>
            Add the type to the list of known types. If there is a type that needs to be added since
            Astoria runtime can't detect it using the default set of rules, providers can add them using
            this method
            </summary>
            <param name="type">type which needs to be added to the known types collection</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)">
            <summary>Sets the page size per entity set</summary>
            <param name="name">Name of entity set, '*' to indicate those for which page size is not explicitly specified</param>
            <param name="size">Page size for the resource set(s) specified in <paramref name="name"/></param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.ComposeQueryInterceptors(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceSet)">
            <summary>Composes all query interceptors into a single expression.</summary>
            <param name="service">Web service instance.</param>
            <param name="container">Container for which interceptors should run.</param>
            <returns>An expression the filter for query interceptors, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.ComposeResourceContainer(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceSet,System.Linq.IQueryable)">
            <summary>
            Composes the specified <paramref name="query"/> for the 
            given <paramref name="container"/> with authorization
            callbacks.
            </summary>
            <param name="service">Data service on which to invoke method.</param>
            <param name="container">resource set to compose with.</param>
            <param name="query">Query to compose.</param>
            <returns>The resulting composed query.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckResourceRights(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ResourceSet,System.Data.Services.EntitySetRights)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="container">Container to check.</param>
            <param name="requiredRights">Required rights.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckResourceRightsForRead(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ResourceSet,System.Boolean)">
            <summary>Checks whether this request has the specified reading rights.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="container">Container to check.</param>
            <param name="singleResult">Whether a single or multiple resources are requested.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckServiceRights(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ServiceOperation,System.Data.Services.ServiceOperationRights)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="operation">Operation to check.</param>
            <param name="requiredRights">Required rights.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckServiceRights(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ServiceOperation,System.Boolean)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="operation">Operation to check.</param>
            <param name="singleResult">Whether a single or multiple resources are requested.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetAllowedMethods(System.Data.Services.DataServiceConfiguration,System.Data.Services.RequestDescription)">
            <summary>Gets a string with methods allowed on the target for the <paramref name="description"/>.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="description">Description with target.</param>
            <returns>A string with methods allowed on the description; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetAllowedMethods(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ResourceSet,System.Data.Services.RequestDescription)">
            <summary>
            Gets a string representation of allowed methods on the container (with the specified target cardinality),
            suitable for an 'Allow' header.
            </summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="container">Targetted container, possibly null.</param>
            <param name="description">Description with target.</param>
            <returns>A value for an 'Allow' header; null if <paramref name="container"/> is null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetResourceSetRights(System.Data.Services.Providers.ResourceSet)">
            <summary>Gets the effective rights on the specified container.</summary>
            <param name="container">Container to get rights for.</param>
            <returns>The effective rights as per this configuration.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetServiceOperationRights(System.Data.Services.Providers.ServiceOperation)">
            <summary>Gets the effective rights on the specified operation.</summary>
            <param name="serviceOperation">Operation to get rights for.</param>
            <returns>The effective rights as per this configuration.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetResourceSetPageSize(System.Data.Services.Providers.ResourceSet)">
            <summary>Gets the page size per entity set</summary>
            <param name="container">Entity set for which to get the page size</param>
            <returns>Page size for the <paramref name="container"/></returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetKnownTypes">
            <summary>Returns the list of types registered by the data service.</summary>
            <returns>The list of types as registered by the data service</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.InvokeStaticInitialization(System.Type)">
            <summary>
            Invokes the static service initialization methods on the 
            specified type family.
            </summary>
            <param name="type">Type of service to initialize for.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.RegisterCallbacks(System.Type)">
            <summary>
            Register authorization callbacks specified on the given
            <paramref name="type"/>.
            </summary>
            <param name="type">Type of web data service to check.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.Seal">
            <summary>Seals this configuration instance and prevents further changes.</summary>
            <remarks>
            This method should be called after the configuration has been set up and before it's placed on the
            metadata cache for sharing.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.AppendRight(System.Data.Services.EntitySetRights,System.Data.Services.EntitySetRights,System.String,System.Text.StringBuilder)">
            <summary>
            Appends the <paramref name="name"/> of a right if the <paramref name="test"/> right is enabled 
            on <paramref name="entitySetRights"/>.
            </summary>
            <param name="entitySetRights">Rights to be checked.</param>
            <param name="test">Right being looked for.</param>
            <param name="name">Name of right to append.</param>
            <param name="builder">Comma-separated list of right names to append to.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckQueryInterceptorSignature(System.Type,System.Reflection.MethodInfo,System.Data.Services.Providers.ResourceSet)">
            <summary>Checks that the specified <paramref name="method"/> has a correct signature.</summary>
            <param name="type">Service type.</param>
            <param name="method">Method to check.</param>
            <param name="container">Container associated with the interceptor.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckParameterIsNotOut(System.Reflection.MethodInfo,System.Reflection.ParameterInfo)">
            <summary>Verifies that the specified <paramref name="parameter"/> is not an [out] parameter.</summary>
            <param name="method">Method with parameter to check.</param>
            <param name="parameter">Parameter to check.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckNonNegativeProperty(System.Int32,System.String)">
            <summary>
            Checks that the specified <paramref name="value"/> for the named property is not negative and that the
            configuration isn't sealed.
            </summary>
            <param name="value">Value to check.</param>
            <param name="propertyName">Parameter name.</param>
            <returns>The <paramref name="value"/> to set.</returns>
            <remarks>
            This method is typically used in properties with the following pattern:
            <code>public int Foo { get {... } set { this.foo = this.CheckNonNegativeProperty(value, "Foo"); } }</code>
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckNotSealed">
            <summary>Checks that this configuration hasn't been sealed yet.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion">
            <summary>
            Specifies whether the data service runtime should do type conversion from the payload type
            to the actual property type in POST/PUT/MERGE requests.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount">
            <summary>Maximum number of change sets and query operations in a batch.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount">
            <summary>Maximum number of changes in a change set.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount">
            <summary>Maximum number of segments to be expanded allowed in a request.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth">
            <summary>Maximum number of segments in a single $expand path.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection">
            <summary>Maximum number of elements in each returned collection (top-level or expanded).</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert">
            <summary>Maximum number of objects that can be referred in a single POST request.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors">
            <summary>Gets or sets whether verbose errors should be used by default.</summary>
            <remarks>
            This property sets the default for the whole service; individual responses may behave differently
            depending on the value of the VerboseResponse property of the arguments to the HandleException
            method on the <see cref="T:System.Data.Services.DataService`1"/> class.
            </remarks>
        </member>
        <member name="T:System.Data.Services.DataServiceException">
            <summary>
            The exception that is thrown when an error occurs while processing
            a web data service request.
            </summary>
            <remarks>
            The DataServiceException is thrown to indicate an error during
            request processing, specifying the appropriate response for
            the request.
            
            RFC2616 about the status code values:
                1xx: Informational  - Request received, continuing process
                "100"  ; Section 10.1.1: Continue
                "101"  ; Section 10.1.2: Switching Protocols
                
                2xx: Success        - The action was successfully received, understood, and accepted
                "200"  ; Section 10.2.1: OK
                "201"  ; Section 10.2.2: Created
                "202"  ; Section 10.2.3: Accepted
                "203"  ; Section 10.2.4: Non-Authoritative Information
                "204"  ; Section 10.2.5: No Content
                "205"  ; Section 10.2.6: Reset Content
                "206"  ; Section 10.2.7: Partial Content
                
                3xx: Redirection    - Further action must be taken in order to complete the request
                "300"  ; Section 10.3.1: Multiple Choices
                "301"  ; Section 10.3.2: Moved Permanently
                "302"  ; Section 10.3.3: Found
                "303"  ; Section 10.3.4: See Other
                "304"  ; Section 10.3.5: Not Modified
                "305"  ; Section 10.3.6: Use Proxy
                "307"  ; Section 10.3.8: Temporary Redirect
                
                4xx: Client Error   - The request contains bad syntax or cannot be fulfilled
                "400"  ; Section 10.4.1: Bad Request
                "401"  ; Section 10.4.2: Unauthorized
                "402"  ; Section 10.4.3: Payment Required
                "403"  ; Section 10.4.4: Forbidden
                "404"  ; Section 10.4.5: Not Found
                "405"  ; Section 10.4.6: Method Not Allowed
                "406"  ; Section 10.4.7: Not Acceptable
                "407"  ; Section 10.4.8: Proxy Authentication Required
                "408"  ; Section 10.4.9: Request Time-out
                "409"  ; Section 10.4.10: Conflict
                "410"  ; Section 10.4.11: Gone
                "411"  ; Section 10.4.12: Length Required
                "412"  ; Section 10.4.13: Precondition Failed
                "413"  ; Section 10.4.14: Request Entity Too Large
                "414"  ; Section 10.4.15: Request-URI Too Large
                "415"  ; Section 10.4.16: Unsupported Media Type
                "416"  ; Section 10.4.17: Requested range not satisfiable
                "417"  ; Section 10.4.18: Expectation Failed
                
                5xx: Server Error   - The server failed to fulfill an apparently valid request
                "500"  ; Section 10.5.1: Internal Server Error
                "501"  ; Section 10.5.2: Not Implemented
                "502"  ; Section 10.5.3: Bad Gateway
                "503"  ; Section 10.5.4: Service Unavailable
                "504"  ; Section 10.5.5: Gateway Time-out
                "505"  ; Section 10.5.6: HTTP Version not supported
            </remarks>
        </member>
        <member name="F:System.Data.Services.DataServiceException.messageLanguage">
            <summary>Language for the exception message.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceException.errorCode">
            <summary>Error code to be used in payloads.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceException.statusCode">
            <summary>HTTP response status code for this exception.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceException.responseAllowHeader">
            <summary>'Allow' response for header.</summary>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor">
            <summary>
            Initializes a new instance of the DataServiceException class.
            </summary>
            <remarks>
            The Message property is initialized to a system-supplied message 
            that describes the error. This message takes into account the 
            current system culture. The StatusCode property is set to 500
            (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataServiceException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <remarks>
            The StatusCode property is set to 500 (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DataServiceException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Exception that caused this exception to be thrown.</param>
            <remarks>
            The StatusCode property is set to 500 (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the DataServiceException class.
            </summary>
            <param name="statusCode">HTTP response status code for this exception.</param>
            <param name="message">Plain text error message for this exception.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DataServiceException class.
            </summary>
            <param name="statusCode">HTTP response status code for this exception.</param>
            <param name="errorCode">Error code to be used in payloads.</param>
            <param name="message">Plain text error message for this exception.</param>
            <param name="messageXmlLang">Language of the <paramref name="message"/>.</param>
            <param name="innerException">Exception that caused this exception to be thrown.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DataServiceException class from the 
            specified SerializationInfo and StreamingContext instances.
            </summary>
            <param name="serializationInfo">
            A SerializationInfo containing the information required to serialize 
            the new DataServiceException.
            </param>
            <param name="streamingContext">
            A StreamingContext containing the source of the serialized stream 
            associated with the new DataServiceException.
            </param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateDeepRecursion(System.Int32)">
            <summary>Creates a new "Bad Request" exception for recursion limit exceeded.</summary>
            <param name="recursionLimit">Recursion limit that was reaced.</param>
            <returns>A new exception to indicate that the request is rejected.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateForbidden">
            <summary>Creates a new "Forbidden" exception.</summary>
            <returns>A new exception to indicate that the request is forbidden.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateResourceNotFound(System.String)">
            <summary>Creates a new "Resource Not Found" exception.</summary>
            <param name="identifier">segment identifier information for which resource was not found.</param>
            <returns>A new exception to indicate the requested resource cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.ResourceNotFoundError(System.String)">
            <summary>Creates a new "Resource Not Found" exception.</summary>
            <param name="errorMessage">Plain text error message for this exception.</param>
            <returns>A new exception to indicate the requested resource cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateSyntaxError">
            <summary>Creates a new exception to indicate a syntax error.</summary>
            <returns>A new exception to indicate a syntax error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateSyntaxError(System.String)">
            <summary>Creates a new exception to indicate a syntax error.</summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a syntax error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreatePreConditionFailedError(System.String)">
            <summary>
            Creates a new exception to indicate Precondition error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a Precondition failed error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreatePreConditionFailedError(System.String,System.Exception)">
            <summary>
            Creates a new exception to indicate Precondition error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Inner Exception.</param>
            <returns>A new exception to indicate a Precondition failed error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateBadRequestError(System.String)">
            <summary>
            Creates a new exception to indicate BadRequest error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a bad request error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateBadRequestError(System.String,System.Exception)">
            <summary>
            Creates a new exception to indicate BadRequest error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Inner Exception.</param>
            <returns>A new exception to indicate a bad request error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateMethodNotAllowed(System.String,System.String)">
            <summary>Creates a new "Method Not Allowed" exception.</summary>
            <param name="message">Error message.</param>
            <param name="allow">String value for 'Allow' header in response.</param>
            <returns>A new exception to indicate the requested method is not allowed on the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateMethodNotImplemented(System.String)">
            <summary>
            Creates a new exception to indicate MethodNotImplemented error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a MethodNotImplemented error.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceException.ErrorCode">
            <summary>Error code to be used in payloads.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.MessageLanguage">
            <summary>Language for the exception Message.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.StatusCode">
            <summary>Response status code for this exception.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.ResponseAllowHeader">
            <summary>'Allow' response for header.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceHost">
            <summary>
            This structure supports the .NET Framework infrastructure and is 
            not intended to be used directly from your code.
            </summary>
            <internal>
            Provides a host for services of type DataService.
            </internal>
        </member>
        <member name="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])">
            <summary>
            Initializes a new instance of the ServiceHost class with the type
            of service and its base addresses specified.
            </summary>
            <param name="serviceType">The type of hosted service.</param>
            <param name="baseAddresses">An array of type Uri that contains the base addresses for the hosted service.</param>
        </member>
        <member name="T:System.Data.Services.DataServiceHostFactory">
            <summary>
            This structure supports the .NET Framework infrastructure and is 
            not intended to be used directly from your code.
            </summary>
            <internal>
            This class is used to hook up a WCF as a raw HTTP handler.
            </internal>
        </member>
        <member name="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
            <summary>
            Creates a ServiceHost for a specified type of service with a specific base address.
            </summary>
            <param name="serviceType">Specifies the type of service to host.</param>
            <param name="baseAddresses">The Array of type Uri that contains the base addresses for the service hosted.</param>
            <returns>A ServiceHost for the type of service specified with a specific base address.</returns>
        </member>
        <member name="T:System.Data.Services.DelegateBodyWriter">
            <summary>Use this class to handle writing body contents using a callback.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.service">
            <summary>Service to dispose data source from once the response is written.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.writerAction">
            <summary>Callback.</summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.#ctor(System.Action{System.IO.Stream},System.Data.Services.IDataService)">
            <summary>Initializes a new <see cref="T:System.Data.Services.DelegateBodyWriter"/> instance.</summary>
            <param name="writer">Callback for writing.</param>
            <param name="service">Service to dispose data source from once the response is written.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
            <summary>Called when the message body is written to an XML file.</summary>
            <param name="writer">
            An <see cref="T:System.Xml.XmlDictionaryWriter"/> that is used to write this 
            message body to an XML file.
            </param>
        </member>
        <member name="T:System.Data.Services.DelegateBodyWriter.XmlWriterStream">
            <summary>Use this class to write to an <see cref="T:System.Xml.XmlDictionaryWriter"/>.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.XmlWriterStream.innerWriter">
            <summary>Target writer.</summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.#ctor(System.Xml.XmlDictionaryWriter)">
            <summary>Initializes a new <see cref="T:System.Data.Services.DelegateBodyWriter.XmlWriterStream"/> instance.</summary>
            <param name="xmlWriter">Target writer.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered 
            data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and 
            advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains 
            the specified byte array with the values between <paramref name="offset"/> 
            and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced 
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in <paramref name="buffer"/> at which to 
            begin storing the data read from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the position within the current stream.</summary>
            <param name="offset">
            A byte offset relative to the <paramref name="origin"/> parameter.
            </param>
            <param name="origin">
            A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference 
            point used to obtain the new position.
            </param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.SetLength(System.Int64)">
            <summary>Sets the length of the current stream.</summary>
            <param name="value">New value for length.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances 
            the current position within this stream by the number of 
            bytes written. 
            </summary>
            <param name="buffer">
            An array of bytes. This method copies <paramref name="count"/> 
            bytes from <paramref name="buffer"/> to the current stream.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin copying 
            bytes to the current stream.
            </param>
            <param name="count">
            The number of bytes to be written to the current stream.
            </param>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanRead">
            <summary>Gets a value indicating whether the current stream supports reading.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanSeek">
            <summary>Gets a value indicating whether the current stream supports seeking.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanWrite">
            <summary>Gets a value indicating whether the current stream supports writing.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Length">
            <summary>Gets the length in bytes of the stream.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Position">
            <summary>Gets or sets the position within the current stream.</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmAttributeNameBuilder">
            <summary>
            Build attribute names corresponding to ones in csdl file
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmAttributeNameBuilder.index">
            <summary>Current index</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmAttributeNameBuilder.postFix">
            <summary>PostFix for current attribute names</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmAttributeNameBuilder.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmAttributeNameBuilder.MoveNext">
            <summary>Move to next attribute name generation</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmKeepInContent">
            <summary>KeepInContent</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmSourcePath">
            <summary>SourcePath</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmTargetPath">
            <summary>Target Path</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmContentKind">
            <summary>ContentKind</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmNsPrefix">
            <summary>Namespace Prefix</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmAttributeNameBuilder.EpmNsUri">
            <summary>Namespace Uri</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializer">
            <summary>DeSerializer for reading EPM content</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializer.resourceType">
            <summary><see cref="T:System.Data.Services.Providers.ResourceType"/> for which this serializer works</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializer.element">
            <summary>Object for which this serializer works</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.#ctor(System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>
            Constructor creates contained serializers
            </summary>
            <param name="resourceType">Resource type being serialized</param>
            <param name="element">Instance of <paramref name="resourceType"/></param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.DeSerialize(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState)">
            <summary>Delegates to each of custom and syndication deserializers for serializing content</summary>
            <param name="item"><see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> to deserialize</param>
            <param name="state">State of the deserializer</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState">
            <summary>Representation of deserializer state</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState.IsUpdateOperation">
            <summary>Is current operation an update</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState.Updatable">
            <summary>IUpdatable used for updating the object</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState.Service">
            <summary>Service instance</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState.PropertiesApplied">
            <summary>Properties that have been applied</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo">
            <summary>Holder of information about properties applied during deserialization of an object</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.properties">
            <summary>Properties already applied</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.propertyToTypeNameMap">
            <summary>Map from properties to their corresponding type names</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.AddAppliedProperty(System.String,System.Boolean)">
            <summary>Adds the given property to the collection of applied ones</summary>
            <param name="propertyPath">Path of property</param>
            <param name="wholePathCovered">Does the path include all sub-properties</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.AddPropertyToTypeMapItem(System.String,System.String)">
            <summary>Adds the given property to the collection of applied ones</summary>
            <param name="propertyPath">Path of property</param>
            <param name="typeName">Type of the property</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.Lookup(System.String)">
            <summary>Checks if the given path is already applied</summary>
            <param name="propertyPath">Given property path</param>
            <returns>true if the property has already been applied, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.MapPropertyToType(System.String)">
            <summary>Looksup the type given a property path</summary>
            <param name="propertyPath">Given property path</param>
            <returns>String containing mapped type name, null otherwise</returns>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.Properties">
            <summary>Propeties already applied</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.PropertyToTypeNameMap">
            <summary>Propeties to type name mappings</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmAppliedProperty">
            <summary>Property that is applied</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmAppliedProperty.PropertyPath">
            <summary>Path of property</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmAppliedProperty.ApplyRecursive">
            <summary>Is the property application path considered recursive</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmPropertyToTypeMappingElement">
            <summary>Maps a property path with the type</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmPropertyToTypeMappingElement.PropertyPath">
            <summary>Path of property</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo.EpmPropertyToTypeMappingElement.TypeName">
            <summary>Type of the property</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentDeSerializerBase">
            <summary>
            Base EPM deserializer class
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializerBase.item">
            <summary><see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> from which to read EPM content</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentDeSerializerBase.state">
            <summary>Deserializer state</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializerBase.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState)">
            <summary>Constructor</summary>
            <param name="item"><see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> from which to read EPM content</param>
            <param name="state">State of the deserializer</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentDeSerializerBase.Match(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo)">
            <summary>
            Matches the targetSegment with properties already applied and if finds something already applied considers it a match
            </summary>
            <param name="targetSegment">Target segment for which existing property application is checked for</param>
            <param name="propertiesApplied">Properties already applied based on content</param>
            <returns>true if already the property for the current segment has been applied</returns>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializerBase.Updatable">
            <summary>Object update interface</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializerBase.IsUpdateOperation">
            <summary>Are we deserializing for an update operation</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializerBase.Service">
            <summary>Current service instance</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializerBase.PropertiesApplied">
            <summary>Current service instance</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentDeSerializerBase.Item">
            <summary>SyndicationItem to read EPM content from</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentSerializer">
            <summary>
            Publically visible interface of the Content serializer, acts as container for both Custom and Syndication content serializers
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.resourceType">
            <summary><see cref="T:System.Data.Services.Providers.ResourceType"/> for which this serializer works</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.epmSyndicationSerializer">
            <summary>
            Syndication specific content serializer
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.epmCustomSerializer">
            <summary>
            Custom content serializer
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.targetItem">
            <summary>
            Target syndication item to which we add serialized content
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.nullValuedProperties">
            <summary>Collection of null valued properties for this current serialization</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.#ctor(System.Data.Services.Providers.ResourceType,System.Object,System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Constructor creates contained serializers
            </summary>
            <param name="resourceType">Resource type being serialized</param>
            <param name="value">Instance of <paramref name="resourceType"/></param>
            <param name="targetItem">SyndicationItem to which content will be added</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.Dispose">
            <summary>
            Cleansup visitor specific state of the target tree
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.Serialize(System.Data.Services.Serializers.DictionaryContent,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Delegates to each of custom and syndication serializers for serializing content</summary>
            <param name="content">Content in which to write null valued properties</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializer.NeedEpmSerialization">
            <summary>Does this type have any entity property mappings at all</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree">
            <summary>Tree representing null valued properties for an instance</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.root">
            <summary>Root of the tree</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.#ctor">
            <summary>Constructor that creates the root of the tree</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.Add(System.Data.Services.Common.EntityPropertyMappingInfo)">
            <summary>Adds a property to the null valued collection</summary>
            <param name="epmInfo">EpmInfo containing the property information such as path</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.AddNullValuesToContent(System.Data.Services.Serializers.DictionaryContent)">
            <summary>Adds the null valued properties to the content section</summary>
            <param name="content">Content to which null properties are to be added</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.AddNullValuesToContent(System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.EpmNullValuedPropertyNode,System.Data.Services.Serializers.DictionaryContent)">
            <summary>Adds the null valued properties to the content section of a syndication entry</summary>
            <param name="currentRoot">Current root node</param>
            <param name="currentContent">Current collection to which property is to be added</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.EpmNullValuedPropertyNode">
            <summary>
            Representation for a node in the <see cref="T:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.EpmNullValuedPropertyNode.children">
            <summary>Children of current node</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.EpmNullValuedPropertyNode.Name">
            <summary>Name of the property</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree.EpmNullValuedPropertyNode.Children">
            <summary>Lazily creates the children collection and returns the collection</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmSerializationKind">
            <summary>
            What kind of xml nodes to serialize
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSerializationKind.Attributes">
            <summary>
            Serialize only attributes
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSerializationKind.Elements">
            <summary>
            Serialize only elements
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSerializationKind.All">
            <summary>
            Serialize everything
            </summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmContentSerializerBase">
            <summary>
            Base visitor class for performing serialization of content whose location in the syndication
            feed is provided through EntityPropertyMappingAttributes
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializerBase.#ctor(System.Data.Services.Common.EpmTargetTree,System.Boolean,System.Object,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Constructor decided whether to use syndication or non-syndication sub-tree for target content mappings
            </summary>
            <param name="tree">Target tree containing mapping information</param>
            <param name="isSyndication">Helps in deciding whether to use syndication sub-tree or non-syndication one</param>
            <param name="element">Object to be serialized</param>
            <param name="target">SyndicationItem to which content will be added</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializerBase.Serialize(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Public interface used by the EpmContentSerializer class</summary>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmContentSerializerBase.Serialize(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Common.EpmSerializationKind,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Internal interface to be overridden in the subclasses. 
            Goes through each subsegments and invokes itself for the children
            </summary>
            <param name="targetSegment">Current root segment in the target tree</param>
            <param name="kind">Which sub segments to serialize</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializerBase.Root">
            <summary>Root of the target tree containing mapped xml elements/attribute</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializerBase.Element">
            <summary>Object whose properties we will read</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializerBase.Target">
            <summary>Target SyndicationItem on which we are going to add the serialized content</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmContentSerializerBase.Success">
            <summary>Indicates the success or failure of serialization</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmCustomContentDeSerializer">
            <summary>Custom content reader for EPM content</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentDeSerializer.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState)">
            <summary>Constructor</summary>
            <param name="item"><see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> to read content from</param>
            <param name="state">State of the deserializer</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentDeSerializer.DeSerialize(System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Publicly accessible deserialization entry point</summary>
            <param name="resourceType">Type of resource to deserialize</param>
            <param name="element">Token corresponding to object of <paramref name="resourceType"/></param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentDeSerializer.DeSerialize(System.Xml.XmlReader,System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Called internally to deserialize each <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension"/></summary>
            <param name="reader">XmlReader for current extension</param>
            <param name="currentRoot">Node in the target path being processed</param>
            <param name="resourceType">ResourceType</param>
            <param name="element">object being deserialized</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmCustomContentSerializer">
            <summary>
            Base visitor class for performing serialization of custom content in the feed entry whose mapping
            is provided through EntityPropertyMappingAttributes
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmCustomContentSerializer.disposed">
            <summary>IDisposable helper state</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmCustomContentSerializer.visitorContent">
            <summary>
            Dictionary mapping visitor content and with target paths
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.#ctor(System.Data.Services.Common.EpmTargetTree,System.Object,System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Constructor initializes the base class be identifying itself as a custom content serializer
            </summary>
            <param name="targetTree">Target tree containing mapping information</param>
            <param name="element">Object to be serialized</param>
            <param name="target">SyndicationItem to which content will be added</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.Dispose">
            <summary>
            Closes all the XmlWriter and MemoryStream objects in the tree and adds them to the SyndicationItem 
            as ElementExtensions. Invokes the NodeDataCleaner to dispose off any existing memory stream and 
            XmlWriter objects
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.Serialize(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Common.EpmSerializationKind,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Override of the base Visitor method, which actually performs mapping search and serialization
            </summary>
            <param name="targetSegment">Current segment being checked for mapping</param>
            <param name="kind">Which sub segments to serialize</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.WriteAttribute(System.Data.Services.Common.EpmTargetPathSegment)">
            <summary>
            Given a segment, writes the attribute to xml writer corresponding to it
            </summary>
            <param name="targetSegment">Segment being written</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.WriteElement(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Given a segment, writes the element to xml writer corresponding to it, works recursively to write child elements/attributes
            </summary>
            <param name="targetSegment">Segment being written</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.InitializeVisitorContent(System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Initializes content for the serializer visitor</summary>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentSerializer.InitializeSubSegmentVisitorContent(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Initialize the visitor content for all of root's grandchildren and beyond</summary>
            <param name="subSegment">One of root's children</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmCustomContentWriterNodeData">
            <summary>
            Data held by each node in the EpmTargetTree containing information used by the
            EpmCustomContentWriter visitor
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmCustomContentWriterNodeData.disposed">
            <summary>
            IDisposable helper state
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentWriterNodeData.#ctor(System.Data.Services.Common.EpmTargetPathSegment,System.Object,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Initializes the per node data for custom serializer</summary>
            <param name="segment">Segment in target tree corresponding to this node</param>
            <param name="element">Object from which to read properties</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentWriterNodeData.#ctor(System.Data.Services.Common.EpmCustomContentWriterNodeData,System.Data.Services.Common.EpmTargetPathSegment,System.Object,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Initializes the per node data for custom serializer</summary>
            <param name="parentData">Parent node whose xml writer we are going to reuse</param>
            <param name="segment">Segment in target tree corresponding to this node</param>
            <param name="element">Object from which to read properties</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentWriterNodeData.Dispose">
            <summary>
            Closes XmlWriter and disposes the MemoryStream
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentWriterNodeData.AddContentToTarget(System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Adds the content generated through custom serialization to the SyndicationItem or XmlWriter
            </summary>
            <param name="target">SyndicationItem or XmlWriter being serialized</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmCustomContentWriterNodeData.PopulateData(System.Data.Services.Common.EpmTargetPathSegment,System.Object,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Populates the data value corresponding to this node, also updates the list of null attributes
            in the parent null attribute list if current node is attribute with null value
            </summary>
            <param name="segment">Segment being populated</param>
            <param name="element">Object whose property will be read</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmCustomContentWriterNodeData.XmlContentStream">
            <summary>
            Memory stream on top of which XmlWriter works
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmCustomContentWriterNodeData.XmlContentWriter">
            <summary>
            Xml writer used for holding custom content fragment
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmCustomContentWriterNodeData.Data">
            <summary>Data for current node</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextServiceProvider">
            <summary>
            This class contains code for translating epm information stored in Metadata properties to objects of EpmPropertyInformation class
            !!! THIS CODE IS USED BY System.Data.Services.Providers.ObjectContextProvider *AND* System.Data.EntityModel.Emitters.AttributeEmitter CLASSES !!!
            </summary>
            <summary>
            Provides a reflection-based IDataServiceProvider implementation.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.BaseServiceProvider">
            <summary>Provides a reflection-based <see cref="T:System.Data.Services.Providers.IDataServiceProvider"/> implementation.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceProvider">
            <summary>
            Provides a metadata and query source abstraction for a 
            web data service's store.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.DisposeDataSource">
            <summary>Disposes of the underlying <see cref="P:System.Data.Services.Providers.IDataServiceProvider.CurrentDataSource"/>.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.TryResolveResourceSet(System.String)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <returns>Resolved resource set, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetSetForResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the name of the container that holds this resource type.</summary>
            <param name="resourceType">Resource type to get container for.</param>
            <returns>
            The name of the container for the specified resource; null if it cannot
            be determined.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the resource set.
            </summary>
            <param name="resourceSet">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the set; null if there is 
            no set for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.TryResolveResourceType(System.String)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <returns>Resolved resource type, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="instance"/>.</summary>
            <param name="target">Target instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="instance"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="instance"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.TryResolveServiceOperation(System.String)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <returns>Resolved service operation, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetPropertyValue(System.Object,System.String)">
            <summary>
            Get the value of the open property.
            </summary>
            <param name="target">instance of the type declaring the open property.</param>
            <param name="propertyName">name of the open property.</param>
            <returns>value for the open property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation and returns the results.
            </summary>
            <param name="serviceOperation">service operation to invoke.</param>
            <param name="parameters">value of parameters to pass to the service operation.</param>
            <returns>returns the result of the service operation. If the service operation returns void, then this should return null.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.CurrentDataSource">
            <summary>The data source from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.Types">
            <summary>Returns all the types in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProvider.ServiceOperations">
            <summary>Returns all the service operations in this data source</summary>
        </member>
        <member name="T:System.Data.Services.Providers.IExpandProvider2">
            <summary>
            This interface declares the methods required to support the $expand
            query option for an ADO.NET Data Service. This interface is a superset
            of <see cref="T:System.Data.Services.IExpandProvider"/> interface and adds support for paging
            in the expanded results.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IExpandProvider2.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <param name="orderingInfo">List of expressions to sort the topmost result by. 
            The parameter is used for generating the skiptoken for the result items</param>
            <param name="skipCount">Number of rows to skip from the outermost result. null means ignore the parameter.</param>
            <param name="takeCount">Number of rows to take from the outermost result. null means igonore the parameter.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>. The result will have at most
            <paramref name="takeCount"/> elements if <paramref name="takeCount"/> is non-zero.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="topLevelOrderingInfo"/> then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.ResourceContainerBindingFlags">
            <summary>Bindings Flags to be used for reflection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.instance">
            <summary>Instance from which data is provided.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.metadata">
            <summary>Metadata to be used by the service provider.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.dataServiceInstance">
            <summary>instance of the service to invoke service operations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.providerWrapper">
            <summary>
            Reference back to the provider wrapper.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.#ctor(System.Data.Services.Caching.MetadataCacheItem,System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.BaseServiceProvider instance.
            </summary>
            <param name="metadata">Metadata for this provider.</param>
            <param name="dataSourceInstance">instance of the data source provider.</param>
            <param name="dataServiceInstance">data service instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <param name="orderingInfo">List of expressions to sort the topmost result by. 
            The parameter is used for generating the skiptoken for the result items</param>
            <param name="skipCount">Number of rows to skip from the outermost result. 0 means ignore the parameter.</param>
            <param name="takeCount">Number of rows to take from the outermost result. 0 means igonore the parameter.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>. The result will have at most
            <paramref name="takeCount"/> elements if <paramref name="takeCount"/> is non-zero.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="topLevelOrderingInfo"/> then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetSetForResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the name of the container that holds this resource type.</summary>
            <param name="resourceType">Resource to get container for.</param>
            <returns>
            The name of the container for the specified resource; null if it cannot
            be determined.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetTypeIsOrdered(System.Type)">
            <summary>
            Checks whether the specified <paramref name="type"/> is ordered.
            </summary>
            <param name="type">Type to check.</param>
            <returns>true if the type may be ordered; false otherwise.</returns>
            <remarks>
            The ordering may still fail at runtime; this method is currently
            used for cleaner error messages only.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetService(System.Type)">
            <summary>
            Returns the requested service
            </summary>
            <param name="serviceType">type of service you are requesting for.</param>
            <returns>returns the instance of the requested service.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.DisposeDataSource">
            <summary>Disposes of the underlying <see cref="P:System.Data.Services.Providers.BaseServiceProvider.CurrentDataSource"/>.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.System#IDisposable#Dispose">
            <summary>Releases the current data source object as necessary.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the container.
            </summary>
            <param name="container">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="instance"/>.</summary>
            <param name="resource">Instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="instance"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="instance"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveResourceSet(System.String)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <returns>Resolved resource set, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveServiceOperation(System.String)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <returns>Resolved operation, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveResourceType(System.String)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <returns>Resolved resource type, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. If the property is not present, return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation instance.
            </summary>
            <param name="serviceOperation">metadata for the service operation to invoke.</param>
            <param name="parameters">list of parameters to pass to the service operation.</param>
            <returns>returns the result by the service operation instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetIEnumerableElement(System.Type)">
            <summary>
            Returns the type of the IEnumerable if the type implements IEnumerable interface; null otherwise.
            </summary>
            <param name="type">type that needs to be checked</param>
            <returns>Element type if the type implements IEnumerable, else returns null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetGenericInterfaceElementType(System.Type,System.Reflection.TypeFilter)">
            <summary>
            Returns the "T" in the IQueryable of T implementation of type.
            </summary>
            <param name="type">Type to check.</param>
            <param name="typeFilter">filter against which the type is checked</param>
            <returns>
            The element type for the generic IQueryable interface of the type,
            or null if it has none or if it's ambiguous.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ImplementsIUpdatable">
            <summary>
            Checks whether the provider implements IUpdatable.
            </summary>
            <returns>returns true if the provider implements IUpdatable. otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.AddOperationsFromType(System.Type)">
            <summary>Adds service operations based on methods of the specified type.</summary>
            <param name="type">Type with methods to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadata">
            <summary>Populates the metadata for the given provider.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ApplyConfiguration(System.Data.Services.DataServiceConfiguration)">
            <summary>
            Applies access rights to entity sets
            </summary>
            <param name="configuration">Data service configuration instance with access right info.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.MakeMetadataReadonly">
            <summary>Make all the metadata readonly</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetIQueryableElement(System.Type)">
            <summary>
            Returns the type of the IQueryable if the type implements IQueryable interface
            </summary>
            <param name="type">clr type on which IQueryable check needs to be performed.</param>
            <returns>Element type if the property type implements IQueryable, else returns null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryGetType(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Type,System.Data.Services.Providers.ResourceType@)">
            <summary>
            Find the corresponding ResourceType for a given Type, primitive or not
            </summary>
            <param name="knownTypes">Non-primitive types to search</param>
            <param name="type">Type to look for</param>
            <param name="resourceType">Corresponding ResourceType, if found</param>
            <returns>True if type found, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.CheckConfigurationConsistency(System.Object,System.Data.Services.DataServiceConfiguration)">
            <summary>Checks that the applied configuration is consistent.</summary>
            <param name='dataSourceInstance'>Instance of the data source for the provider.</param>
            <param name="configuration">Data service configuration instance with access right info.</param>
            <remarks>At this point in initialization, metadata trimming hasn't taken place.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.Dispose(System.Boolean)">
            <summary>Releases the current data source object as necessary.</summary>
            <param name="disposing">
            Whether this method is called from an explicit call to Dispose by 
            the consumer, rather than during finalization.
            </param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetSingleResource(System.Object)">
            <summary>
            Returns the resource type of the given instance and validates that the instance returns a single resource.
            </summary>
            <param name="resource">clr instance of a resource.</param>
            <returns>resource type of the given instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetResourceContainerInstance(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Creates the object query for the given resource set and returns it
            </summary>
            <param name="resourceContainer">resource set for which IQueryable instance needs to be created</param>
            <returns>returns the IQueryable instance for the given resource set</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadata(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IDictionary{System.String,System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populates the metadata for the given provider
            </summary>
            <param name="knownTypes">list of known types</param>
            <param name="childTypes">list of known types and their immediate children</param>
            <param name="entitySets">list of entity sets</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source type</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadataForType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="knownTypes">list of already known resource types.</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.IQueryableTypeFilter(System.Type,System.Object)">
            <summary>Filter callback for finding IQueryable implementations.</summary>
            <param name="m">Type to inspect.</param>
            <param name="filterCriteria">Filter criteria.</param>
            <returns>true if the specified type is an IQueryable of T; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.IEnumerableTypeFilter(System.Type,System.Object)">
            <summary>Filter callback for finding IEnumerable implementations.</summary>
            <param name="m">Type to inspect.</param>
            <param name="filterCriteria">Filter criteria.</param>
            <returns>true if the specified type is an IEnumerable of T; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.AddServiceOperation(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Adds a new <see cref="T:System.Data.Services.Providers.ServiceOperation"/> based on the specified <paramref name="method"/>
            instance.
            </summary>
            <param name="method">Method to expose as a service operation.</param>
            <param name="invoke">Whether invocation is required.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetNonPrimitiveType(System.Type)">
            <summary>
            Returns the resource type for the corresponding clr type.
            If the given clr type is a collection, then resource type describes the element type of the collection.
            </summary>
            <param name="type">clrType whose corresponding resource type needs to be returned</param>
            <returns>Returns the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryFindAnyContainerForType(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet@)">
            <summary>
            Looks for the first resource set that the specified <paramref name="type"/>
            could belong to.
            </summary>
            <param name="type">Type to look for.</param>
            <param name="container">After the method returns, the container to which the type could belong.</param>
            <returns>true if a container was found; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.CurrentDataSource">
            <summary>Returns the instance from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
            <returns>An enumerable object with all available containers.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.Types">
            <summary>Returns all the types in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ServiceOperations">
            <summary>Returns all known service operations.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.CompatibleWithV1Schema">
            <summary>Returns true if the metadata is compatible with Edm V1 Schema otherwise false</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.EpmIsV1Compatible">
            <summary>
            Does the provider searialize in a V1 compatible way
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ProviderWrapper">
            <summary>
            Reference back to the provider wrapper.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.EntitySets">
            <summary>Returns the list of entity sets.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.Type">
            <summary>Target type for the data provider </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.TypeCache">
            <summary>Cache of resource properties per type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ChildTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="T:System.Data.Services.IUpdatable">
            <summary>
            This interface declares the methods required for supporting
            update of resources
            </summary>
        </member>
        <member name="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="targetResource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="T:System.Data.Services.IConcurrencyProvider">
            <summary>
            This interface declares the methods required for passing
            etag values to the provider.
            </summary>
        </member>
        <member name="M:System.Data.Services.IConcurrencyProvider.SetConcurrencyValues(System.Object,System.Boolean,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Passes the etag value for the given resource.
            </summary>
            <param name="resourceCookie">cookie representing the resource.</param>
            <param name="checkForEquality">true if we need to compare the property values for equality. If false, then we need to compare values for non-equality.</param>
            <param name="concurrencyValues">list of the etag property names and its corresponding values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmPropertyInformation(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.MetadataProperty},System.String,System.String)">
            <summary>
            Obtains the epm information for a single property by reading csdl content
            </summary>
            <param name="extendedProperties">Collection of extended metadata properties for a resource</param>
            <param name="typeName">Type for which we are reading the metadata properties</param>
            <param name="memberName">Member for which we are reading the metadata properties</param>
            <returns>EpmPropertyInformation corresponding to read metadata properties</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.FindSingletonExtendedProperty(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.MetadataProperty},System.String,System.String,System.String)">
            <summary>
            Finds the extended property from a collection of extended EFx properties, only allows singletons
            </summary>
            <param name="metadataExtendedProperties">Collection of metadata extended properties of <paramref name="memberName"/></param>
            <param name="propertyName">Name of the property</param>
            <param name="typeName">Type to which the property belongs</param>
            <param name="memberName">Name of the member whose extended properties we are searching from</param>
            <returns>The corresponding MetadataProperty object if found, null otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.MapEpmTargetPathToSyndicationProperty(System.String)">
            <summary>
            Given a <paramref name="targetPath"/> gets the corresponding syndication property.
            </summary>
            <param name="targetPath">Target path in the form of syndication property name</param>
            <returns>
            Enumerated value of a SyndicationItemProperty or SyndicationItemProperty.CustomProperty if the <paramref name="targetPath"/>
            does not map to any syndication property name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.MapEpmContentKindToSyndicationTextContentKind(System.String,System.String,System.String)">
            <summary>
            Given the string representation in <paramref name="strContentKind"/> gets back the corresponding enumerated value
            </summary>
            <param name="strContentKind">String representation of syndication content kind e.g. plaintext, html or xhtml</param>
            <param name="typeName">Type to which the property belongs</param>
            <param name="memberName">Name of the member whose extended properties we are searching from</param>
            <returns>Enumerated value of SyndicationTextContentKind</returns>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.objectsToBeReplaced">
            <summary>
            List of objects that we need to be replaced. The key value
            indicates the new instance of the type with whatever values
            are specified in the payload. The value is the actual object
            which is attached to the object context
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.typesWithoutOSpaceMetadata">
            <summary>List of cspace types for which ospace metadata couldn't be found.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.#ctor(System.Data.Services.Caching.MetadataCacheItem,System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.ReflectionServiceProvider instance.
            </summary>
            <param name="metadata">Metadata for this provider.</param>
            <param name="dataSourceInstance">instance of the data source provider.</param>
            <param name="dataServiceInstance">instance of the data service.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetSetForResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the name of the container that holds this resource type.</summary>
            <param name="resourceType">Resource to get container for.</param>
            <returns>
            The name of the container for the specified resource; null if it cannot
            be determined.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Returns the collection of open properties name and value for the given resource instance.
            </summary>
            <param name="target">instance of the resource.</param>
            <returns>Returns the collection of open properties name and value for the given resource instance. Currently not supported for ObjectContext provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. Currently this is not supported for ObjectContext providers.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetService(System.Type)">
            <summary>
            Returns the requested service
            </summary>
            <param name="serviceType">type of service you are requesting for.</param>
            <returns>returns the instance of the requested service.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <param name="orderingInfo">List of expressions to sort the topmost result by. 
            The parameter is used for generating the skiptoken for the result items</param>
            <param name="skipCount">Number of rows to skip from the outermost result. null means ignore the parameter.</param>
            <param name="takeCount">Number of rows to take from the outermost result. null means igonore the parameter.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>. The result will have at most
            <paramref name="takeCount"/> elements if <paramref name="takeCount"/> is non-zero.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="topLevelOrderingInfo"/> then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetMetadata(System.Xml.XmlWriter)">
            <summary>
            Returns the metadata in edm format
            </summary>
            <param name="xmlWriter">Writer to which metadata XML should be written.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="resource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetConcurrencyValues(System.Object,System.Boolean,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Set the etag values for the given resource.
            </summary>
            <param name="resource">resource for which etag values need to be set.</param>
            <param name="checkForEquality">true if we need to compare the property values for equality. If false, then we need to compare values for non-equality.</param>
            <param name="concurrencyValues">list of the etag property names, along with their values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.MapSyndicationTextContentKindToEpmContentKind(System.Data.Services.Common.SyndicationTextContentKind)">
            <summary>
            Trasnslates content kind to string for csdl
            </summary>
            <param name="contentKind">ContentKind</param>
            <returns>String corresponding to contentKind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.MapSyndicationPropertyToEpmTargetPath(System.Data.Services.Common.SyndicationItemProperty)">
            <summary>
            Translates syndication item property to string for csdl
            </summary>
            <param name="property">Syndication property to translate</param>
            <returns>TargetPath corresponding to SyndicationItemProperty</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ImplementsIUpdatable">
            <summary>
            Checks whether the provider implements IUpdatable.
            </summary>
            <returns>returns true if the provider implements IUpdatable. otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetContainer(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the container to the given navigation property
            The declaring type container name refers to the entity set that the declaring type belongs to
            </summary>
            <param name="declaringTypeContainerName">name of the entity container that the declaring type belongs to</param>
            <param name="declaringResourceType">declaring type</param>
            <param name="resourceProperty">resource navigation property</param>
            <returns>name of the container that this property refers to</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Get the list of etag property names given the entity set name and the instance of the resource
            </summary>
            <param name="containerName">name of the entity set</param>
            <param name="resourceType">Type of the resource whose etag properties need to be fetched</param>
            <returns>list of etag property names</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CheckConfigurationConsistency(System.Object,System.Data.Services.DataServiceConfiguration)">
            <summary>Checks that the applied configuration is consistent.</summary>
            <param name='dataSourceInstance'>Instance of the data source for the provider.</param>
            <param name="configuration">Data service configuration instance with access right info.</param>
            <remarks>At this point in initialization, metadata trimming hasn't taken place.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadata(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IDictionary{System.String,System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populates metadata from the given object context
            </summary>
            <param name="knownTypes">dictionary of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of already known entity sets</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResourceContainerInstance(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Creates the object query for the given resource set and returns it
            </summary>
            <param name="resourceContainer">resource set for which IQueryable instance needs to be created</param>
            <returns>returns the IQueryable instance for the given resource set</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source type</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadataForType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="knownTypes">list of already known resource types.</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CheckNavigationPropertiesBound(System.Object)">
            <summary>
            Checks that all navigation properties are bound to some association set for every entity set.
            </summary>
            <param name='dataSourceInstance'>Instance of the data source for the provider.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.FindSampleTargetContainer(System.Type,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>Finds a target container for the specified <paramref name="type"/>.</summary>
            <param name="clrType">CLR type to find.</param>
            <param name="containers">ResourceSets to examine.</param>
            <returns>The resolved <see cref="T:System.Data.Services.Providers.ResourceSet"/>; never null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetClrTypeForCSpaceType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.StructuralType)">
            <summary>Gets the CLR type mapped to the specified C-Space type.</summary>
            <param name="workspace">Workspace in which the type is defined.</param>
            <param name="edmType">C-Space type whose matching clr type needs to be looked up.</param>
            <returns>The resolved <see cref="T:System.Type"/> for the given <paramref name="edmType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetsForType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EntityType)">
            <summary>
            Gets all <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instance that may hold an entity of type <paramref name="type"/>.
            </summary>
            <param name="workspace">Workspace with metadata.</param>
            <param name="type">Entity type to get entity sets for.</param>
            <returns>An enumeration of <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instances that can hold <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetsWithAssociationSets(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.RelationshipType,System.Data.Metadata.Edm.RelationshipEndMember)">
            <summary>
            Gets all entity sets that participate as members for the specified <paramref name="associationType"/>.
            </summary>
            <param name="workspace">Workspace with metadata.</param>
            <param name="associationType">Type of assocation to check.</param>
            <param name="member">Member of association to check.</param>
            <returns>
            All <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instances that are are on the <paramref name="member"/> role for 
            some association of <paramref name="associationType"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntityTypeDefaultStreamProperty(System.Data.Metadata.Edm.StructuralType)">
            <summary>Reads the HasStream attribute from the specified <paramref name="type"/>.</summary>
            <param name="type">Type to read attribute from.</param>
            <returns>True if $default stream property is defined for the entity type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetMimeTypeForMappedMember(System.Data.Services.Providers.ResourceProperty,System.Data.Metadata.Edm.EdmMember)">
            <summary>Sets the MIME type, if specified for the specified member.</summary>
            <param name="resourceProperty">resource property whose mime type needs to be updated.</param>
            <param name="csdlMember">C-Space member for which we need to find the C-Space mime type attribute.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.Include``1(System.Linq.IQueryable,System.String)">
            <summary>Generic method to invoke an Include method on an ObjectQuery source.</summary>
            <typeparam name="T">Element type of the source.</typeparam>
            <param name="query">Source query.</param>
            <param name="dottedPath">Path to include.</param>
            <returns>A new query that includes <paramref name="dottedPath"/> in <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.IsAssignableFrom(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntityType)">
            <summary>Checks whether <paramref name="derivedType"/> may be assigned to <paramref name="baseType"/>.</summary>
            <param name="baseType">Type to check assignment to.</param>
            <param name="derivedType">Type to check assignment from.</param>
            <returns>
            true if an instance of <paramref name="derivedType" /> can be assigned to a variable of 
            <paramref name="baseType"/>; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.IsPrimitiveType(System.Data.Metadata.Edm.EdmType)">
            <summary>Checks whether the specified type is a known primitive type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if the specified type is known to be a primitive type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.JoinIdentifiers(System.Collections.Generic.List{System.Data.Services.ExpandSegment})">
            <summary>Joins the list of segment identifiers by dots.</summary>
            <param name='segments'>List of segments to join.</param>
            <returns>A string with the identifiers joined by dots.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateTypeMetadata(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.StructuralType,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}})">
            <summary>
            Populates the metadata for the given type and its base type
            </summary>
            <param name="workspace">metadata workspace containing all the metadata information</param>
            <param name="edmType"> type whose metadata needs to be populated </param>
            <param name="knownTypes">list of known types </param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <returns>returns the resource type corresponding to the given edmType</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateResourceType(System.Data.Metadata.Edm.StructuralType,System.Type,System.Data.Services.Providers.ResourceType,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}})">
            <summary>
            Creates a new instance of resource type given the cspace structural type and mapping clr type.
            </summary>
            <param name="cspaceType">cspace structural type.</param>
            <param name="clrType">mapping clr type for the given structural type.</param>
            <param name="baseResourceType">the base resource type for the given resource type.</param>
            <param name="knownTypes">list of already known resource types.</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <returns>the new resource type instance created for the given cspace type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMemberMetadata(System.Data.Services.Providers.ResourceType,System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.IDictionary{System.String,System.Data.Services.Providers.ResourceSet},System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType})">
            <summary>
            Populates the member metadata for the given type
            </summary>
            <param name="resourceType">resource type whose member metadata needs to be filled</param>
            <param name="workspace">workspace containing the metadata information</param>
            <param name="entitySets">Available entity sets.</param>
            <param name="knownTypes">list of already known types</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetNonSyndicationExtendedProperty(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.MetadataProperty},System.Boolean,System.String,System.String,System.String)">
            <summary>
            Finds a non-syndication mapping related property from the collection of extended properties from an EFx resource property
            </summary>
            <param name="metadataExtendedProperties">Collection of metadata extended properties of <paramref name="memberName"/></param>        
            <param name="currentlyAllowed">Flag indicating whether the extended property should exist in the current context</param>
            <param name="epmPropertyName">Name of the property of resource type</param>
            <param name="typeName">Type to which the property belongs</param>
            <param name="memberName">Name of the member whose extended properties we are searching from</param>
            <returns>The corresponding MetadataProperty object if found, null otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PropertyForEnd(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.RelationshipEndMember)">
            <summary>Gets the NavigationProperty for the member of a set type if available.</summary>
            <param name="set">Set for which to return navigation property.</param>
            <param name="member">Relationship end member for the navigation property.</param>
            <returns>The NavigationProperty for the member of a set type if available; null otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PropertyNamesToStrings(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
            <summary>Creates a string array with property names.</summary>
            <param name="properties">Properties to include in name.</param>
            <returns>A string array with property names.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteReferentialConstraintChildElement(System.Xml.XmlWriter,System.String,System.String,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
            <summary>
            Write the child element of the referential constraint
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="nodeName">name of the xmlnode : Principal or Dependent</param>
            <param name="roleName">role name</param>
            <param name="properties">list of properties</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteFacets(System.Xml.XmlWriter,System.Data.Metadata.Edm.TypeUsage)">
            <summary>
            Write the metadata for the given facets in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="typeUsage">typeusage whose metadata needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteFacetValue(System.Xml.XmlWriter,System.String,System.Object)">
            <summary>
            Write the metadata for the given facet
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="facetName">name of the facet</param>
            <param name="facetValue">value of the facet</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteUserDefinedAnnotations(System.Xml.XmlWriter,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.MetadataProperty})">
            <summary>
            Write the user annotations to the csdl
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="metadataProperties">list of metadata properties from which extended ones needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetName(System.String,System.String,System.Boolean)">
            <summary>
            Returns the entity set name for the given entity set. If this entity set belongs to the default container name,
            then it returns the entity set name, otherwise qualifies it with the entitycontainer name
            </summary>
            <param name="entitySetName">entity set name</param>
            <param name="entityContainerName">entity container name</param>
            <param name="containedInDefaultEntityContainer">true if the given entity set belongs to the default entity container</param>
            <returns>returns the entity set name</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEscapedEntitySetName(System.String)">
            <summary>
            Returns the escaped entity set name for the given entity set. If this entity set belongs to the default container name,
            then it returns the escaped entity set name, otherwise it escapes both the container and set name
            </summary>
            <param name="qualifiedEntitySetName">qualified entity set name whose name needs to be escaped</param>
            <returns>returns the escaped entityset name</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetMultiplicity(System.Data.Metadata.Edm.RelationshipMultiplicity)">
            <summary>
            Returns the edm schema multiplicity value for the given multiplicity enum
            </summary>
            <param name="multiplicity">enum multiplicity value</param>
            <returns>returns edm schema multiplicity value</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.InitializeObjectItemCollection(System.Data.Objects.ObjectContext,System.Reflection.Assembly)">
            <summary>Initializes metadata for the given object context.</summary>
            <param name="objectContext">Instance of data source to use if pure static analysis isn't possible.</param>
            <param name="assembly">assembly whose metadata needs to be loaded.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmInfoForResourceType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType)">
            <summary>
            Given a resource type, builds the EntityPropertyMappingInfo for each EntityPropertyMappingAttribute on it
            </summary>
            <param name="workspace">The EFx metadata workspace to which the resource type belongs</param>
            <param name="baseResourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
            <param name="descendentResourceType">The most inherited resource type in the hierarchy</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmInfoForResourceProperty(System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Given a resource type and its resource proeperty builds the EntityPropertyMappingInfo for the EntityPropertyMappingAttribute on it
            </summary>
            <param name="propertyInformation">EPM information for current property</param>
            <param name="descendentResourceType">The most inherited resource type in the hierarchy</param>
            <param name="resourceProperty">Resource property for which to get the information</param>
            <param name="definingType">Type that defined this property</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResourcePropertyFromEpmPath(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Obtains the ResourceProperty corresponding to a given sourcePath
            </summary>
            <param name="baseResourceType">Resource type in which to look for property</param>
            <param name="sourcePath">Source Path</param>
            <returns>ResourceProperty object corresponding to the property given through source path</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmAttrsFromComplexProperty(System.Data.Services.Providers.ResourceProperty,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns a sequence of attributes corresponding to a complex type with recursion
            </summary>
            <param name="complexProperty">Complex typed property</param>
            <param name="epmSourcePath">Source path</param>
            <param name="epmTargetPath">Target path</param>
            <param name="epmNsPrefix">Namespace prefix</param>
            <param name="epmNsUri">Namespace Uri</param>
            <param name="epmKeepInContent">KeepInContent setting</param>
            <returns>Sequence of entity property mapping information for complex type properties</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteMembers(System.Xml.XmlWriter,System.Data.Metadata.Edm.StructuralType,System.Data.Services.Providers.ResourceType)">
            <summary>
            Write the metadata for the given members in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="declaringType">type whose members metadata needs to be written</param>
            <param name="resourceType">Metadata for type as a web data service resource.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySet(System.String)">
            <summary>
            Get the entity set metadata object given the qualified entity set name
            </summary>
            <param name="qualifiedEntitySetName">qualified entity set name i.e. if the entity set
            belongs to entity container other than the default one, then the entity container name should
            be part of the qualified name</param>
            <returns>the entity set metadata object</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.FindResourceType(System.Data.Metadata.Edm.StructuralType)">
            <summary>
            Finds a <see cref="T:System.Data.Services.Providers.ResourceType"/> with the same CLR type as the 
            specified <paramref name="edmType"/>.
            </summary>
            <param name="edmType">EDM type to look up.</param>
            <returns>
            A <see cref="T:System.Data.Services.Providers.ResourceType"/> with the same CLR type as the 
            specified <paramref name="edmType"/>; possibly null.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetDefaultEntityContainer">
            <summary>
            Get the default entity container
            </summary>
            <returns>returns the default entity container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.InternalGetResourceContainerInstance(System.Data.Services.Providers.ResourceSet)">
            <summary>Creates the object query for the given resource set and returns it.</summary>
            <param name="container">resource set for which a query instance needs to be created.</param>
            <returns>Returns the ObjectQuery instance for the given resource set.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteAssociationSet(System.Xml.XmlWriter,System.Data.Metadata.Edm.AssociationSet,System.String)">
            <summary>
            Write the metadata for the given association set element in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="associationSet">association set whose metadata needs to be written</param>
            <param name="containerName">Name of container for the entity set.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteEntitySet(System.Xml.XmlWriter,System.Data.Metadata.Edm.EntitySet,System.String)">
            <summary>
            Write the entity set element in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="entitySet">entity set whose metadata needs to be written</param>
            <param name="containerName">Name of the container for the entity set.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteEdmTypes(System.Xml.XmlWriter,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmType})">
            <summary>
            Writes the metadata for all the edmTypes
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="edmTypes">edmtypes whose metadata needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteEntityType(System.Xml.XmlWriter,System.Data.Metadata.Edm.EntityType)">
            <summary>
            Write the metadata for the given EntityType element in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="entityType">entity type whose metadata needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteComplexType(System.Xml.XmlWriter,System.Data.Metadata.Edm.ComplexType)">
            <summary>
            Write the metadata for the given complex type element in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="complexType">complex type whose metadata needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteAssociationType(System.Xml.XmlWriter,System.Data.Metadata.Edm.AssociationType)">
            <summary>
            Write the metadata for the given association type element in the given xml writer
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="associationType">association type whose metadata needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.WriteEntityContainers(System.Xml.XmlWriter,System.Collections.Generic.List{System.Data.Metadata.Edm.EntityContainer},System.Data.Metadata.Edm.EntityContainer)">
            <summary>
            Writes all the entity container definition in the given xml writer.
            Also emits a special annotation for the default entity container so that
            client can figure out which one is the default entity container name
            </summary>
            <param name="xmlWriter">xmlWriter to which metadata needs to be written</param>
            <param name="entityContainers">list of entity containers</param>
            <param name="defaultEntityContainer">default entity container</param>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContext">
            <summary>Strongly-types instance being reflected upon.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation">
            <summary>
            Class for holding de-serialized Epm attribute from csdl file
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.IsAtom">
            <summary>Syndication mapping or custom mapping</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.KeepInContent">
            <summary>KeepInContent</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.SourcePath">
            <summary>SourcePath</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.PathGiven">
            <summary>Was path provided or inferred</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.TargetPath">
            <summary>TargetPath</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.SyndicationItem">
            <summary>Target syndication item when IsAtom is true</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.ContentKind">
            <summary>Target syndication item content kind when IsAtom is true</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.NsPrefix">
            <summary>Namespace prefix when IsAtom is false</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EpmPropertyInformation.NsUri">
            <summary>Namespace Uri when IsAtom is false</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager">
            <summary>
            Stores the types as per the namespaces they belong to
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager.namespaces">
            <summary>
            To keep track of the all the namespace encountered
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager.entityContainers">
            <summary>
            List of entity containers in the metadataworkspace
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
            <summary>
            Populates the type manager with the types in the workspace
            </summary>
            <param name="workspace">workspace containing the metadata</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager.GetEntityContainers">
            <summary>
            Returns the list of entity containers in the workspace
            </summary>
            <returns>returns the list of entity containers</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.TypeManager.NamespaceAlongWithTypes">
            <summary>
            Returns IEnumerable containing the namespace and list of types in that namespace
            </summary>
            <returns>Returns IEnumerable containing the namespace and list of types in that namespace</returns>
        </member>
        <member name="T:System.Data.Services.Common.EpmSourcePathSegment">
            <summary>
            Representation of each node in the <see cref="T:System.Data.Services.Common.EpmSourceTree"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSourcePathSegment.propertyName">
            <summary>Name of the property under the parent resource type</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSourcePathSegment.subProperties">
            <summary>List of sub-properties if this segment corresponds to a complex type</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmSourcePathSegment.#ctor(System.String)">
            <summary>
            Constructor creates a source path segment with the name set to <paramref name="propertyName"/>
            </summary>
            <param name="propertyName">Segment property name</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmSourcePathSegment.PropertyName">
            <summary>Name of the property under the parent resource type</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmSourcePathSegment.SubProperties">
            <summary>List of sub-properties if this segment corresponds to a complex type</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmSourcePathSegment.EpmInfo">
            <summary>Corresponding EntityPropertyMappingInfo</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmSourceTree">
            <summary>
            Tree representing the sourceName properties in all the EntityPropertyMappingAttributes for a resource type
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSourceTree.root">
            <summary>Root of the tree</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSourceTree.epmTargetTree">
            <summary><see cref="T:System.Data.Services.Common.EpmTargetTree"/> corresponding to this tree</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmSourceTree.#ctor(System.Data.Services.Common.EpmTargetTree)">
            <summary>Default constructor creates a null root</summary>
            <param name="epmTargetTree">Target xml tree</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmSourceTree.Add(System.Data.Services.Common.EntityPropertyMappingInfo)">
            <summary>
            Adds a path to the source and target tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the source path</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmSourceTree.Root">
            <summary>
            Root of the tree
            </summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmSyndicationContentDeSerializer">
            <summary>Syndication content reader for EPM content</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentDeSerializer.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentDeSerializer.EpmContentDeserializerState)">
            <summary>Constructor</summary>
            <param name="item"><see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> to read content from</param>
            <param name="state">State of the deserializer</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentDeSerializer.DeSerialize(System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Publicly accessible deserialization entry point</summary>
            <param name="resourceType">Type of resource to deserialize</param>
            <param name="element">Token corresponding to object of <paramref name="resourceType"/></param>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentDeSerializer.DeSerialize(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Used for deserializing each of syndication specific content nodes</summary>
            <param name="currentRoot">Node in the target path being processed</param>
            <param name="resourceType">ResourceType</param>
            <param name="element">object being deserialized</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmSyndicationContentSerializer">
            <summary>
            Base visitor class for performing serialization of syndication specific content in the feed entry whose mapping
            is provided through EntityPropertyMappingAttributes
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSyndicationContentSerializer.author">
            <summary>
            Syndication author object resulting from mapping
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSyndicationContentSerializer.authorInfoPresent">
            <summary>
            Is author mapping provided in the target tree
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSyndicationContentSerializer.authorNamePresent">
            <summary>
            Is author name provided in the target tree
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmSyndicationContentSerializer.nullValuedProperties">
            <summary>Collection of null valued properties for this current serialization</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentSerializer.#ctor(System.Data.Services.Common.EpmTargetTree,System.Object,System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Common.EpmContentSerializer.EpmNullValuedPropertyTree)">
            <summary>
            Constructor initializes the base class be identifying itself as a syndication serializer
            </summary>
            <param name="tree">Target tree containing mapping information</param>
            <param name="element">Object to be serialized</param>
            <param name="target">SyndicationItem to which content will be added</param>
            <param name="nullValuedProperties">Null valued properties found during serialization</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentSerializer.Dispose">
            <summary>
            Used for housecleaning once every node has been visited, creates an author syndication element if none has been
            created by the visitor
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentSerializer.Serialize(System.Data.Services.Common.EpmTargetPathSegment,System.Data.Services.Common.EpmSerializationKind,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Override of the base Visitor method, which actually performs mapping search and serialization
            </summary>
            <param name="targetSegment">Current segment being checked for mapping</param>
            <param name="kind">Which sub segments to serialize</param>
            <param name="provider">Data Service provider used for rights verification.</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentSerializer.GetPublishedDate(System.Object)">
            <summary>
            Given an object returns the corresponding DateTimeOffset value through conversions
            </summary>
            <param name="propertyValue">Object containing property value</param>
            <returns>DateTimeOffset after conversion</returns>
        </member>
        <member name="M:System.Data.Services.Common.EpmSyndicationContentSerializer.CreateAuthor(System.Boolean)">
            <summary>
            Creates a new author syndication specific object
            </summary>
            <param name="createNull">Whether to create a null author or a non-null author</param>
        </member>
        <member name="T:System.Data.Services.Common.EpmTargetPathSegment">
            <summary>
            Representation of each node in the <see cref="T:System.Data.Services.Common.EpmTargetTree"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetPathSegment.segmentName">
            <summary>Name of the xml element/attribute</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetPathSegment.segmentNamespaceUri">
            <summary>URI of the namespace to which the <see cref="F:System.Data.Services.Common.EpmTargetPathSegment.segmentName"/> belongs</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetPathSegment.segmentNamespacePrefix">
            <summary>Prefix to be used in xml document for <see cref="F:System.Data.Services.Common.EpmTargetPathSegment.segmentNamespaceUri"/></summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetPathSegment.subSegments">
            <summary>If this is a non-leaf element, the child elements/attributes collection</summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetPathSegment.parentSegment">
            <summary>Parent element of this element/attribute</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetPathSegment.#ctor">
            <summary>
            Constructor initializes the list of sub-nodes to be empty, used for creating root nodes
            in the <see cref="T:System.Data.Services.Common.EpmTargetTree"/>
            </summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetPathSegment.#ctor(System.String,System.String,System.String,System.Data.Services.Common.EpmTargetPathSegment)">
            <summary>Used for creating non-root nodes in the syndication/custom trees</summary>
            <param name="segmentName">Name of xml element/attribute</param>
            <param name="segmentNamespaceUri">URI of the namespace for <paramref name="segmentName"/></param>
            <param name="segmentNamespacePrefix">Namespace prefix to be used for <paramref name="segmentNamespaceUri"/></param>
            <param name="parentSegment">Reference to the parent node if this is a sub-node, useful for traversals in visitors</param>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.SegmentName">
            <summary>Name of the xml element/attribute</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.SegmentNamespaceUri">
            <summary>URI of the namespace to which the <see cref="F:System.Data.Services.Common.EpmTargetPathSegment.segmentName"/> belongs</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.SegmentNamespacePrefix">
            <summary>Prefix to be used in xml document for <see cref="F:System.Data.Services.Common.EpmTargetPathSegment.segmentNamespaceUri"/></summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.EpmInfo">
            <summary>EntityPropertyMappingInfo corresponding to current segement</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.HasContent">
            <summary>Whether this node corresponds to ResourceType or ClientType property values</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.IsAttribute">
            <summary>Does this node correspond to xml attribute</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.ParentSegment">
            <summary>Parent node in the tree (always an element if present)</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetPathSegment.SubSegments">
            <summary>Sub-nodes of this node. Only exist if current node is an element node</summary>
        </member>
        <member name="T:System.Data.Services.Common.EpmTargetTree">
            <summary>
            Tree representing the targetName properties in all the EntityPropertyMappingAttributes for a resource type
            </summary>
        </member>
        <member name="F:System.Data.Services.Common.EpmTargetTree.countOfNonContentProperties">
            <summary>Number of properties that have KeepInContent false</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetTree.#ctor">
            <summary>Initializes the sub-trees for syndication and non-syndication content</summary>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetTree.Add(System.Data.Services.Common.EntityPropertyMappingInfo)">
            <summary>
            Adds a path to the tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the target path</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetTree.Remove(System.Data.Services.Common.EntityPropertyMappingInfo)">
            <summary>
            Removes a path in the tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the target path</param>
        </member>
        <member name="M:System.Data.Services.Common.EpmTargetTree.GetPropertyNameFromEpmInfo(System.Data.Services.Common.EntityPropertyMappingInfo)">
            <summary>
            Given an <see cref="T:System.Data.Services.Common.EntityPropertyMappingInfo"/> gives the correct target path for it
            </summary>
            <param name="epmInfo">Given <see cref="T:System.Data.Services.Common.EntityPropertyMappingInfo"/></param>
            <returns>String with the correct value for the target path</returns>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetTree.SyndicationRoot">
            <summary>Root of the sub-tree for syndication content</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetTree.NonSyndicationRoot">
            <summary>Root of the sub-tree for custom content</summary>
        </member>
        <member name="P:System.Data.Services.Common.EpmTargetTree.IsV1Compatible">
            <summary>
            Does the target tree serialize data in V1 compatible manner
            </summary>
        </member>
        <member name="T:System.Data.Services.ETagAttribute">
            <summary>Attribute to be annotated on types with ETags.</summary>
        </member>
        <member name="F:System.Data.Services.ETagAttribute.propertyNames">
            <summary>Name of the properties that form the ETag.</summary>
        </member>
        <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of ETag attribute with the property name
            that forms the ETag.
            </summary>
            <param name='propertyName'>Name of the property that form the ETag for the current type.</param>
        </member>
        <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of ETag attribute with the list of property names
            that form the ETag.
            </summary>
            <param name='propertyNames'>Name of the properties that form the ETag for the current type.</param>
        </member>
        <member name="P:System.Data.Services.ETagAttribute.PropertyNames">
            <summary>Name of the properties that form the ETag for the current type.</summary>
        </member>
        <member name="T:System.Data.Services.Error">
            <summary>
               Strongly-typed and parameterized exception factory.
            </summary>
            <summary>
               Strongly-typed and parameterized exception factory.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.HttpHeaderFailure(System.Int32,System.String)">
            <summary>
            create and trace a HttpHeaderFailure
            </summary>
            <param name="errorCode">error code</param>
            <param name="message">error message</param>
            <returns>DataServiceException</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamMissingBoundary">
            <summary>create exception when missing an expected batch boundary</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamContentExpected(System.Data.Services.BatchStreamState)">
            <summary>create exception when the expected content is missing</summary>
            <param name="state">http method operation</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamContentUnexpected(System.Data.Services.BatchStreamState)">
            <summary>create exception when unexpected content is discovered</summary>
            <param name="state">http method operation</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamGetMethodNotSupportInChangeset">
            <summary>create exception when Get operation is specified in changeset</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidBatchFormat">
            <summary>create exception when invalid batch request is specified</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidDelimiter(System.String)">
            <summary>create exception when boundary delimiter is not valid</summary>
            <param name="delimiter">delimiter specified as specified in the request.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamMissingEndChangesetDelimiter">
            <summary>create exception when end changeset boundary delimiter is missing</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidHeaderValueSpecified(System.String)">
            <summary>create exception when header value specified is not valid</summary>
            <param name="headerValue">header value as specified in the request.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidContentLengthSpecified(System.String)">
            <summary>create exception when content length is not valid</summary>
            <param name="contentLength">content length as specified in the request.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamOnlyGETOperationsCanBeSpecifiedInBatch">
            <summary>create exception when CUD operation is specified in batch</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidOperationHeaderSpecified">
            <summary>create exception when operation header is specified in start of changeset</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidHttpMethodName(System.String)">
            <summary>create exception when http method name is not valid</summary>
            <param name="methodName">name of the http method as specified in the request.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamMoreDataAfterEndOfBatch">
            <summary>create exception when more data is specified after end of batch delimiter.</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInternalBufferRequestTooSmall">
            <summary>internal error where batch stream does do look ahead when read request is smaller than boundary delimiter</summary>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidMethodHeaderSpecified(System.String)">
            <summary>internal error where the first request header is not of the form: 'MethodName' 'Url' 'Version'</summary>
            <param name="header">actual header value specified in the payload.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidHttpVersionSpecified(System.String,System.String)">
            <summary>internal error when http version in batching request is not valid</summary>
            <param name="actualVersion">actual version as specified in the payload.</param>
            <param name="expectedVersion">expected version value.</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidNumberOfHeadersAtOperationStart(System.String,System.String)">
            <summary>internal error when number of headers at the start of each operation is not 2</summary>
            <param name="header1">First valid header name</param>
            <param name="header2">Second valid header name</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamMissingOrInvalidContentEncodingHeader(System.String,System.String)">
            <summary>internal error Content-Transfer-Encoding is not specified or its value is not 'binary'</summary>
            <param name="headerName">name of the header</param>
            <param name="headerValue">expected value of the header</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidNumberOfHeadersAtChangeSetStart(System.String,System.String)">
            <summary>internal error number of headers at the start of changeset is not correct</summary>
            <param name="header1">First valid header name</param>
            <param name="header2">Second valid header name</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamMissingContentTypeHeader(System.String)">
            <summary>internal error when content type header is missing</summary>
            <param name="headerName">name of the missing header</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.BatchStreamInvalidContentTypeSpecified(System.String,System.String,System.String,System.String)">
            <summary>internal error when content type header value is invalid.</summary>
            <param name="headerName">name of the header whose value is not correct.</param>
            <param name="headerValue">actual value as specified in the payload</param>
            <param name="mime1">expected value 1</param>
            <param name="mime2">expected value 2</param>
            <returns>exception to throw</returns>
        </member>
        <member name="M:System.Data.Services.Error.ThrowObjectDisposed(System.Type)">
            <summary>
            create and throw a ThrowObjectDisposed with a type name
            </summary>
            <param name="type">type being thrown on</param>
        </member>
        <member name="M:System.Data.Services.Error.Trace``1(``0)">
            <summary>
            Trace the exception
            </summary>
            <typeparam name="T">type of the exception</typeparam>
            <param name="exception">exception object to trace</param>
            <returns>the exception parameter</returns>
        </member>
        <member name="M:System.Data.Services.Error.ArgumentNull(System.String)">
            <summary>
            The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.ArgumentOutOfRange(System.String)">
            <summary>
            The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.NotImplemented">
            <summary>
            The exception that is thrown when the author has yet to implement the logic at this point in the program. This can act as an exception based TODO tag.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.NotSupported">
            <summary>
            The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality. 
            </summary>
        </member>
        <member name="T:System.Data.Services.ErrorHandler">
            <summary>
            Provides support for orchestrating error handling at different points in the processing cycle and for
            serializing structured errors.
            </summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.exceptionArgs">
            <summary>Arguments for the exception being handled.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.encoding">
            <summary>Encoding to created over stream; null if a higher-level writer will be provided.</summary>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.#ctor(System.Data.Services.HandleExceptionArgs,System.Text.Encoding)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ErrorHandler"/> instance.</summary>
            <param name="args">Arguments for the exception being handled.</param>
            <param name="encoding">Encoding to created over stream; null if a higher-level writer will be provided.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBatchProcessException(System.Data.Services.IDataService,System.Data.Services.BatchServiceHost,System.Exception,System.IO.StreamWriter)">
            <summary>Handles an exception when processing a batch response.</summary>
            <param name='service'>Data service doing the processing.</param>
            <param name="host">host to which we need to write the exception message</param>
            <param name='exception'>Exception thrown.</param>
            <param name='writer'>Output writer for the batch.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBatchRequestException(System.Data.Services.IDataService,System.Exception,System.IO.StreamWriter)">
            <summary>Handles an exception when processing a batch request.</summary>
            <param name='service'>Data service doing the processing.</param>
            <param name='exception'>Exception thrown.</param>
            <param name='writer'>Output writer for the batch.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBeforeWritingException(System.Exception,System.Data.Services.IDataService,System.String,System.String)">
            <summary>Handles an exception before the response has been written out.</summary>
            <param name='exception'>Exception thrown.</param>
            <param name='service'>Data service doing the processing.</param>
            <param name='accept'>'Accept' header value; possibly null.</param>
            <param name='acceptCharset'>'Accept-Charset' header; possibly null.</param>
            <returns>An action that can serialize the exception into a stream.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleDuringWritingException(System.Exception,System.Data.Services.IDataService,System.String,System.Data.Services.Serializers.IExceptionWriter)">
            <summary>Handles an exception while the response is being written out.</summary>
            <param name='exception'>Exception thrown.</param>
            <param name='service'>Data service doing the processing.</param>
            <param name='contentType'>MIME type of output stream.</param>
            <param name='exceptionWriter'>Serializer-specific exception writer.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleTargetInvocationException(System.Reflection.TargetInvocationException)">
            <summary>Handles the specified <paramref name='exception'/>.</summary>
            <param name='exception'>Exception to handle</param>
            <remarks>The caller should re-throw the original exception if this method returns normally.</remarks>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeJsonError(System.Data.Services.HandleExceptionArgs,System.Data.Services.Serializers.JsonWriter)">
            <summary>Serializes an error in JSON format.</summary>
            <param name='args'>Arguments describing the error.</param>
            <param name='writer'>Writer to which error should be serialized.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeXmlError(System.Data.Services.HandleExceptionArgs,System.Xml.XmlWriter)">
            <summary>Serializes an error in XML format.</summary>
            <param name='args'>Arguments describing the error.</param>
            <param name='writer'>Writer to which error should be serialized.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.CreateErrorSerializer(System.Data.Services.HandleExceptionArgs,System.Text.Encoding)">
            <summary>Creates a delegate that can serialize an error for the specified arguments.</summary>
            <param name="args">Arguments for the exception being handled.</param>
            <param name="encoding">Encoding to created over stream.</param>
            <returns>A delegate that can serialize an error for the specified arguments.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.ExtractErrorValues(System.Exception,System.String@,System.String@,System.String@)">
            <summary>
            Gets values describing the <paramref name='exception' /> if it's a DataServiceException;
            defaults otherwise.
            </summary>
            <param name='exception'>Exception to extract value from.</param>
            <param name='errorCode'>Error code from the <paramref name='exception' />; blank if not available.</param>
            <param name='message'>Message from the <paramref name='exception' />; blank if not available.</param>
            <param name='messageLang'>Message language from the <paramref name='exception' />; current default if not available.</param>
            <returns>The cast DataServiceException; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeJsonException(System.Data.Services.Serializers.JsonWriter,System.Exception)">
            <summary>Serializes an exception in JSON format.</summary>
            <param name='writer'>Writer to which error should be serialized.</param>
            <param name='exception'>Exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeXmlException(System.Xml.XmlWriter,System.Exception)">
            <summary>Serializes an exception in XML format.</summary>
            <param name='writer'>Writer to which error should be serialized.</param>
            <param name='exception'>Exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.TryGetResponseFormatForError(System.Data.Services.IDataServiceHost,System.String@,System.Text.Encoding@)">
            <summary>Gets content type and encoding information from the host if possible; defaults otherwise.</summary>
            <param name="host">Host to get headers from (possibly null).</param>
            <param name="contentType">After invocation, content type for the exception.</param>
            <param name="encoding">After invocation, encoding for the exception.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.TryGetResponseFormatForError(System.String,System.String,System.String@,System.Text.Encoding@)">
            <summary>Gets content type and encoding information from the headers if possible; defaults otherwise.</summary>
            <param name="accept">A comma-separated list of client-supported MIME Accept types.</param>
            <param name="acceptCharset">The specification for the character set encoding that the client requested.</param>
            <param name="contentType">After invocation, content type for the exception.</param>
            <param name="encoding">After invocation, encoding for the exception.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeJsonError(System.Data.Services.Serializers.JsonWriter)">
            <summary>Serializes an error in JSON format.</summary>
            <param name='writer'>Writer to which error should be serialized.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeXmlError(System.Xml.XmlWriter)">
            <summary>Serializes an error in XML format.</summary>
            <param name='writer'>Writer to which error should be serialized.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeJsonErrorToStream(System.IO.Stream)">
            <summary>Serializes the current exception description to the specified <paramref name="stream"/>.</summary>
            <param name="stream">Stream to write to.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.SerializeXmlErrorToStream(System.IO.Stream)">
            <summary>Serializes the current exception description to the specified <paramref name="stream"/>.</summary>
            <param name="stream">Stream to write to.</param>
        </member>
        <member name="T:System.Data.Services.ExpandSegment">
            <summary>
            Provides a description of a segment in an $expand query option for an ADO.NET Data Service.
            </summary>
            <remarks>
            INTERNAL
            Expand providers may replace segments to indicate a different expansion shape. However, they are
            unable to set the MaxResultsExpected. The value for the instances created by external providers
            will always be Int32.MaxValue, but the value enforced by the serializers will be the one declared
            by the data service in the configuration.
            
            When the configuration supports a more granular value, we should overload the constructor to make
            the MaxResultsExpected property settable as well. 
            </remarks>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.container">
            <summary>Container to which the segment belongs; possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.filter">
            <summary>Filter expression for this segment on an $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.name">
            <summary>Name for this segment on an $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.expandedProperty">
            <summary>Property being expanded.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.maxResultsExpected">
            <summary>
            The maximum number of results expected for this property; Int32.MaxValue if no limit is expected.
            </summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.orderingInfo">
            <summary>Collection of ordering information for this segment, used for paging</summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegment"/> instance.</summary>
            <param name="name">Segment name.</param>
            <param name="filter">Filter expression for segment, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression,System.Data.Services.Providers.OrderingInfo)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegment"/> instance.</summary>
            <param name="name">Segment name.</param>
            <param name="filter">Filter expression for segment, possibly null.</param>
            <param name="orderingInfo">Collection of ordering information for this segment, used for paging</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression,System.Int32,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.OrderingInfo)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegment"/> instance.</summary>
            <param name="name">Segment name.</param>
            <param name="filter">Filter expression for segment, possibly null.</param>
            <param name="maxResultsExpected">
            Expand providers may choose to return at most MaxResultsExpected + 1 elements to allow the
            data service to detect a failure to meet this constraint.
            </param>
            <param name="container">Container to which the segment belongs; possibly null.</param>
            <param name="expandedProperty">Property expanded by this expand segment</param>
            <param name="orderingInfo">Collection of ordering information for this segment, used for paging</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})">
            <summary>Checks whether any segments in the specified <paramref name="path"/> have a filter.</summary>
            <param name="path">Path with segments to check.</param>
            <returns>true if any of the segments in <paramref name="path"/> has a filter; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.CheckFilterType(System.Linq.Expressions.Expression)">
            <summary>Checks that the specified filter is of the right type.</summary>
            <param name="filter">Filter to check.</param>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Filter">
            <summary>Filter expression for this segment on an $expand path.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.HasFilter">
            <summary>Whether this segment has a filter.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.MaxResultsExpected">
            <summary>
            The maximum number of results expected for this property; Int32.MaxValue if no limit is expected.
            </summary>
            <remarks>
            Expand providers may choose to return at most MaxResultsExpected + 1 elements to allow the
            data service to detect a failure to meet this constraint.
            </remarks>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Name">
            <summary>Name for this segment on an $expand path.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.ExpandedProperty">
            <summary>Property being expanded.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.OrderingInfo">
            <summary>Collection of ordering information for this segment, used for paging</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Container">
            <summary>Gets the container to which this segment belongs; possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.HasFilterOrMaxResults">
            <summary>Whether this segment has a filter or a constraint on max results returns.</summary>
        </member>
        <member name="T:System.Data.Services.ExpandSegmentCollection">
            <summary>
            Provides a description of a path in an $expand query option
            for an ADO.NET Data Service.
            </summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegmentCollection"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegmentCollection"/> instance.</summary>
            <param name="capacity">Initial capacity.</param>
        </member>
        <member name="P:System.Data.Services.ExpandSegmentCollection.HasFilter">
            <summary>Whether this path has any filters.</summary>
        </member>
        <member name="T:System.Data.Services.HandleExceptionArgs">
            <summary>Use this class to customize how exceptions are handled.</summary>
        </member>
        <member name="F:System.Data.Services.HandleExceptionArgs.responseWritten">
            <summary>Whether the response has already been written out.</summary>
        </member>
        <member name="F:System.Data.Services.HandleExceptionArgs.responseContentType">
            <summary>The MIME type used to write the response.</summary>
        </member>
        <member name="F:System.Data.Services.HandleExceptionArgs.exception">
            <summary>The <see cref="P:System.Data.Services.HandleExceptionArgs.Exception"/> being handled.</summary>
        </member>
        <member name="F:System.Data.Services.HandleExceptionArgs.useVerboseErrors">
            <summary>Whether a verbose response is appropriate.</summary>
        </member>
        <member name="M:System.Data.Services.HandleExceptionArgs.#ctor(System.Exception,System.Boolean,System.String,System.Boolean)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.HandleExceptionArgs"/> instance.</summary>
            <param name="exception">The <see cref="P:System.Data.Services.HandleExceptionArgs.Exception"/> being handled.</param>
            <param name="responseWritten">Whether the response has already been written out.</param>
            <param name="contentType">The MIME type used to write the response.</param>
            <param name="verboseResponse">Whether a verbose response is appropriate.</param>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.Exception">
            <summary>Gets or sets the <see cref="P:System.Data.Services.HandleExceptionArgs.Exception"/> being handled.</summary>
            <remarks>This property may be null.</remarks>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseContentType">
            <summary>Gets the content type for response.</summary>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode">
            <summary>Gets the HTTP status code for the response.</summary>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseWritten">
            <summary>Gets a value indicating whether the response has already been written out.</summary>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors">
            <summary>Gets or sets whether a verbose response is appropriate.</summary>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseAllowHeader">
            <summary>The value for the 'Allow' response header.</summary>
        </member>
        <member name="T:System.Data.Services.HttpContextServiceHost">
            <summary>
            Provides access to the environment for a DataService, including information about the current request, based
            on the current WebOperationContext.
            </summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.incomingMessageBody">
            <summary>Message sent to server.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.operationContext">
            <summary>The WCF-based operation context.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.errorFound">
            <summary>Whether an error was found when processing this request.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.requestHeaders">
            <summary>Dictionary of all request headers from the host.</summary>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new System.Data.Services.HttpContextServiceHost instance.
            </summary>
            <param name='messageBody'>Incoming message body to process.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>
            Method to handle a data service exception during processing.
            </summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost2#SetResponseHeader(System.String,System.String)">
            <summary>
            Sets a response header.
            </summary>
            <param name="header">Response header name.</param>
            <param name="value">Response header value.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.VerifyQueryParameters">
            <summary>Verifies that query parameters are valid.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestAcceptCharSet">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseContentType">
            <summary>Gets or sets the HTTP MIME type of the output stream.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestContentType">
            <summary>Gets the HTTP MIME type of the input stream.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestAccept">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestHttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#AbsoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseCacheControl">
            <summary>Gets or sets the Cache-Control header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseETag">
            <summary>Gets/Sets the value of the ETag header on the outgoing response</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseLocation">
            <summary>Gets or sets the Location header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseStatusCode">
            <summary>
            Gets/Sets the status code for the request made.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> to be written to send a response
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseVersion">
            <summary>Gets or sets the value for the DataServiceVersion response header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> from which the request data can be read from
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost2#RequestHeaders">
            <summary>Dictionary of all request headers from the host.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost2#ResponseHeaders">
            <summary>Enumerates all response headers that has been set.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.ErrorFound">
            <summary>Whether an error was found when processing this request.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.HostHeader">
            <summary>The value for the Host header in the request, possibly null.</summary>
        </member>
        <member name="T:System.Data.Services.HttpProcessUtility">
            <summary>Provides helper methods for processing HTTP requests.</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.EncodingUtf8NoPreamble">
            <summary>UTF-8 encoding, without the BOM preamble.</summary>
            <remarks>
            While a BOM preamble on UTF8 is generally benign, it seems that some MIME handlers under IE6 will not 
            process the payload correctly when included.
            
            Because the data service should include the encoding as part of the Content-Type in the response,
            there should be no ambiguity as to what encoding is being used.
            
            For further information, see http://www.unicode.org/faq/utf_bom.html#BOM.
            </remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.BuildContentType(System.String,System.Text.Encoding)">
            <summary>Builds a Content-Type header which includes MIME type and encoding information.</summary>
            <param name="mime">MIME type to be used.</param>
            <param name="encoding">Encoding to be used in response, possibly null.</param>
            <returns>The value for the Content-Type header.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.SelectMimeType(System.String,System.String[])">
            <summary>Selects an acceptable MIME type that satisfies the Accepts header.</summary>
            <param name="acceptTypesText">Text for Accepts header.</param>
            <param name="availableTypes">
            Types that the server is willing to return, in descending order 
            of preference.
            </param>
            <returns>The best MIME type for the client</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.SelectRequiredMimeType(System.String,System.String[],System.String)">
            <summary>Gets the appropriate MIME type for the request, throwing if there is none.</summary>
            <param name='acceptTypesText'>Text as it appears in an HTTP Accepts header.</param>
            <param name='exactContentType'>Preferred content type to match if an exact media type is given - this is in descending order of preference.</param>
            <param name='inexactContentType'>Preferred fallback content type for inexact matches.</param>
            <returns>One of exactContentType or inexactContentType.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.EncodingFromAcceptCharset(System.String)">
            <summary>Gets the best encoding available for the specified charset request.</summary>
            <param name="acceptCharset">
            The Accept-Charset header value (eg: "iso-8859-5, unicode-1-1;q=0.8").
            </param>
            <returns>An Encoding object appropriate to the specifed charset request.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadContentType(System.String,System.String@,System.Text.Encoding@)">
            <summary>Reads a Content-Type header and extracts the MIME type/subtype and encoding.</summary>
            <param name="contentType">The Content-Type header.</param>
            <param name="mime">The MIME type in standard type/subtype form, without parameters.</param>
            <param name="encoding">Encoding (possibly null).</param>
            <returns>parameters of content type</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.GetParameterValue(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.String)">
            <summary>
            Given the parameters, search for the parameter with the given name and returns its value.
            </summary>
            <param name="parameters">list of parameters specified.</param>
            <param name="parameterName">name of the parameter whose value needs to be returned.</param>
            <returns>returns the value of the parameter with the given name. Returns null, if the parameter is not found.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.TryReadVersion(System.String,System.Collections.Generic.KeyValuePair{System.Version,System.String}@)">
            <summary>Tries to read an ADO.NET Data Service version string.</summary>
            <param name="text">Text to read.</param>
            <param name="result">Parsed version and trailing text.</param>
            <returns>true if the version was read successfully; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.EncodingFromName(System.String)">
            <summary>Gets the named encoding if specified.</summary>
            <param name="name">Name (possibly null or empty).</param>
            <returns>
            The named encoding if specified; the encoding for HTTP missing 
            charset specification otherwise.
            </returns>
            <remarks>
            See http://tools.ietf.org/html/rfc2616#section-3.4.1 for details.
            </remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.CreateParsingException(System.String)">
            <summary>Creates a new exception for parsing errors.</summary>
            <param name="message">Message for error.</param>
            <returns>A new exception that can be thrown for a parsing error.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadMediaTypeAndSubtype(System.String,System.Int32@,System.String@,System.String@)">
            <summary>Reads the type and subtype specifications for a MIME type.</summary>
            <param name='text'>Text in which specification exists.</param>
            <param name='textIndex'>Pointer into text.</param>
            <param name='type'>Type of media found.</param>
            <param name='subType'>Subtype of media found.</param>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadMediaType(System.String)">
            <summary>Reads a media type definition as used in a Content-Type header.</summary>
            <param name="text">Text to read.</param>
            <returns>The <see cref="T:System.Data.Services.HttpProcessUtility.MediaType"/> defined by the specified <paramref name="text"/></returns>
            <remarks>All syntactic errors will produce a 400 - Bad Request status code.</remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadToken(System.String,System.Int32@)">
            <summary>
            Reads a token on the specified text by advancing an index on it.
            </summary>
            <param name="text">Text to read token from.</param>
            <param name="textIndex">Index for the position being scanned on text.</param>
            <returns>true if the end of the text was reached; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.SkipWhitespace(System.String,System.Int32@)">
            <summary>
            Skips whitespace in the specified text by advancing an index to
            the next non-whitespace character.
            </summary>
            <param name="text">Text to scan.</param>
            <param name="textIndex">Index to begin scanning from.</param>
            <returns>true if the end of the string was reached, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.IsHttpElementSeparator(System.Char)">
            <summary>
            Verfies whether the specified character is a valid separator in
            an HTTP header list of element.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a valid character for separating elements; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadLiteral(System.String,System.Int32,System.String)">
            <summary>
            "Reads" a literal from the specified string by verifying that
            the exact text can be found at the specified position.
            </summary>
            <param name="text">Text within which a literal should be checked.</param>
            <param name="textIndex">Index in text where the literal should be found.</param>
            <param name="literal">Literal to check at the specified position.</param>
            <returns>true if the end of string is found; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.DigitToInt32(System.Char)">
            <summary>
            Converts the specified character from the ASCII range to a digit.
            </summary>
            <param name="c">Character to convert.</param>
            <returns>
            The Int32 value for c, or -1 if it is an element separator.
            </returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.MimeTypesFromAcceptHeader(System.String)">
            <summary>Returns all MIME types from the specified (non-blank) <paramref name='text' />.</summary>
            <param name='text'>Non-blank text, as it appears on an HTTP Accepts header.</param>
            <returns>An enumerable object with media type descriptions.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadMediaTypeParameter(System.String,System.Int32@,System.Collections.Generic.KeyValuePair{System.String,System.String}[]@)">
            <summary>Read a parameter for a media type/range.</summary>
            <param name="text">Text to read from.</param>
            <param name="textIndex">Pointer in text.</param>
            <param name="parameters">Array with parameters to grow as necessary.</param>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadQuotedParameterValue(System.String,System.String,System.Int32@)">
            <summary>
            Reads Mime type parameter value for a particular parameter in the Content-Type/Accept headers.
            </summary>
            <param name="parameterName">Name of parameter.</param>
            <param name="headerText">Header text.</param>
            <param name="textIndex">Parsing index in <paramref name="headerText"/>.</param>
            <returns>String representing the value of the <paramref name="parameterName"/> parameter.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.ReadQualityValue(System.String,System.Int32@,System.Int32@)">
            <summary>
            Reads the numeric part of a quality value substring, normalizing it to 0-1000
            rather than the standard 0.000-1.000 ranges.
            </summary>
            <param name="text">Text to read qvalue from.</param>
            <param name="textIndex">Index into text where the qvalue starts.</param>
            <param name="qualityValue">After the method executes, the normalized qvalue.</param>
            <remarks>
            For more information, see RFC 2616.3.8.
            </remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.AcceptCharsetParts(System.String)">
            <summary>
            Enumerates each charset part in the specified Accept-Charset header.
            </summary>
            <param name="headerValue">Non-null and non-empty header value for Accept-Charset.</param>
            <returns>
            A (non-sorted) enumeration of CharsetPart elements, which include
            a charset name and a quality (preference) value, normalized to 0-1000.
            </returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.IsHttpSeparator(System.Char)">
            <summary>
            Determines whether the specified character is a valid HTTP separator.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a separator; false otherwise.</returns>
            <remarks>
            See RFC 2616 2.2 for further information.
            </remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.IsHttpToken(System.Char)">
            <summary>
            Determines whether the specified character is a valid HTTP header token character.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a valid HTTP header token character; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.HttpProcessUtility.FallbackEncoding">
            <summary>Encoding to fall back to an appropriate encoding is not available.</summary>
        </member>
        <member name="P:System.Data.Services.HttpProcessUtility.MissingEncoding">
            <summary>Encoding implied by an unspecified encoding value.</summary>
            <remarks>See http://tools.ietf.org/html/rfc2616#section-3.4.1 for details.</remarks>
        </member>
        <member name="T:System.Data.Services.HttpProcessUtility.CharsetPart">
            <summary>Provides a struct to encapsulate a charset name and its relative desirability.</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.CharsetPart.Charset">
            <summary>Name of the charset.</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.CharsetPart.Quality">
            <summary>Charset quality (desirability), normalized to 0-1000.</summary>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.CharsetPart.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new CharsetPart with the specified values.
            </summary>
            <param name="charset">Name of charset.</param>
            <param name="quality">Charset quality (desirability), normalized to 0-1000.</param>
        </member>
        <member name="T:System.Data.Services.HttpProcessUtility.MediaType">
            <summary>Use this class to represent a media type definition.</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.MediaType.parameters">
            <summary>Parameters specified on the media type.</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.MediaType.subType">
            <summary>Sub-type specification (for example, 'plain').</summary>
        </member>
        <member name="F:System.Data.Services.HttpProcessUtility.MediaType.type">
            <summary>Type specification (for example, 'text').</summary>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.MediaType.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.HttpProcessUtility.MediaType"/> read-only instance.
            </summary>
            <param name="type">Type specification (for example, 'text').</param>
            <param name="subType">Sub-type specification (for example, 'plain').</param>
            <param name="parameters">Parameters specified on the media type.</param>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.MediaType.GetMatchingParts(System.String)">
            <summary>Gets a number of non-* matching types, or -1 if not matching at all.</summary>
            <param name="candidate">Candidate MIME type to match.</param>
            <returns>The number of non-* matching types, or -1 if not matching at all.</returns>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.MediaType.SelectQualityValue">
            <summary>Selects a quality value for the specified type.</summary>
            <returns>The quality value, in range from 0 through 1000.</returns>
            <remarks>See http://tools.ietf.org/html/rfc2616#section-14.1 for further details.</remarks>
        </member>
        <member name="M:System.Data.Services.HttpProcessUtility.MediaType.SelectEncoding">
            <summary>
            Selects the encoding appropriate for this media type specification
            (possibly null).
            </summary>
            <returns>
            The encoding explicitly defined on the media type specification, or
            the default encoding for well-known media types.
            </returns>
            <remarks>
            As per http://tools.ietf.org/html/rfc2616#section-3.7, the type, 
            subtype and parameter name attributes are case-insensitive.
            </remarks>
        </member>
        <member name="P:System.Data.Services.HttpProcessUtility.MediaType.MimeType">
            <summary>Returns the MIME type in standard type/subtype form, without parameters.</summary>
        </member>
        <member name="P:System.Data.Services.HttpProcessUtility.MediaType.Parameters">
            <summary>media type parameters</summary>
        </member>
        <member name="T:System.Data.Services.IExpandProvider">
            <summary>
            This interface declares the methods required to support the $expand
            query option for an ADO.NET Data Service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects.
            </remarks>
        </member>
        <member name="T:System.Data.Services.IExpandedResult">
            <summary>
            This interface declares the methods required to support enumerators for results and for
            associated segments on an ADO.NET Data Service $expand query option.
            </summary>
        </member>
        <member name="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)">
            <summary>Gets the value for named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
            <remarks>
            If the element returned in turn has properties which are expanded out-of-band
            of the object model, then the result will also be of type <see cref="T:System.Data.Services.IExpandedResult"/>,
            and the value will be available through <see cref="P:System.Data.Services.IExpandedResult.ExpandedElement"/>.
            </remarks>
        </member>
        <member name="P:System.Data.Services.IExpandedResult.ExpandedElement">
            <summary>The element with expanded properties.</summary>
        </member>
        <member name="T:System.Data.Services.HasStreamAttribute">
            <summary>
            Use this attribute to annotate that an Entity Type has a default stream property.
            </summary>
        </member>
        <member name="T:System.Data.Services.IgnorePropertiesAttribute">
            <summary>Attribute to be annotated on types with ETags.</summary>
        </member>
        <member name="F:System.Data.Services.IgnorePropertiesAttribute.propertyNames">
            <summary>Name of the properties that form the ETag.</summary>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of IgnoreProperties attribute with the property name
            that needs to be ignored
            </summary>
            <param name='propertyName'>Name of the property that form the ETag for the current type.</param>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of IgnoreProperties attribute with the list of property names
            that need to be ignored
            </summary>
            <param name='propertyNames'>Name of the properties that form the ETag for the current type.</param>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.GetProperties(System.Type,System.Boolean,System.Reflection.BindingFlags)">
            <summary>
            Validate and get the list of properties specified by this attribute on the given type.
            </summary>
            <param name="type">clr type on which this attribute must have defined.</param>
            <param name="inherit">whether we need to inherit this attribute or not.
            For context types,we need to, since we can have one context dervied from another, and we want to ignore all the properties on the base ones too.
            For resource types, we don't need to, since we don't want derived types to know about ignore properties of the base type. Also
            from derived type, you cannot change the definition of the base type.</param>
            <param name="bindingFlags">binding flags to be used for validating property names.</param>
            <returns>list of property names specified on IgnoreProperties on the given type.</returns>
        </member>
        <member name="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames">
            <summary>Name of the properties that needs to be ignored for the current type.</summary>
        </member>
        <member name="T:System.Data.Services.Int32EqualityComparer">
            <summary>This class implements IEqualityComparer for System.In32.</summary>
            <remarks>
            Using this class rather than EqualityComparer&lt;T&gt;.Default 
            saves from JIT'ing it in each AppDomain.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Int32EqualityComparer.#ctor">
            <summary>Empty constructor.</summary>
        </member>
        <member name="M:System.Data.Services.Int32EqualityComparer.Equals(System.Int32,System.Int32)">
            <summary>Checks whether two numbers are equal.</summary>
            <param name='x'>First number.</param><param name='y'>Second number.</param>
            <returns>true if x equals y; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Int32EqualityComparer.GetHashCode(System.Int32)">
            <summary>Gets a hash code for the specified number.</summary>
            <param name='obj'>Value.</param>
            <returns>The hash code for the specified value.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`1">
            <summary>Provides a base class implementing IExpandedResult over projections.</summary>
            <typeparam name="TExpandedElement">Type of element whose properties are expanded.</typeparam>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.description">
            <summary>Text description of properties, in comma-separated format.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.expandedElement">
            <summary>Element whose properties are being expanded.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.propertyNames">
            <summary>Parsed property names.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.GetExpandedPropertyValue(System.String)">
            <summary>Gets the value for named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
            <remarks>
            If the element returned in turn has properties which are expanded out-of-band
            of the object model, then the result will also be of type <see cref="T:System.Data.Services.IExpandedResult"/>,
            and the value will be available through <see cref="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement"/>.
            A special case is the handling of $skiptoken property. In case the $skiptoken property does not
            exist on the current wrapper object, instead of throw-ing we return null which will
            be an indication to the caller that the property does not exist.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the property for the result.</summary>
            <param name="nameIndex">Index of property for which to get enumerable results.</param>
            <returns>The value for the property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.Description">
            <summary>Text description of properties, in comma-separated format.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement">
            <summary>Element whose properties are being expanded.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.System#Data#Services#IExpandedResult#ExpandedElement">
            <summary>The element with expanded properties.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`2">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`2.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`2.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`3">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`3.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`4">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`4.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`5">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`5.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`6">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`6.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`7">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`7.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`8">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`8.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`9">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`9.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty7">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`10">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`10.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty7">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty8">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`11">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`11.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty7">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty8">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty9">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`12">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <typeparam name="TProperty10">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`12.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty7">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty8">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty9">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty10">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`13">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <typeparam name="TProperty10">Type of projected property.</typeparam>
            <typeparam name="TProperty11">Type of projected property.</typeparam>
            <remarks>This class supports the ADO.NET Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`13.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty0">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty1">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty2">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty3">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty4">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty5">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty6">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty7">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty8">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty9">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty10">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty11">
            <summary>Gets or sets a projected property.</summary>
        </member>
        <member name="T:System.Data.Services.KeyInstance">
            <summary>Provides a class used to represent a key for a resource.</summary>
            <remarks>
            Internally, every key instance has a collection of values. These values
            can be named or positional, depending on how they were specified
            if parsed from a URI.
            </remarks>
        </member>
        <member name="F:System.Data.Services.KeyInstance.Empty">
            <summary>Empty key singleton.</summary>
        </member>
        <member name="F:System.Data.Services.KeyInstance.namedValues">
            <summary>Named values.</summary>
        </member>
        <member name="F:System.Data.Services.KeyInstance.positionalValues">
            <summary>Positional values.</summary>
        </member>
        <member name="M:System.Data.Services.KeyInstance.#ctor">
            <summary>Initializes a new empty <see cref="T:System.Data.Services.KeyInstance"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.KeyInstance.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{System.Object})">
            <summary>Initializes a new <see cref="T:System.Data.Services.KeyInstance"/> instance.</summary>
            <param name="namedValues">Named values.</param>
            <param name="positionalValues">Positional values for this instance.</param>
            <remarks>
            One of namedValues or positionalValues should be non-null, but not both.
            </remarks>
        </member>
        <member name="M:System.Data.Services.KeyInstance.TryParseKeysFromUri(System.String,System.Data.Services.KeyInstance@)">
            <summary>Attempts to parse key values from the specified text.</summary>
            <param name="text">Text to parse (not null).</param>
            <param name="instance">After invocation, the parsed key instance.</param>
            <returns>
            true if the key instance was parsed; false if there was a 
            syntactic error.
            </returns>
            <remarks>
            The returned instance contains only string values. To get typed values, a call to
            <see cref="M:System.Data.Services.KeyInstance.TryConvertValues(System.Data.Services.Providers.ResourceType)"/> is necessary.
            </remarks>
        </member>
        <member name="M:System.Data.Services.KeyInstance.TryParseNullableTokens(System.String,System.Data.Services.KeyInstance@)">
            <summary>Attempts to parse nullable values (only positional values, no name-value pairs) from the specified text.</summary>
            <param name="text">Text to parse (not null).</param>
            <param name="instance">After invocation, the parsed key instance.</param>
            <returns>
            true if the given values were parsed; false if there was a 
            syntactic error.
            </returns>
            <remarks>
            The returned instance contains only string values. To get typed values, a call to
            <see cref="M:System.Data.Services.KeyInstance.TryConvertValues(System.Data.Services.Providers.ResourceType)"/> is necessary.
            </remarks>
        </member>
        <member name="M:System.Data.Services.KeyInstance.TryConvertValues(System.Data.Services.Providers.ResourceType)">
            <summary>Tries to convert values to the keys of the specified type.</summary>
            <param name="type">Type with key information for conversion.</param>
            <returns>true if all values were converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.KeyInstance.TryParseFromUri(System.String,System.Boolean,System.Boolean,System.Data.Services.KeyInstance@)">
            <summary>Attempts to parse key values from the specified text.</summary>
            <param name="text">Text to parse (not null).</param>
            <param name="allowNamedValues">Set to true if the parser should accept named values
              so syntax like Name='value'. If this is false, the parsing will fail on such constructs.</param>
            <param name="allowNull">Set to true if the parser should accept null values.
              If set to false, the parser will fail on null values.</param>
            <param name="instance">After invocation, the parsed key instance.</param>
            <returns>
            true if the key instance was parsed; false if there was a 
            syntactic error.
            </returns>
            <remarks>
            The returned instance contains only string values. To get typed values, a call to
            <see cref="M:System.Data.Services.KeyInstance.TryConvertValues(System.Data.Services.Providers.ResourceType)"/> is necessary.
            </remarks>
        </member>
        <member name="P:System.Data.Services.KeyInstance.AreValuesNamed">
            <summary>Whether the values have a name.</summary>
        </member>
        <member name="P:System.Data.Services.KeyInstance.IsEmpty">
            <summary>Checks whether this key has any values.</summary>
        </member>
        <member name="P:System.Data.Services.KeyInstance.NamedValues">
            <summary>Returns a dictionary of named values when they AreValuesNamed is true.</summary>
        </member>
        <member name="P:System.Data.Services.KeyInstance.PositionalValues">
            <summary>Returns a list of values when they AreValuesNamed is false.</summary>
        </member>
        <member name="P:System.Data.Services.KeyInstance.ValueCount">
            <summary>Number of values in the key.</summary>
        </member>
        <member name="T:System.Data.Services.OpenTypes.LateBoundMethods">
            <summary>Use this class to perform late-bound operations on open properties.</summary>    
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.AddMethodInfo">
            <summary>MethodInfo for Add.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.DivideMethodInfo">
            <summary>MethodInfo for Divide.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThanMethodInfo">
            <summary>MethodInfo for GreaterThan.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThanOrEqualMethodInfo">
            <summary>MethodInfo for GreaterThanOrEqual.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.LessThanMethodInfo">
            <summary>MethodInfo for LessThan.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.LessThanOrEqualMethodInfo">
            <summary>MethodInfo for LessThanOrEqual.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.ModuloMethodInfo">
            <summary>MethodInfo for Modulo.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.MultiplyMethodInfo">
            <summary>MethodInfo for Multiply.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.NotEqualMethodInfo">
            <summary>MethodInfo for NotEqual.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.PowerMethodInfo">
            <summary>MethodInfo for Power.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.SubtractMethodInfo">
            <summary>MethodInfo for Subtract.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.NegateMethodInfo">
            <summary>MethodInfo for Negate.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.NotMethodInfo">
            <summary>MethodInfo for Not.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.EqualMethodInfo">
            <summary>MethodInfo for bool LateBoundMethods.Equal(object left, object right).</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.GetValueMethodInfo">
            <summary>MethodInfo for object LateBoundMethods.GetValue(this object value, string propertyName).</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.GetValueOpenPropertyMethodInfo">
            <summary>MethodInfo for object LateBoundMethods.GetValue(this object value, string propertyName).</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypes.LateBoundMethods.GetSequenceValueMethodInfo">
            <summary>MethodInfo for IEnumerable&lt;T&gt; LateBoundMethods.GetSequenceValue(this object value, string propertyName).</summary>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GetValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets a named value from the specified object.</summary>
            <param name='value'>Object to get value from.</param>
            <param name='property'>ResourceProperty describing the property whose value needs to be fetched.</param>
            <returns>The requested value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GetValue(System.Object,System.String)">
            <summary>Gets a named value from the specified object.</summary>
            <param name='value'>Object to get value from.</param>
            <param name='propertyName'>Name of property to get.</param>
            <returns>The requested value; null if not found.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GetSequenceValue``1(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets a named value from the specified object as a sequence.</summary>
            <param name='value'>Object to get value from.</param>
            <param name='property'>ResourceProperty describing the property whose value needs to be fetched.</param>
            <typeparam name="T">expected result type</typeparam>
            <returns>The requested value as a sequence; null if not found.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Add(System.Object,System.Object)">
            <summary>Adds two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The added value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Divide(System.Object,System.Object)">
            <summary>Divides two values.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The divided value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Equal(System.Object,System.Object)">
            <summary>Checks whether two values are equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left equals right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThan(System.Object,System.Object)">
            <summary>Checks whether the left value is greater than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThanOrEqual(System.Object,System.Object)">
            <summary>Checks whether the left value is greater than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.LessThan(System.Object,System.Object)">
            <summary>Checks whether the left value is less than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.LessThanOrEqual(System.Object,System.Object)">
            <summary>Checks whether the left value is less than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Modulo(System.Object,System.Object)">
            <summary>Calculates the remainder of dividing the left value by the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The remainder value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Multiply(System.Object,System.Object)">
            <summary>Multiplies two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The multiplication value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.NotEqual(System.Object,System.Object)">
            <summary>Checks whether two values are not equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is does not equal right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Power(System.Object,System.Object)">
            <summary>Raises the left value to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The power value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Subtract(System.Object,System.Object)">
            <summary>Subtracts the right value from the left value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The subtraction value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Negate(System.Object)">
            <summary>Negates (arithmetically) the specified value.</summary>
            <param name='value'>Value.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Not(System.Object)">
            <summary>Negates (logically) the specified value.</summary>
            <param name='value'>Value.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.UnaryPlus(System.Object)">
            <summary>Performs an UnaryPlus operation on the specified value.</summary>
            <param name='value'>Value.</param>
            <returns>The resulting value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.TypeIs(System.Object,System.Type)">
            <summary>Performs an type check on the specified value.</summary>
            <param name='value'>Value.</param>
            <param name='type'>Type to check for.</param>
            <returns>True if value is-a type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.EndsWith(System.Object,System.Object)">
            <summary>
            Checks with the parameters are of string type, if no, then they throw.
            Otherwise returns true if the target string ends with the given sub string
            </summary>
            <param name="targetString">target string</param>
            <param name="substring">sub string</param>
            <returns>Returns true if the target string ends with the given sub string, otherwise return false.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.IndexOf(System.Object,System.Object)">
            <summary>
            Returns the index of the given substring in the target string.
            </summary>
            <param name="targetString">target string</param>
            <param name="substring">sub string to match</param>
            <returns>returns the index of the given substring in the target string if present, otherwise returns null.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Replace(System.Object,System.Object,System.Object)">
            <summary>
            Replaces the given substring with the new string in the target string.
            </summary>
            <param name="targetString">target string</param>
            <param name="substring">substring to be replaced.</param>
            <param name="newString">new string that replaces the sub string.</param>
            <returns>returns a new string with the substring replaced with new string.</returns> 
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.StartsWith(System.Object,System.Object)">
            <summary>
            Checks whether the target string starts with the substring.
            </summary>
            <param name="targetString">target string.</param>
            <param name="substring">substring</param>
            <returns>returns true if the target string starts with the given sub string, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.ToUpper(System.Object)">
            <summary>
            Returns a copy of the target string converted to uppercase.
            </summary>
            <param name="targetString">target string</param>
            <returns>a new string instance with everything in uppercase.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.ToLower(System.Object)">
            <summary>
            Returns a copy of the target string converted to lowercase.
            </summary>
            <param name="targetString">target string</param>
            <returns>a new string instance with everything in lowercase.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Substring(System.Object,System.Object)">
            <summary>
            Returns the substring given the starting index
            </summary>
            <param name="targetString">target string</param>
            <param name="startIndex">starting index for the substring.</param>
            <returns>the substring given the starting index.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Substring(System.Object,System.Object,System.Object)">
            <summary>
            Returns the substring from the target string.
            </summary>
            <param name="targetString">target string.</param>
            <param name="startIndex">starting index for the substring.</param>
            <param name="length">length of the substring.</param>
            <returns>Returns the substring given the starting index and length.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.SubstringOf(System.Object,System.Object)">
            <summary>
            Checks whether the given string is a substring of the target string.
            </summary>
            <param name="substring">substring to check for.</param>
            <param name="targetString">target string.</param>
            <returns>returns true if the target string contains the substring, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Trim(System.Object)">
            <summary>
            Removes all leading and trailing white-space characters from the target string. 
            </summary>
            <param name="targetString">target string.</param>
            <returns>returns the trimed string.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Concat(System.Object,System.Object)">
            <summary>
            Concats the given 2 string.
            </summary>
            <param name="first">first string.</param>
            <param name="second">second string.</param>
            <returns>returns a new instance of the concatenated string.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Year(System.Object)">
            <summary>
            Returns the year value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the year value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Month(System.Object)">
            <summary>
            Returns the month value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the month value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Day(System.Object)">
            <summary>
            Returns the day value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the day value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Hour(System.Object)">
            <summary>
            Returns the hour value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the hour value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Minute(System.Object)">
            <summary>
            Returns the minute value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the minute value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Second(System.Object)">
            <summary>
            Returns the second value of the given datetime.
            </summary>
            <param name="dateTime">datetime object.</param>
            <returns>returns the second value of the given datetime.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Round(System.Object)">
            <summary>
            Rounds the given value.
            </summary>
            <param name="value">decimal or double object.</param>
            <returns>returns the round value for the given double or decimal value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Floor(System.Object)">
            <summary>
            returns the floor of the given value.
            </summary>
            <param name="value">decimal or double object.</param>
            <returns>returns the floor value for the given double or decimal value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Ceiling(System.Object)">
            <summary>
            Returns the ceiling of the given value
            </summary>
            <param name="value">decimal or double object.</param>
            <returns>returns the ceiling value for the given double or decimal value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.Length(System.Object)">
            <summary>
            Returns the length of the given string value. If the value is not of string type, then it throws.
            </summary>
            <param name="value">value whose length needs to be calculated.</param>
            <returns>length of the string value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.AndAlsoExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates a BinaryExpression that represents a conditional AND operation that evaluates the second operand only if it has to.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The conditional expression; null if the expressions aren't of the right type.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.AddExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that adds two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The added value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.DivideExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that divides two values.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The divided value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.EqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether two values are equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left equals right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThanExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is greater than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.GreaterThanOrEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is greater than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.LessThanExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is less than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.LessThanOrEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is less than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.ModuloExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that calculates the remainder of dividing the left value by the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The remainder value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.MultiplyExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that multiplies two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The multiplication value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.OrElseExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates a BinaryExpression that represents a conditional OR operation that evaluates the second operand only if it has to.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The conditional expression; null if the expressions aren't of the right type.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.NotEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether two values are not equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is does not equal right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.PowerExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that raises the left value to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The power value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.SubtractExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that subtracts the right value from the left value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The subtraction value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.NegateExpression(System.Linq.Expressions.Expression)">
            <summary>Creates an expression that negates (arithmetically) the specified value.</summary>
            <param name='expression'>Value expression.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.NotExpression(System.Linq.Expressions.Expression)">
            <summary>Creates an expression that negates (logically) the specified value.</summary>
            <param name='expression'>Value expression.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.ExpressionAsBoolean(System.Linq.Expressions.Expression)">
            <summary>
            Returns the specified <paramref name="expression"/> with a 
            type assignable to System.Boolean.
            </summary>
            <param name="expression">Expression to convert.</param>
            <returns>
            The specified <paramref name="expression"/> with a type assignable 
            to System.Boolean; null if the conversion can't be made.
            </returns>
        </member>
        <member name="M:System.Data.Services.OpenTypes.LateBoundMethods.ExpressionAsObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the specified <paramref name="expression"/> with a 
            type assignable to System.Object.
            </summary>
            <param name="expression">Expression to convert.</param>
            <returns>
            The specified <paramref name="expression"/> with a type assignable 
            to System.Object.
            </returns>
        </member>
        <member name="T:System.Data.Services.MimeTypeAttribute">
            <summary>
            Use this attribute on a DataService service operation method
            or a data object property to indicate than the type returned is 
            of a specific MIME type.
            </summary>
        </member>
        <member name="F:System.Data.Services.MimeTypeAttribute.memberName">
            <summary>Name of the attributed method or property.</summary>
        </member>
        <member name="F:System.Data.Services.MimeTypeAttribute.mimeType">
            <summary>MIME type for the attributed method or property.</summary>
        </member>
        <member name="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.MimeTypeAttribute"/> instance with
            the specified MIME type.
            </summary>
            <param name="memberName">Name of the attributed method or property.</param>
            <param name="mimeType">MIME type for the attributed method or property.</param>
        </member>
        <member name="M:System.Data.Services.MimeTypeAttribute.GetMimeTypeAttribute(System.Reflection.MemberInfo)">
            <summary>
            Gets the MIME type declared on the specified <paramref name="member"/>.
            </summary>
            <param name="member">Member to check.</param>
            <returns>
            The MIME type declared on the specified <paramref name="member"/>; null
            if no attribute is declared.
            </returns>
        </member>
        <member name="P:System.Data.Services.MimeTypeAttribute.MemberName">
            <summary>Name of the attributed method or property.</summary>
        </member>
        <member name="P:System.Data.Services.MimeTypeAttribute.MimeType">
            <summary>
            MIME type for the attributed method or property.
            </summary>
        </member>
        <member name="T:System.Data.Services.Internal.NeedSkipTokenVisitor">
            <summary>
            Visitor to evaluate if skip tokens are needed for a given <see cref="T:System.Data.Services.Providers.OrderingInfo"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Internal.NeedSkipTokenVisitor.rt">
            <summary>Resource type for which we are evaluating ordering expressions</summary>
        </member>
        <member name="F:System.Data.Services.Internal.NeedSkipTokenVisitor.provider">
            <summary>Data service provider to use for property discovery</summary>
        </member>
        <member name="F:System.Data.Services.Internal.NeedSkipTokenVisitor.property">
            <summary>Resource property to which the ordering expression corresponds</summary>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.#ctor(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Internal.NeedSkipTokenVisitor"/> instance.</summary>
            <param name="provider">Data provider used to get accessible properties of <see cref="T:System.Data.Services.Providers.ResourceType"/>.</param>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.#ctor(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Internal.NeedSkipTokenVisitor"/> instance.
            </summary>
            <param name="rt">Resource type for which we are evaluating ordering expressions</param>
            <param name="provider">Data provider used to get accessible properties of <paramref name="rt"/>.</param>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.IsSkipTokenRequired(System.Data.Services.Providers.OrderingInfo,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Finds out if the given <paramref name="orderingInfo"/> required a skip token 
            expression in the expansion
            </summary>
            <param name="orderingInfo">Input orderingInfo.</param>
            <param name="provider">Data provider used to get accessible properties of <see cref="T:System.Data.Services.Providers.ResourceType"/>.</param>
            <returns>true if skip token expression is needed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.CollectSkipTokenProperties(System.Data.Services.Providers.OrderingInfo,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Obtains a collection of resource properties that are needed for skip token generation
            </summary>
            <param name="orderingInfo">Input orderingInfo.</param>
            <param name="rt">Resource type for which to collect the skip token properties</param>
            <param name="provider">Data provider used to get accessible properties of <paramref name="rt"/>.</param>
            <returns>Collection of resource properties used in $skiptoken</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Override the <see cref="T:System.Data.Services.ExpressionVisitor"/> method to decide if we need skip token expression in the expansion
            </summary>
            <param name="exp">Input expression</param>
            <returns>Output expression which is the same as input expression for this visitor</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Override for member access visitor
            </summary>
            <param name="m">Member access expression</param>
            <returns>Same expressions as <paramref name="m"/></returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Override for parameter expression
            </summary>
            <param name="p">Parameter expression</param>
            <returns>Same parameter as <paramref name="p"/></returns>
        </member>
        <member name="P:System.Data.Services.Internal.NeedSkipTokenVisitor.NeedSkipToken">
            <summary>
            True of skiptoken is required for this instance, false otherwise
            </summary>
        </member>
        <member name="P:System.Data.Services.Internal.NeedSkipTokenVisitor.Property">
            <summary>
            Resource property to which the ordering expression corresponds
            </summary>
        </member>
        <member name="T:System.Data.Services.OpenTypeAttribute">
            <summary>Attribute to be annotated on open property types.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypeAttribute.propertyName">
            <summary>Name of the property with open properties.</summary>
        </member>
        <member name="M:System.Data.Services.OpenTypeAttribute.#ctor">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.OpenTypeAttribute"/> instance for an 
            open type with a property named 'OpenProperties'.
            </summary>
        </member>
        <member name="M:System.Data.Services.OpenTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.OpenTypeAttribute"/> instance for an 
            open type with a property named as specified.
            </summary>
            <param name="propertyName">Name of dictionary property containing open properties.</param>
        </member>
        <member name="P:System.Data.Services.OpenTypeAttribute.PropertyName">
            <summary>Name of the property with open properties.</summary>
        </member>
        <member name="T:System.Data.Services.OpenTypeKind">
            <summary>
            Provides an enumeration to describe the kind of open type object.
            </summary>
        </member>
        <member name="F:System.Data.Services.OpenTypeKind.NotAnOpenType">
            <summary>Its not an open type.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypeKind.QueryOnly">
            <summary>Only supports query.</summary>
        </member>
        <member name="F:System.Data.Services.OpenTypeKind.CompletelyOpen">
            <summary>Completely open type - meaning supports both query and update.</summary>
        </member>
        <member name="T:System.Data.Services.ProcessRequestArgs">
            <summary>Use this class to look at the request uri and doing some custom validation.</summary>
        </member>
        <member name="F:System.Data.Services.ProcessRequestArgs.requestUri">
            <summary>The uri for this request.</summary>
        </member>
        <member name="F:System.Data.Services.ProcessRequestArgs.isBatchOperation">
            <summary>True if this request is a operation specified within a batch request, otherwise false.</summary>
        </member>
        <member name="M:System.Data.Services.ProcessRequestArgs.#ctor(System.Uri,System.Boolean)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.ProcessRequestArgs"/> instance.</summary>
            <param name="requestUri">The uri for this request.</param>
            <param name="isBatchOperation">True if this request is a operation specified within a batch request, otherwise false.</param>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.RequestUri">
            <summary>The uri for this request that is about to get processed.</summary>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation">
            <summary>Returns true if this request is a operation specified within a batch request, otherwise returns false.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.EndInfo">
            <summary>
            Stores information about an end of an association.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EndInfo.Name">
            <summary>Name of the relationship end </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EndInfo.Type">
            <summary>Type of the relationship end.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EndInfo.Multiplicity">
            <summary>Mulitplicity of the relationship end </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EndInfo.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Creates a new instance of EndInfo.
            </summary>
            <param name="name">name of the end.</param>
            <param name="type">resource type that the end refers to.</param>
            <param name="multiplicity">multiplicity of the end.</param>
        </member>
        <member name="T:System.Data.Services.Providers.AssociationInfo">
            <summary>
            Stores information about a association and its ends
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.AssociationInfo.FullName">
            <summary>FullName of the association.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.AssociationInfo.Name">
            <summary>Name of the association </summary>
        </member>
        <member name="F:System.Data.Services.Providers.AssociationInfo.Ends">
            <summary>collection of ends for this association.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.AssociationInfo.#ctor(System.String,System.String,System.Data.Services.Providers.EndInfo,System.Data.Services.Providers.EndInfo)">
            <summary>
            Creates a new instance of AssociationInfo to store information about an association.
            </summary>
            <param name="name">name of the association.</param>
            <param name="namespaceName">namespaceName of the association.</param>
            <param name="end1">first end of the association.</param>
            <param name="end2">second end of the association.</param>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceProviderWrapper">
            <summary>
            Class to abstract IDataServiceProvider, hence making sure all the IDataServiceProvider calls
            are made via this class.
            Each request must create a new instance of this class!!!!
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.provider">
            <summary>Actual data provider instance.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.configuration">
            <summary>
            Cached configuration for this wrapper. we use this to determine access rights when demanded.
            This relies on the fact that the wrapper is created new for each request.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.visibleTypeCache">
            <summary>
            Keep track of the calculated visibility of resource types.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.#ctor(System.Data.Services.Providers.IDataServiceProvider,System.Data.Services.DataServiceConfiguration)">
            <summary>
            Creates a new instance of DataServiceProviderWrapper instance.
            </summary>
            <param name="provider">instance of the actual data service provider.</param>
            <param name="configuration">instance of the data service configuration for the current request.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.DisposeDataSource">
            <summary>Disposes of the underlying <see cref="P:System.Data.Services.Providers.DataServiceProviderWrapper.CurrentDataSource"/>.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveResourceSet(System.String)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <returns>Resolved resource set, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetSetForResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the name of the container that holds this resource type.</summary>
            <param name="resourceType">Resource to get container for.</param>
            <returns>
            The name of the container for the specified resource; null if it cannot
            be determined.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the container.
            </summary>
            <param name="resourceSet">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveResourceType(System.String)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <returns>Resolved resource type, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="instance"/>.</summary>
            <param name="instance">Instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="instance"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="instance"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveServiceOperation(System.String)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <returns>Resolved service operation, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetPropertyValue(System.Object,System.String)">
            <summary>
            Get the value of the open property.
            </summary>
            <param name="target">instance of the type declaring the open property.</param>
            <param name="propertyName">name of the open property.</param>
            <returns>value for the open property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation and returns the results.
            </summary>
            <param name="serviceOperation">service operation to invoke.</param>
            <param name="parameters">value of parameters to pass to the service operation.</param>
            <returns>returns the result of the service operation. If the service operation returns void, then this should return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceTypePropertiesMaxCapacity(System.Data.Services.Providers.ResourceType)">
            <summary>
            Determines the capacity for lists and similar structure which want to store all properties on the given type.
            This is a perf optimization method. Instead of letting the caller enumerate over all properties
            on a given type which is expensive because of access checks, we return the total number of properties here
            which is a good approximation of the count (always bigger, but close).
            </summary>
            <param name="resourceType">The resource type to get the number of properties from.</param>
            <returns>Estimated number of properties for the specified type - use this for capacity of arrays and such.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceTypePrimitiveProperties(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns all primitive properties on the specified resource type. This is a perf optimization method.
            It's much faster than filter the result of GetResourceProperties method which has to perform
            access checks on navigation proparties.
            </summary>
            <param name="resourceType">The resource type to return the properties for.</param>
            <returns>Enumeration of all primitive properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetContainer(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the target container for the given navigation property, source container and the source resource type
            </summary>
            <param name="sourceContainer">source entity set.</param>
            <param name="sourceResourceType">source resource type.</param>
            <param name="navigationProperty">navigation property.</param>
            <returns>target container that the navigation property refers to.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetEpmCompatiblityForV1Provider">
            <summary>
            For a V1 provider checks the Epm compatiblity in order to write the appropriate 
            versioning header for metadata requests
            </summary>
            <returns>true if the provider is V1 compatible, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Return the list of ETag properties for a given type in the context of a given container
            </summary>
            <param name="containerName">Name of the container to use for context (for MEST-enabled providers)</param>
            <param name="resourceType">Type to get the ETag properties for</param>
            <returns>A collection of the properties that form the ETag for the given type in the given container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.WriteMetadataDocument(System.Data.Services.Serializers.MetadataSerializer,System.Xml.XmlWriter)">
            <summary>
            Write the metadata document.
            </summary>
            <param name="serializer">instance of the metadata serializer.</param>
            <param name="writer">xml writer in which we need to write the metadata document.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.CheckIfOrderedType(System.Type)">
            <summary>
            Check if the given type can be ordered. If not, throw an exception.
            </summary>
            <param name="clrType">clr type which needs to checked for ordering.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsV1ProviderAndImplementsUpdatable">
            <summary>
            Checks whether the current data provider is a V1 provider or not.
            </summary>
            <returns>Returns true if the current data source is a V1 provider. Otherwise, returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetService``1">
            <summary>
            Calls the BaseServiceProvider.GetService
            </summary>
            <typeparam name="T">T is the type that needs to get passed to the IServiceProvider.GetService method parameter.</typeparam>
            <returns>returns the instance of the T, as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsEntityTypeDisallowedForSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType)">
            <summary>
            We do not allow entity sets to contain any derived type with navigation properties in the GET path
            </summary>
            <param name="resourceSet">entity set containing the resource type.</param>
            <param name="resourceType">entity type in the hierarchy returned by <paramref name="resourceSet"/>.</param>
            <returns>True if the derived type has any navigation properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceProperties(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns a list of properties for the specified type.
            This method filters out properties which should not be visible to the user.
            </summary>
            <param name="resourceType">The resource type for which to return the properties.</param>
            <returns>A list of properties visible to the user.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourcePropertyByName(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Finds property by its name for the specified resource type
            </summary>
            <param name="resourceType">The resource type to look for the property in</param>
            <param name="propertyName">The name of the property to look for</param>
            <returns>
            Visible property with the specified name. Properties hidden due to access rights
            are not returned by this method.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetPropertiesDeclaredOnThisType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns a list of properties declared directly on the specified type.
            This method filters out properties which should not be visible to the user.
            </summary>
            <param name="resourceType">The resource type for which to return the properties.</param>
            <returns>A list of properties declared directly on the type and visible to the user.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourcePropertyDeclaredOnThisTypeByName(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Searches for a property declared directly on the specified resource type by its name.
            </summary>
            <param name="resourceType">The resource type to search for the property on.</param>
            <param name="propertyName">The name of the property to look for.</param>
            <returns>Property with the specified name which is declared directly on the specified type.
            This method will return null if there's no such property or it's not visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceSetReadOnly(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Throws if resource set is not sealed
            </summary>
            <param name="resourceSet">The resource set to inspect</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceTypeReadOnly(System.Data.Services.Providers.ResourceType)">
            <summary>
            Throws if resource type is not sealed.
            </summary>
            <param name="resourceType">resource type to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourcePropertyReadOnly(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Throws if the resource property is not sealed.
            </summary>
            <param name="resourceProperty">resource property to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateServiceOperationReadOnly(System.Data.Services.Providers.ServiceOperation)">
            <summary>
            Throws if the service operation is not sealed.
            </summary>
            <param name="serviceOperation">service operation to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsResourceSetVisible(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Determines if a given resource set should be hidden from the user.
            </summary>
            <param name="resourceSet">The resource set to inspect</param>
            <returns>
            True if the resource set specified can not be accessed by the user at all and thus should be hidden
            from the rest of the service.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Validates if the container should be visible and is not read only. If the container rights
            are set to None the container should not be visible.
            </summary>
            <param name="resourceSet">Resource set to be validated.</param>
            <returns>Validated container, null if the container is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsEntityTypeVisible(System.Data.Services.Providers.ResourceType)">
            <summary>
            Determine if <paramref name="resourceType"/> is visible
            </summary>
            <param name="resourceType">resource type in question, must be primitive or entity type.</param>
            <returns>True if <paramref name="resourceType"/> is visible, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsComplexTypeVisible(System.Data.Services.Providers.ResourceType,System.Boolean@)">
            <summary>
            Determine if the complex type <paramref name="resourceType"/> is visible. This method is expensive, it should
            only be called for the $metadata case, through the this.VisibleTypes property.
            </summary>
            <param name="resourceType">resource type in question, must be primitive or entity type.</param>
            <param name="hasOpenType">this is set to true if we encounter at least 1 open type.</param>
            <returns>True if <paramref name="resourceType"/> is visible, false otherwise.</returns>
            <remarks>
            WARNING!!! This method should only be called from this.Types property. We should only reach here in the $metadata
            code path.  This method is very expensive since we potientially loop through all entity types and service operations
            returned by the underlying provider.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsComplexTypeVisibleHelper(System.Data.Services.Providers.ResourceType,System.Collections.Generic.HashSet{System.Data.Services.Providers.ResourceType},System.Boolean@)">
            <summary>
            Helper to determines whether or not a complex type is visible or return null if we cannot determine this at the
            current recursive iteration.
            </summary>
            <param name="resourceType">The complex type instance</param>
            <param name="visitedType">Keeps track of the types visited in the recursive stack.</param>
            <param name="hasOpenType">this is set to true if we encounter at least 1 open type.</param>
            <returns>
            Returns true if the specified complex type is visible, because it's referenced by a visible entity/complex type or
            returned by a visible service operation.
            </returns>
            <remarks>
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource types.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Validates if the type should be visible and is not read only
            </summary>
            <param name="resourceType">Resource type to be validated.</param>
            <returns>Validated resource type, null if the resource type is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsResourcePropertyVisible(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Determines if a given property should be visible to the user.
            </summary>
            <param name="resourceProperty">The resource property to inspect</param>
            <returns>True if the property should be visible to the user. This means it points to an entity
            which the user does have access to.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceProperty(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Validates if the property should be visible and is not read only
            </summary>
            <param name="resourceProperty">Resource property to be validated.</param>
            <returns>Validated resource property, null if the resource property is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsServiceOperationVisible(System.Data.Services.Providers.ServiceOperation)">
            <summary>
            Determins if a given service operation should be hidden from the user.
            </summary>
            <param name="serviceOperation">The service operation to inspect</param>
            <returns>
            True if the service operation specified can not be accessed by the user at all and thus should be hidden
            from the rest of the service.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateServiceOperation(System.Data.Services.Providers.ServiceOperation)">
            <summary>
            Validates if the service operation should be visible and is read only. If the service operation
            rights are set to None the service operation should not be visible.
            </summary>
            <param name="serviceOperation">Service operation to be validated.</param>
            <returns>Validated service operation, null if the service operation is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.HasNavigationProperties(System.Data.Services.Providers.ResourceType)">
            <summary>
            Checks whether the resource type has visible navigation properties or not.
            </summary>
            <param name="resourceType">resource type to inspect.</param>
            <returns>Returns true if the resource type has one or more visible navigation properties. Otherwise returns false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.CurrentDataSource">
            <summary>The data source from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ResourceSets">
            <summary>Gets all visible containers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.Types">
            <summary>
            Returns all visible types in this data source
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource types.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ServiceOperations">
            <summary>Returns all the visible service operations in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.Configuration">
            <summary>
            Cached configuration with access rights info.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.IsV1Provider">
            <summary>
            Returns true if the data provider is a V1 provider i.e. ReflectionServiceProvider or ObjectContextServiceProvider.
            Otherwise returns false.
            </summary>
        </member>
        <member name="T:System.Data.Services.Common.EntityPropertyMappingInfo">
            <summary>
            Holds information needed during content serialization/deserialization for
            each EntityPropertyMappingAttribute
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EntityPropertyMappingInfo.Attribute">
            <summary>
            The <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> corresponding to this object
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EntityPropertyMappingInfo.PropValReader">
            <summary>
            Delegate dynamically generated which is used for accessing the source property path
            for <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/>.
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EntityPropertyMappingInfo.DefiningType">
            <summary>
            Type that has the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/>
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EntityPropertyMappingInfo.OpenProperty">
            <summary>
            Is the info referrring to an open property
            </summary>
        </member>
        <member name="P:System.Data.Services.Common.EntityPropertyMappingInfo.IsEFProvider">
            <summary>Is the current data source an EF provider</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OrderingExpression">
            <summary>
            Describes a single ordering expression along with sort order
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingExpression.orderingExpression">
            <summary>Ordering expression</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingExpression.isAscending">
            <summary>Order is ascending or descending</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingExpression.#ctor(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="orderingExpression">Expression for ordering</param>
            <param name="isAscending">Order by ascending or descending</param>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingExpression.Expression">
            <summary>Ordering expression</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingExpression.IsAscending">
            <summary>Ascending or descending</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OrderingInfo">
            <summary>
            Describes ordering information for each entity set
            for $expand request for an ADO.Net Data Service.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingInfo.paged">
            <summary>Is the expanded entity set paged</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingInfo.orderingExpressions">
            <summary>Collection of ordering expressions</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingInfo.#ctor(System.Boolean)">
            <summary>Constructor</summary>
            <param name="paged">Whether top level entity set is paged</param>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingInfo.Add(System.Data.Services.Providers.OrderingExpression)">
            <summary>Adds a single OrderingExpression to the collection</summary>
            <param name="orderingExpression">Ordering expression to add</param>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingInfo.IsPaged">
            <summary>Is the expaded entity set paged</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingInfo.OrderingExpressions">
            <summary>Gives the collection of ordering expressions for a request</summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceStreamProvider">
            <summary>
            The IStreamProvider interface defines the contract between the data services framework server component
            and a data source's stream implementation (ie. a stream provider).
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStream(System.Object,System.Data.Services.IDataServiceHost2)">
            <summary>
            This method is invoked by the data services framework to retrieve the default stream associated
            with the Entity Type specified by the <paramref name="entity"/> parameter.
            
            Notes to Interface Implementers
            The host is passed as an argument as it is likely that an implementer of this interface method
            will need information from the HTTP request headers in order to construct a stream.  Likely header
            values required are: 
              'Accept'
              'Accept-Charset'
              'Accept-Encoding'
              
            It is the implementer of this methods responsibility to honor the values of the appropriate request
            headers when generating the returned response stream.
            
            Additionally it is the implementer of this methods responsibility to set the appropriate values
            (HTTP response headers) on the host instance passed as an argument.  Header values an implementation
            of this method must set are:
              'Content-Type'
              Other 'Content=*' headers may optionally be set
              
            NOTE: an implementer of this method should only set the properties on the host instance which it
            requires to be set for a successful response.  Altering other properties on the host instance may
            corrupt the response from the data service.
            
            Stream Ownership
            The data service framework will close the stream once all byte have been successfully read.
            
            If an error occurs while reading the stream, then the data services framework will generate an
            in-stream error which is sent back to the client.  See the error contract specification for a 
            description of the format of in-stream errors
            </summary>
            <param name="entity">The stream returned should be the default stream associated with this entity.</param>
            <param name="host">A reference to the IDataServiceHost2 instance used by the dataservices framework to process the request.</param>
            <returns>A valid stream the data service use to query / read a streamed BLOB which is associated with the <paramref name="entity"/>.</returns>
            <remarks>An implementer of this method of this method should thrown the following exceptions under the specified conditions:</remarks>
            <exception cref="T:System.ArgumentNullException">entity or host parameters are null.</exception>
            <exception cref="T:System.ArgumentException">entity does not represent an Entity Type which has a default stream attached to it.</exception>
            <exception cref="T:System.Data.Services.DataServiceException">if a valid stream cannot be returned.  Null should never be returned from this method.</exception>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetWriteStream(System.Object,System.Data.Services.IDataServiceHost2)">
            <summary>
            This method is invoked by the data services framework whenever an insert or update operation is 
            being processed for the stream associated with the Entity Type specified via the entity parameter.
            
            Notes to Interface Implementers
            The host is passed as an argument as it is likely that an implementer of this interface method will 
            need information from the HTTP request headers in order to construct a write stream.  Likely header 
            values required are: 
              'Content-Type'
              'Content-Disposition'
              'Slug' (as specified in the AtomPub RFC 5023)
              
            Additionally it is the implementer of this methods responsibility to set the appropriate values 
            (HTTP response headers) on the host instance passed as an argument.  Header values an implementation 
            of this method must set are:
              'Content-Type'
              Other 'Content=*' headers may optionally be set
            
            NOTE: an implementer of this method should only set the properties on the host instance which it 
            requires to be set for a successful response.  Altering other properties on the host instance may 
            corrupt the response from the data service.
            
            Stream Ownership
            The data service framework will close the stream once all bytes have been successfully written to
            the stream.
            
            If an error occurs while writing to the stream, then the data services framework will generate an 
            error response to the client as per the "error contract" semantics followed by V1 data services
            </summary>
            <param name="entity">The stream returned should be the default stream associated with this entity.</param>
            <param name="host">A reference to the IDataServiceHost2 instance used by the data services framework to process the request.</param>
            <returns>A valid stream the data service use to write the contents of a BLOB which is associated with <paramref name="entity"/>.</returns>
            <remarks>An implementer of this method of this method should thrown the following exceptions under the specified conditions:</remarks>
            <exception cref="T:System.ArgumentNullException">entity or host parameters are null.</exception>
            <exception cref="T:System.ArgumentException">entity does not represent an Entity Type which has a default stream attached to it.</exception>
            <exception cref="T:System.Data.Services.DataServiceException">if a valid stream cannot be returned.  Null should never be returned from this method.</exception>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.DeleteStream(System.Object,System.Data.Services.IDataServiceHost2)">
            <summary>
            This method is invoked by the data services framework whenever an delete operation is being processed for the stream associated with
            the Entity Type specified via the entity parameter.
            
            Notes to Interface Implementers
            If this method is being invoked as part of a request to delete the MLE and its associated stream (ie. MR):
              This method will be invoked AFTER IUpdatable.DeleteResource(entity) is called.  An implementer of this method must be able to
              delete a stream even if the associated entity (passed as a parameter to this method) has already been removed from the
              underlying data source.
              The data services framework will start an ambient transaction via System.Transactions.  The implementation of this method should
              perform actions on the stream in the context of that transaction.  The data services framework will abort the transaction if this
              method throws any exceptions.
            
            The host is passed as an argument as a means for this method to read the HTTP request headers provided with the delete request.
            
            NOTE: an implementer of this method should only set the properties on the host instance which it requires to be set for a successful
            response.  Altering other properties on the host instance may corrupt the response from the data service.
            </summary>
            <param name="entity">The stream deleted should be the default stream associated with this entity.</param>
            <param name="host">A reference to the IDataServiceHost2 instance used by the data services framework to process the request.</param>
            <remarks>An implementer of this method of this method should thrown the following exceptions under the specified conditions:</remarks>
            <exception cref="T:System.ArgumentNullException">entity or host parameters are null.</exception>
            <exception cref="T:System.ArgumentException">entity does not represent an Entity Type which has a default stream attached to it.</exception>
            <exception cref="T:System.Data.Services.DataServiceException">if the stream associated with the entity specified could not be deleted.</exception>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamDescriptor(System.Object,System.Data.Services.IDataServiceHost2)">
            <summary>
            This method is invoked by the data services framework to obtain metadata about the stream associated with the specified entity.
            This metadata is needed when constructing the payload for the Media Link Entry associated with the stream (aka Media Resource).
            
            The returned DataServiceStreamDescriptor instance MUST:
              Have the ContentType property set to a valid mime type value which represents the content type of the associated stream.
            The returned DataServiceStreamDescriptor instance MAY:
              Have the ReadStreamUri property set to a valid URI which is the URI to be used to retrieve the Media Resource.  If the
              ReadStreamUri property is null or empty, the data services framework will use a system generated URI for the stream.  This
              property is only used when the stream may be retrieved from an alternate location such as a Content Distribution Network.
            </summary>
            <param name="entity">The entity for which the descriptor object should be returned.</param>
            <param name="host">A reference to the IDataServiceHost2 instance used by the data services framework to process the request.</param>
            <returns>
            Returns a <see cref="T:System.Data.Services.Providers.DataServiceStreamDescriptor"/> describing the metadata about the stream associated with the
            specified <paramref name="entity"/>.
            </returns>
            <remarks>An implementer of this method of this method should thrown the following exceptions under the specified conditions:</remarks>
            <exception cref="T:System.ArgumentNullException">entity or host parameters are null.</exception>
            <exception cref="T:System.ArgumentException">entity does not represent an Entity Type which has a default stream attached to it.</exception>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.ResolveType(System.Data.Services.IDataServiceHost2)">
            <summary>
            This method is invoked by the data services framework when a request is received to insert into an Entity Set with an associated
            Entity Type hierarchy that has &gt; 1 Entity Type and &gt;= 1 Entity Type which is tagged as an MLE (ie. includes a stream).
            
            An implementer of this method should inspect the request headers provided by the ‘host’ argument and return the namespace
            qualified type name which represents the type the Astoria framework should instantiate to create the MLE associated with the
            BLOB/MR being inserted.  The string representing the MLE type name returned from this method will subsequently be passed to
            IUpdatable.CreateResource to create the MLE (of the specified type).
            </summary>
            <param name="host">A reference to the IDataServiceHost2 instance used by the data services framework to process the request.</param>
            <returns>
            Namespace qualified type name which represents the type the Astoria framework should instantiate to create the MLE associated
            with the BLOB/MR being inserted.
            </returns>
            <remarks>An implementer of this method of this method should thrown the following exceptions under the specified conditions:</remarks>
            <exception cref="T:System.ArgumentNullException">Host parameter is null.</exception>
            <exception cref="T:System.Data.Services.DataServiceException">An entity type name cannot be resolved given the host parameter provided.</exception>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceStreamProvider.StreamBufferSize">
            <summary>
            Specifies the buffer size the data service will use when reading from read stream or writing to the write stream.
            If the size is 0, the default of 64k will be used.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceStreamDescriptor">
            <summary>
            Stores metadata about a data service stream.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceStreamDescriptor.ContentType">
            <summary>
            The returned <see cref="T:System.Data.Services.Providers.DataServiceStreamDescriptor"/> instance MUST have the ContentType property set to a valid mime type value which
            represents the content type of the associated stream.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceStreamDescriptor.ReadStreamUri">
            <summary>
            The returned <see cref="T:System.Data.Services.Providers.DataServiceStreamDescriptor"/> instance MAY have the ReadStreamUri property set to a valid URI which is the URI to be
            used to retrieve the Media Resource.  If the ReadStreamUri property is null or empty, the data services framework will use a 
            system generated URI for the stream.  This property is only used when the stream may be retrieved from an alternate location such 
            as a Content Distribution Network.
            </summary>
        </member>
        <member name="T:System.Data.Services.QueryInterceptorAttribute">
            <summary>
            Use this attribute on a DataService method to indicate than this method should be invoked to intercept queries.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryInterceptorAttribute.entitySetName">
            <summary>Entity set name that the method filters.</summary>
        </member>
        <member name="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)">
            <summary>Declares a new <see cref="T:System.Data.Services.QueryInterceptorAttribute"/> instance.</summary>
            <param name="entitySetName">Entity set name that the method intercepts queries for.</param>
        </member>
        <member name="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName">
            <summary>Entity set name that the method intercepts queries for.</summary>
        </member>
        <member name="T:System.Data.Services.RequestQueryCountOption">
            <summary>
            Query Counting Option
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.None">
            <summary>Do not count the result set</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.Inline">
            <summary>Count and return value inline (together with data)</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.ValueOnly">
            <summary>Count and return value only (as integer)</summary>
        </member>
        <member name="T:System.Data.Services.RequestDescription">
            <summary>
            Use this class to describe the data request a client has
            submitted to the service.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.DataServiceDefaultResponseVersion">
            <summary>
            The default response version of the data service. If no version is set for a particular response
            The DataService will respond with this version (1.0)
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.containerName">
            <summary>The name of the container for results.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.expandPaths">
            <summary>List of paths to be expanded, possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.mimeType">
            <summary>The MIME type for the requested resource, if specified.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.resultUri">
            <summary>URI for the result (without the query component).</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.segmentInfos">
            <summary>SegmentInfo containing information about every segment in the uri</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.usesContainerName">
            <summary>Whether the container name should be used to name the result.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.countOption">
            <summary>Query count option, whether to count the result set or not, and how</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.countValue">
            <summary>The value of the row count</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.requireMinimumVersion">
            <summary>The minimum client version requirement</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.responseVersion">
            <summary>The server response version</summary>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Data.Services.RequestTargetKind,System.Data.Services.RequestTargetSource,System.Uri)">
            <summary>
            Initializes a new RequestDescription for a query specified by the
            request Uri.
            </summary>
            <param name="targetKind">The kind of target for the request.</param>
            <param name="targetSource">The source for this target.</param>
            <param name="resultUri">URI to the results requested (with no query component).</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Data.Services.SegmentInfo[],System.String,System.Boolean,System.String,System.Uri)">
            <summary>
            Initializes a new RequestDescription for a query specified by the
            request Uri.
            </summary>
            <param name="segmentInfos">list containing information about each segment of the request uri</param>
            <param name="containerName">Name of the container source.</param>
            <param name="usesContainerName">Whether the container name should be used to name the result.</param>
            <param name="mimeType">The MIME type for the requested resource, if specified.</param>
            <param name="resultUri">URI to the results requested (with no query component).</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Data.Services.RequestDescription,System.Collections.IEnumerable,System.Collections.Generic.List{System.Data.Services.ExpandSegmentCollection})">
            <summary>Initializes a new RequestDescription based on an existing one.</summary>
            <param name="other">Other description to base new description on.</param>
            <param name="queryResults">Query results for new request description.</param>
            <param name="expandPaths">List of paths to be expanded during serialization.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.GetSingleResultFromEnumerable(System.Data.Services.SegmentInfo)">
            <summary>
            Get the single result from the given segment info
            </summary>
            <param name="segmentInfo">segmentInfo which contains the request query</param>
            <returns>query result as returned by the IQueryable query</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.CreateSingleResultRequestDescription(System.Data.Services.RequestDescription,System.Object,System.Data.Services.Providers.ResourceSet)">
            <summary>
            Create a new request description from the given request description and new entity as the result.
            </summary>
            <param name="description">Existing request description.</param>
            <param name="entity">entity that needs to be the result of the new request.</param>
            <param name="container">container to which the entity belongs to.</param>
            <returns>a new instance of request description containing information about the given entity.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.IsETagHeaderAllowed(System.Data.Services.RequestDescription)">
            <summary>
            Checks whether etag headers are allowed (both request and response) for this request.
            ETag request headers are mainly If-Match and If-None-Match headers
            ETag response header is written only when its valid to specify one of the above mentioned request headers.
            </summary>
            <param name="description">description about the request uri.</param>
            <returns>true if If-Match or If-None-Match are allowed request headers for this request, otherwise false.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.UpdateEpmResponseVersion">
            <summary>Updates the response version based on the target resource type</summary>
            <returns>The instance for which the update of response version happens</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.GetIndexOfTargetEntityResource">
            <summary>
            Returns the last segment info whose target request kind is resource
            </summary>
            <returns>The index of the parent resource</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.RaiseMinimumVersionRequirement(System.Int32,System.Int32)">
            <summary>
            Raise the minimum client version requirement for this request
            </summary>
            <param name="major">The major segment of the version</param>
            <param name="minor">The minor segment of the version</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.RaiseResponseVersion(System.Int32,System.Int32)">
            <summary>
            Raise the response version for this request
            </summary>
            <param name="major">The major segment of the version</param>
            <param name="minor">The minor segment of the version</param>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ContainerName">
            <summary>The name of the container for results.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ExpandPaths">
            <summary>List of paths to be expanded, possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResultUri">
            <summary>URI for the result (without the query component).</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SegmentInfos">
            <summary>Returns the list containing the information about each segment that make up the request uri</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.RequestEnumerable">
            <summary>The base query for the request, before client-specified composition.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsSingleResult">
            <summary>Whether the result of this request is a single element.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.MimeType">
            <summary>The MIME type for the requested resource, if specified.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetKind">
            <summary>The kind of target being requested.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetResourceType">
            <summary>The type of resource targetted by this request.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetSource">
            <summary>The type of source for the request target.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.Property">
            <summary>
            Returns the resource property on which this query is targeted
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.UsesContainerName">
            <summary>Whether the container name should be used to name the result.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.LastSegmentInfo">
            <summary>Returns the last segment</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.LinkUri">
            <summary>Returns true if the request description refers to a link uri. Otherwise returns false.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.CountOption">
            <summary>Returns the request's counting options</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SkipTokenExpressionCount">
            <summary>Number of expressions in the $skiptoken for top level expression</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SkipTokenProperties">
            <summary>Collection of properties in the $skiptoken for top level expression</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.CountValue">
            <summary>Returns the value of the row count</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.RequireMinimumVersion">
            <summary>The minimum client version requirement</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResponseVersion">
            <summary>The server response version</summary>
        </member>
        <member name="T:System.Data.Services.RequestQueryProcessor">
            <summary>Use this class to process a web data service request URI.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.description">
            <summary>Original description over which query composition takes place.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.filterQueryApplicable">
            <summary>Whether the $filter query option can be applied to the request.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.service">
            <summary>Service with data and configuration.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.setQueryApplicable">
            <summary>Whether the $orderby, $skip, $take and $count options can be applied to the request.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.countQueryResultMethodInfo">
            <summary>The generic method for CountQueryResult'[T]()</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.expandPaths">
            <summary>List of paths to be expanded.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.expandPathsAsText">
            <summary>List of paths to be expanded, before resolving the identifiers</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.orderingParser">
            <summary>Parser used for parsing ordering expressions</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.topLevelOrderingInfo">
            <summary>Collection of ordering expressions for the current query</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.orderApplied">
            <summary>Whether any order has been applied.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.skipCount">
            <summary>Value of $skip argument</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.topCount">
            <summary>Value of $top argument</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.query">
            <summary>Query being composed.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.queryResults">
            <summary>Query results to be returned.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.#ctor(System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>Initializes a new <see cref="T:System.Data.Services.RequestQueryProcessor"/> instance.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="description">Description for request processed so far.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckEmptyQueryArguments(System.Data.Services.IDataService)">
            <summary>Checks that no query arguments were sent in the request.</summary>
            <param name="service">Service to check.</param>
            <remarks>
            Regular processing checks argument applicability, but for
            service operations that return an IEnumerable this is part
            of the contract on service operations, rather than a structural
            check on the request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ComposePropertyNavigation(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Boolean)">
            <summary>
            Composes a property navigation with the appropriate filter lamba, as appropriate.
            </summary>
            <param name="expression">Member access expression to compose.</param>
            <param name="filterLambda">Lambda expression used for the filter.</param>
            <param name="propagateNull">Whether null propagation is required on the <paramref name="expression"/>.</param>
            <returns>The composed expression.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessQuery(System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>
            Processes query arguments and returns a request description for 
            the resulting query.
            </summary>
            <param name="service">Service with data and configuration information.</param>
            <param name="description">Description for request processed so far.</param>
            <returns>A new <see cref="T:System.Data.Services.RequestDescription"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.InvokeOrderBy``2(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression,System.Boolean,System.Boolean)">
            <summary>Generic method to invoke an OrderBy or OrderByDescending method on an IQueryable source.</summary>
            <typeparam name="TSource">Element type of the source.</typeparam>
            <typeparam name="TKey">Result type of the key.</typeparam>
            <param name="source">Source query.</param>
            <param name="keySelector">Lambda expression that turns TSource into TKey.</param>
            <param name="ascending">Whether the ordering should be ascending or not.</param>
            <param name="firstLevelOrder">Whether this is the first-level order; false if this is an inner-level order-by.</param>
            <returns>A new query that sorts TSource by TKey.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.InvokeSkip``1(System.Linq.IQueryable,System.Int32)">
            <summary>Generic method to invoke a Skip method on an IQueryable source.</summary>
            <typeparam name="T">Element type of the source.</typeparam>
            <param name="source">Source query.</param>
            <param name="count">Element count to skip.</param>
            <returns>A new query that skips <paramref name="count"/> elements of <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.InvokeTake``1(System.Linq.IQueryable,System.Int32)">
            <summary>Generic method to invoke a Take method on an IQueryable source.</summary>
            <typeparam name="T">Element type of the source.</typeparam>
            <param name="source">Source query.</param>
            <param name="count">Element count to take.</param>
            <returns>A new query that takes <paramref name="count"/> elements of <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CountQueryResult``1(System.Linq.IQueryable{``0})">
            <summary>Count the query result before $top and $skip are applied</summary>
            <typeparam name="TElement">Element type of the source</typeparam>
            <param name="query">Source query</param>
            <returns>The count from the provider</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.OrderBy(System.Linq.IQueryable,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Boolean,System.Boolean)">
            <summary>Composes an OrderBy operation on the specified query.</summary>
            <param name="query">Query to compose over.</param>
            <param name="declaringType">declaring type for this property.</param>
            <param name="property">Property to order by.</param>
            <param name="ascending">Whether the ordering should be ascending or descending.</param>
            <param name="firstLevelOrder">Whether this is the first-level order; false if this is an inner-level order-by.</param>
            <returns>A query that orders the specified query.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ReadExpand(System.String)">
            <summary>Reads an $expand clause.</summary>
            <param name="expand">Value to read.</param>
            <returns>A list of paths, each of which is a list of identifiers.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>Composes a Skip operation on the specified query.</summary>
            <param name="query">Query to compose over.</param>
            <param name="count">Number of elements to skip.</param>
            <returns>A query that skips the specified number of elements.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.Take(System.Linq.IQueryable,System.Int32)">
            <summary>Composes a Take operation on the specified query.</summary>
            <param name="query">Query to compose over.</param>
            <param name="count">Number of elements to take.</param>
            <returns>A query that takes up to a specific number of elements.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyDefaultOrder">
            <summary>Applies a default order, if possible.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckExpandPaths">
            <summary>Checks and resolved all textual expand paths and removes unnecessary paths.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckFilterQueryApplicable">
            <summary>Checks that the query option is applicable to this request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckSetQueryApplicable">
            <summary>Checks that set query options are applicable to this request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessExpand">
            <summary>Processes the $expand argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GenerateQueryResult">
            <summary>
            Generate the queryResults for the request
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessFilter">
            <summary>Processes the $filter argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessSkipToken">
            <summary>Processes the $skiptoken argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessOrderBy">
            <summary>Processes the $orderby argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessCount">
            <summary>Processes the $inlinecount argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ObtainOrderingExpressions">
            <summary>
            Builds the collection of ordering expressions including implicit ordering if paging is required at top level
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessQuery">
            <summary>
            Processes query arguments and returns a request description for 
            the resulting query.
            </summary>
            <returns>A modified <see cref="T:System.Data.Services.RequestDescription"/> that includes query information.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProjectSkipTokenForNonExpand">
            <summary>
            In case $expand is not provided while the results are still paged, we need to create a wrapper
            for the object in order to project the skip tokens corresponding to the result sequence
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetSkipTokenWrapperTypeAndDescription(System.Text.StringBuilder)">
            <summary>
            Obtains the wrapper type for the $skiptoken along with description of properties in the wrapper
            </summary>
            <param name="skipTokenDescription">Description for the skip token properties</param>
            <returns>Type of $skiptoken wrapper</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetSkipTokenBindings(System.Type,System.String,System.Linq.Expressions.ParameterExpression)">
            <summary>
            Given the wrapper type and description, returns bindings for the wrapper type for skip token
            </summary>
            <param name="skipTokenWrapperType">Wrapper type</param>
            <param name="skipTokenDescription">Description</param>
            <param name="expandParameter">Top level parameter type</param>
            <returns>Array of bindings for skip token</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.UpdateOrderingInfoWithSkipTokenWrapper(System.Type)">
            <summary>
            Updates the topLevelOrderingInfo member with the new collection of expressions that 
            dereference the ExpandedElement property on the top level wrapper object
            </summary>
            <param name="resultWrapperType">Type of top level wrapper object</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessSkip">
            <summary>Processes the $skip argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessTop">
            <summary>Processes the $top argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ObtainSkipTopCounts">
            <summary>
            Finds out the appropriate value for skip and top parameters for the current request
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ReadSkipOrTopArgument(System.String,System.Int32@)">
            <summary>
            Checks whether the specified argument should be processed and what 
            its value is.
            </summary>
            <param name="queryItem">Name of the query item, $top or $skip.</param>
            <param name="count">The value for the query item.</param>
            <returns>true if the argument should be processed; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.RequestQueryProcessor.IsPaged">
            <summary>Is the top level container for the query paged?</summary>
        </member>
        <member name="P:System.Data.Services.RequestQueryProcessor.IsPagingApplicable">
            <summary>Is Server Driven Paging applicable to the current request?</summary>
            <returns>true if paging is applicable, false otherwise.</returns>
            <remarks>
            Server Driven Paging is not considered for the following cases: 
            1. Non-GET requests do not honor SDP.
            2. Only exception for Non-GET requests is if the request is coming from a Service
               operation that returns a set of result values of entity type.
            </remarks>
        </member>
        <member name="T:System.Data.Services.RequestTargetKind">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Nothing">
            <summary>Nothing specific is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.ServiceDirectory">
            <summary>A top-level directory of service capabilities.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Resource">
            <summary>Entity Resource is requested - it can be a collection or a single value.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.ComplexObject">
            <summary>A single complex value is requested (eg: an Address).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Primitive">
            <summary>A single value is requested (eg: a Picture property).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.PrimitiveValue">
            <summary>A single value is requested (eg: the raw stream of a Picture).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Metadata">
            <summary>System metadata.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.VoidServiceOperation">
            <summary>A data-service-defined operation that doesn't return anything.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Batch">
            <summary>The request is a batch request.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Link">
            <summary>The request is a link operation - bind or unbind or simple get</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.OpenProperty">
            <summary>An open property is requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.OpenPropertyValue">
            <summary>An open property value is requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.MediaResource">
            <summary>A stream property value is requested.</summary>
        </member>
        <member name="T:System.Data.Services.RequestTargetSource">
            <summary>
            Provides values to describe the source of the request results.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.None">
            <summary>No source for data.</summary>
            <remarks>
            This value is seen when a source hasn't been determined yet, or
            when the source is intrinsic to the sytem - eg a metadata request.
            </remarks>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.EntitySet">
            <summary>An entity set provides the data.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.ServiceOperation">
            <summary>A service operation provides the data.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.Property">
            <summary>A property of an entity or a complex object provides the data.</summary>
        </member>
        <member name="T:System.Data.Services.RequestUriProcessor">
            <summary>
            Use this class to process a web data service request Uri.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestUriProcessor.RecursionLimit">
            <summary>Recursion limit on segment length.</summary>
        </member>
        <member name="F:System.Data.Services.RequestUriProcessor.InvokeWhereMethodInfo">
            <summary>MethodInfo for the RequestUriProcessor.InvokeWhere method.</summary>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ProcessRequestUri(System.Uri,System.Data.Services.IDataService)">
            <summary>
            Parses the request Uri that the host is exposing and returns
            information about the intended results.
            </summary>
            <param name="absoluteRequestUri">Request uri that needs to get processed.</param>
            <param name="service">Data service for which the request is being processed.</param>
            <returns>
            An initialized RequestDescription instance describing what the
            request is for.
            </returns>
            <exception cref="T:System.Data.Services.DataServiceException">
            A <see cref="T:System.Data.Services.DataServiceException"/> with status code 404 (Not Found) is returned if an identifier
            in a segment cannot be resolved; 400 (Bad Request) is returned if a syntax
            error is found when processing a restriction (parenthesized text) or
            in the query portion.
            </exception>
            <remarks>
            Very important: no rights are checked on the last segment of the request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.AppendEscapedSegment(System.Uri,System.String)">
            <summary>Appends a segment with the specified escaped <paramref name='text' />.</summary>
            <param name='uri'>URI to append to.</param>
            <param name='text'>Segment text, already escaped.</param>
            <returns>A new URI with a new segment escaped.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.AppendUnescapedSegment(System.Uri,System.String)">
            <summary>Appends a segment with the specified unescaped <paramref name='text' />.</summary>
            <param name='uri'>URI to append to.</param>
            <param name='text'>Segment text, already escaped.</param>
            <returns>A new URI with a new segment escaped.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteUriFromReference(System.String,System.Data.Services.CachedRequestParams)">
            <summary>Gets the absolute URI that a reference (typically from a POST or PUT body) points to.</summary>
            <param name="reference">Textual, URI-encoded reference.</param>
            <param name="request">Request parameters with request and service URIs.</param>
            <returns>The absolute URI that <paramref name="reference"/> resolves to.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteUriFromReference(System.String,System.Uri)">
            <summary>Gets the absolute URI that a reference (typically from a POST or PUT body) points to.</summary>
            <param name="reference">Textual, URI-encoded reference.</param>
            <param name="absoluteServiceUri">Absolure URI for service, used to validate that the URI points within.</param>
            <returns>The absolute URI that <paramref name="reference"/> resolves to.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetHttpRequestUrl(System.Uri)">
            <summary>Gets the specified <paramref name="uri"/> as a string suitable for an HTTP request.</summary>
            <param name="uri"><see cref="T:System.Uri"/> to get string for.</param>
            <returns>A string suitable for an HTTP request.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetResultUri(System.Data.Services.IDataServiceHost)">
            <summary>Gets the URI to the results, without the query component.</summary>
            <param name="host">Host with request information.</param>
            <returns>The URI to the results, without the query component.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteRequestUri(System.Data.Services.IDataServiceHost)">
            <summary>Gets a non-null <see cref="T:System.Uri"/> for the hosted service.</summary>
            <param name="host">Host for the service.</param>
            <returns>A non-null <see cref="T:System.Uri"/> for the hosted service.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetServiceUri(System.Data.Services.IDataServiceHost)">
            <summary>Gets a non-null <see cref="T:System.Uri"/> for the hosted service.</summary>
            <param name="host">Host for the service.</param>
            <returns>A non-null <see cref="T:System.Uri"/> for the hosted service.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ExtractKeyValuesFromUri(System.Uri,System.Data.Services.IDataService,System.String@)">
            <summary>
            Given the uri, extract the key values from the uri
            </summary>
            <param name="absoluteRequestUri">uri from which the key values needs to be extracted</param>
            <param name="service">Data context for which the request is being processed.</param>
            <param name="containerName">returns the name of the source resource set name</param>
            <returns>key values as specified in the uri</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeSelectForTypes(System.Linq.IQueryable,System.Type,System.Linq.Expressions.LambdaExpression)">
            <summary>Invokes Queryable.Select for the specified query and selector.</summary>
            <param name="query">Query to invoke .Select method on.</param>
            <param name="projectedType">Type that will be projected out.</param>
            <param name="selector">Selector lambda expression.</param>
            <returns>The resulting query.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeWhereForType(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>Invokes Queryable.Where for the specified query and predicate.</summary>
            <param name="query">Query to invoke .Where method on.</param>
            <param name="predicate">Predicate to pass as argument.</param>
            <returns>The resulting query.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeQuery(System.String,System.Data.Services.SegmentInfo)">
            <summary>Composes the filter portion of a segment onto the specifies query.</summary>
            <param name="filter">Filter portion of segment, possibly null.</param>
            <param name="segment">Segment on which to compose.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.CreateFirstSegment(System.Data.Services.IDataService,System.String,System.Boolean,System.String,System.Boolean@)">
            <summary>Creates the first <see cref="T:System.Data.Services.SegmentInfo"/> for a request.</summary>
            <param name="service">Service for which the request is being processed.</param>
            <param name="identifier">Identifier portion of segment.</param>
            <param name="checkRights">Whether rights should be checked on this segment.</param>
            <param name="queryPortion">Query portion with key; possibly null.</param>
            <param name="crossReferencingUrl">whether this segment references some other segment.</param>
            <returns>A description of the information on the segment.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.CreateSegments(System.String[],System.Data.Services.IDataService)">
            <summary>Creates a <see cref="T:System.Data.Services.SegmentInfo"/> array for the given <paramref name="segments"/>.</summary>
            <param name="segments">Segments to process.</param>
            <param name="service">Service for which segments are being processed.</param>
            <returns>Segment information describing the given <paramref name="segments"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.EnumerateSegments(System.Uri,System.Uri)">
            <summary>
            Returns an object that can enumerate the segments in the specified path (eg: /foo/bar -&gt; foo, bar).
            </summary>
            <param name="absoluteRequestUri">A valid path portion of an uri.</param>
            <param name="baseUri">baseUri for the request that is getting processed.</param>
            <returns>An enumerable object of unescaped segments.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ExtractKeyValues(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>Returns an object that can enumerate key values.</summary>
            <param name="resourceType">resource type whose keys need to be extracted</param>
            <param name="filter">Key (query) part of an Astoria segment.</param>
            <returns>An object that can enumerate key values.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ExtractSegmentIdentifier(System.String,System.String@)">
            <summary>Extracts the identifier part of the unescaped Astoria segment.</summary>
            <param name="segment">Unescaped Astoria segment.</param>
            <param name="identifier">On returning, the identifier in the segment.</param>
            <returns>true if keys follow the identifier.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeSelect``2(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>Generic method to invoke a Select method on an IQueryable source.</summary>
            <typeparam name="TSource">Element type of the source.</typeparam>
            <typeparam name="TResult">Result type of the projection.</typeparam>
            <param name="source">Source query.</param>
            <param name="selector">Lambda expression that turns TSource into TResult.</param>
            <returns>A new query that projects TSource into TResult.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeSelectMany``2(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>Generic method to invoke a SelectMany method on an IQueryable source.</summary>
            <typeparam name="TSource">Element type of the source.</typeparam>
            <typeparam name="TResult">Result type of the projection.</typeparam>
            <param name="source">Source query.</param>
            <param name="selector">Lambda expression that turns TSource into IEnumerable&lt;TResult&gt;.</param>
            <returns>A new query that projects TSource into IEnumerable&lt;TResult&gt;.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeWhere``1(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>Generic method to invoke a Where method on an IQueryable source.</summary>
            <typeparam name="TSource">Element type of the source.</typeparam>
            <param name="query">Source query.</param>
            <param name="predicate">Lambda expression that filters the result of the query.</param>
            <returns>A new query that filters the query.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ReadOperationParameters(System.Data.Services.IDataService,System.Data.Services.SegmentInfo)">
            <summary>
            Reads the parameters for the specified <paramref name="operation"/>
            </summary>
            <param name="service">Underlying data service to which the request was made.</param>
            <param name="segmentInfo">SegmentInfo instance referring to the service operation whose parameters needs to be read from the request payload.</param>
            <returns>A new object[] with parameter values.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.RemoveFilterParens(System.String)">
            <summary>Removes the parens around the filter part of a query.</summary>
            <param name='filter'>Filter with parens included.</param>
            <returns>Filter without parens.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectElement(System.Linq.IQueryable,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query.</summary>
            <param name="query">Base query to project from.</param>
            <param name="property">Property to project.</param>
            <returns>A query with a composed primitive property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectMultiple(System.Linq.IQueryable,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with multiple elements out of the specified query.</summary>
            <param name="query">Base query to project from.</param>
            <param name="property">Property to project.</param>
            <returns>A query with a composed primitive property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectOpenProperty(System.Linq.IQueryable,System.String)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="query">Base query to project from.</param>
            <param name="propertyName">Name of property to project.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectLateBoundProperty(System.Linq.IQueryable,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="query">Base query to project from.</param>
            <param name="property">Resource property containing the metadata for the late bound property.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectLateBoundPropertyMultiple(System.Linq.IQueryable,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="query">Base query to project from.</param>
            <param name="property">Resource property containing the metadata for the late bound property.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectResourceByKey(System.Linq.IQueryable,System.Data.Services.Providers.ResourceType,System.Data.Services.KeyInstance)">
            <summary>Selects a single resource by key values.</summary>
            <param name="query">Base query for resources</param>
            <param name="resourceType">resource type whose keys are specified</param>
            <param name="key">Key values for the given resource type.</param>
            <returns>A new query that selects the single resource that matches the specified key values.</returns>
        </member>
        <member name="T:System.Data.Services.UpdateOperations">
            <summary>Describes an action performed on a resource.</summary>
            <remarks>
            This enumeration has been patterned after the DataRowAction
            (http://msdn2.microsoft.com/en-us/library/system.data.datarowaction.aspx)
            enumeration (with a few less values).
            </remarks>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.None">
            <summary>The resource has not changed.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Add">
            <summary>The resource has been added to a container.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Change">
            <summary>The resource has changed.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Delete">
            <summary>The resource has been deleted from a container.</summary>
        </member>
        <member name="T:System.Data.Services.EntitySetRights">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.None">
            <summary>Specifies no rights on this resource.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.ReadSingle">
            <summary>Specifies the right to read one resource per request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.ReadMultiple">
            <summary>Specifies the right to read multiple resources per request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteAppend">
            <summary>Specifies the right to append new resources to the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteReplace">
            <summary>Specifies the right to update existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteDelete">
            <summary>Specifies the right to delete existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteMerge">
            <summary>Specifies the right to update existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.AllRead">
            <summary>Specifies the right to read single or multiple resources in a single request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.AllWrite">
            <summary>Specifies the right to append, delete or update resources in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.All">
            <summary>Specifies all rights to the container.</summary>
        </member>
        <member name="T:System.Data.Services.ResponseBodyWriter">
            <summary>
            Use this class to encapsulate writing the body of the outgoing response 
            for a data request.
            </summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.encoding">
            <summary>Encoding, if available.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.hasMoved">
            <summary>Whether <see cref="F:System.Data.Services.ResponseBodyWriter.queryResults"/> has already moved.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.service">
            <summary>Host for the request being processed.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.queryResults">
            <summary>Enumerator for results.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.requestDescription">
            <summary>Description of request made to the system.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.responseFormat">
            <summary>Content format for response.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.mediaResourceStream">
            <summary>If the target is a Media Resource, this holds the read stream for the Media Resource.</summary>
        </member>
        <member name="M:System.Data.Services.ResponseBodyWriter.#ctor(System.Text.Encoding,System.Boolean,System.Data.Services.IDataService,System.Collections.IEnumerator,System.Data.Services.RequestDescription,System.Data.Services.ContentFormat)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ResponseBodyWriter"/> that can write the body of a response.</summary>
            <param name="encoding">Encoding, if available.</param>
            <param name="hasMoved">Whether <paramref name="queryResults"/> has already moved.</param>
            <param name="service">Service for the request being processed.</param>
            <param name="queryResults">Enumerator for results.</param>
            <param name="requestDescription">Description of request made to the system.</param>
            <param name="responseFormat">Content format for response.</param>
        </member>
        <member name="M:System.Data.Services.ResponseBodyWriter.Write(System.IO.Stream)">
            <summary>Writes the request body to the specified <see cref="T:System.IO.Stream"/>.</summary>
            <param name="stream">Stream to write to.</param>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.Host">
            <summary>Gets the <see cref="T:System.Data.Services.IDataServiceHost"/> for this response.</summary>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.Provider">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/> for this response.</summary>
        </member>
        <member name="T:System.Data.Services.SegmentInfo">
            <summary>Contains the information regarding a segment that makes up the uri</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.identifier">
            <summary>Returns the identifier for this segment i.e. string part without the keys.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.key">
            <summary>Returns the values that constitute the key as specified in the request.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.requestEnumerable">
            <summary>Returns the query that's being composed for this segment</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.singleResult">
            <summary>Whether the segment targets a single result or not.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.targetContainer">
            <summary>resource set if applicable.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.targetResourceType">
            <summary>The type of resource targeted by this segment.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.targetKind">
            <summary>The kind of resource targeted by this segment.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.targetSource">
            <summary>Returns the source for this segment</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.operation">
            <summary>Service operation being invoked.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.operationParameters">
            <summary>Operation parameters.</summary>
        </member>
        <member name="F:System.Data.Services.SegmentInfo.projectedProperty">
            <summary>Returns the property that is being projected in this segment, if there's any.</summary>
        </member>
        <member name="M:System.Data.Services.SegmentInfo.#ctor">
            <summary>Empty constructor.</summary>
        </member>
        <member name="M:System.Data.Services.SegmentInfo.#ctor(System.Data.Services.SegmentInfo)">
            <summary>Copy constructor.</summary>
            <param name="other">Another <see cref="T:System.Data.Services.SegmentInfo"/> to get a shallow copy of.</param>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Identifier">
            <summary>Returns the identifier for this segment i.e. string part without the keys.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Key">
            <summary>Returns the values that constitute the key as specified in the request.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.RequestEnumerable">
            <summary>Returns the query that's being composed for this segment</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.SingleResult">
            <summary>Whether the segment targets a single result or not.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetContainer">
            <summary>resource set if applicable.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetResourceType">
            <summary>The type of element targeted by this segment.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetKind">
            <summary>The kind of resource targeted by this segment.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetSource">
            <summary>Returns the source for this segment</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Operation">
            <summary>Service operation being invoked.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.OperationParameters">
            <summary>Operation parameters.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.ProjectedProperty">
            <summary>Returns the property that is being projected in this segment, if there's any.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.HasKeyValues">
            <summary>Returns true if this segment has a key filter with values; false otherwise.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.IsDirectReference">
            <summary>
            Determines whether the target kind is a direct reference to an element
            i.e. either you have a $value or you are accessing a resource via key property
            (/Customers(1) or /Customers(1)/BestFriend/Orders('Foo'). Either case the value
            cannot be null.
            </summary>
            <param name="kind">Kind of request to evaluate.</param>
            <returns>
            A characteristic of a direct reference is that if its value
            is null, a 404 error should be returned.
            </returns>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.RequestQueryable">
            <summary>Returns the query for this segment, possibly null.</summary>
        </member>
        <member name="T:System.Data.Services.ServiceOperationRights">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.None">
            <summary>Specifies no rights on this service operation.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.ReadSingle">
            <summary>Specifies the right to read one resource per request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.ReadMultiple">
            <summary>Specifies the right to read multiple resources per request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.AllRead">
            <summary>Specifies the right to read single or multiple resources in a single request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.All">
            <summary>Specifies all rights to the service operation.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights">
            <summary>Actually use ServiceOperationRights, not EntitySetRights for the service operation.</summary>
        </member>
        <member name="T:System.Data.Services.SingleResultAttribute">
            <summary>
            Use this attribute on a DataService service operation method 
            to indicate than the IQueryable returned should contain a single element.
            </summary>
        </member>
        <member name="M:System.Data.Services.SingleResultAttribute.#ctor">
            <summary>Declares a new <see cref="T:System.Data.Services.SingleResultAttribute"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.SingleResultAttribute.MethodHasSingleResult(System.Reflection.MethodInfo)">
            <summary>Checks whether the specified method has a SingleResultAttribute declared on it.</summary>
            <param name="method">Method to check.</param>
            <returns>
            true if the specified method (in its declared type or in an 
            ancestor declaring the type) has the SingleResultAttribute set.
            </returns>
        </member>
        <member name="T:System.Data.Services.UpdatableWrapper">
            <summary>
            This class wraps all the calls to IUpdatable interface.
            </summary>
        </member>
        <member name="F:System.Data.Services.UpdatableWrapper.updateProvider">
            <summary> instance implementation of IUpdatable.</summary>
        </member>
        <member name="F:System.Data.Services.UpdatableWrapper.concurrencyProvider">
            <summary> instance implementation of IConcurrencyProvider.</summary>
        </member>
        <member name="F:System.Data.Services.UpdatableWrapper.service">
            <summary> data service instance.</summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.#ctor(System.Data.Services.IDataService)">
            <summary>
            creates an instance of UpdatableWrapper, which wraps all the calls to IUpdatable interface.
            </summary>
            <param name="serviceInstance">instance of the data service.</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetETagValues(System.Object,System.Data.Services.Providers.ResourceSet)">
            <summary>
            If the provider implements IConcurrencyProvider, then this method passes the etag values
            to the provider, otherwise compares the etag itself.
            </summary>
            <param name="resourceCookie">etag values for the given resource.</param>
            <param name="container">container for the given resource.</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="targetResource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ParseETagValue(System.Collections.Generic.IList{System.Data.Services.Providers.ResourceProperty},System.String)">
            <summary>
            Parse the given etag value in the If-Match request header.
            </summary>
            <param name="etagProperties">List of etag properties for the type whose etag values we are parsing.</param>
            <param name="ifMatchHeaderValue">value of the If-Match header as specified in the request.</param>
            <returns>returns the etag value as a list containing the property name and its corresponding value. If the If-Match header value is '*', then returns an empty collection.</returns>
        </member>
        <member name="P:System.Data.Services.UpdatableWrapper.UpdateProvider">
            <summary>
            Get the instance of IUpdatable.
            </summary>
        </member>
        <member name="T:System.Data.Services.UpdateTracker">
            <summary>Provides a class used to track updates for callbacks.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateTracker.items">
            <summary>
            A dictionary of containers mapping to the changes on those 
            containers, each of which consists of an element and the
            action taken on it.
            </summary>
        </member>
        <member name="F:System.Data.Services.UpdateTracker.service">
            <summary>Underlying data service instance.</summary>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.#ctor(System.Data.Services.IDataService)">
            <summary>Initializes a new <see cref="T:System.Data.Services.UpdateTracker"/> instance.</summary>
            <param name="service">underlying data source instance.</param>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.FireNotification(System.Data.Services.IDataService,System.Object,System.Data.Services.Providers.ResourceSet,System.Data.Services.UpdateOperations)">
            <summary>Fires the notification for a single action.</summary>
            <param name="service">Service on which methods should be invoked.</param>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
            <param name="action">Action affecting target.</param>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.CreateUpdateTracker(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Create a new instance of update tracker
            </summary>
            <param name="description">description about the request uri.</param>
            <param name="service">underlying data service.</param>
            <returns>
            Returns a new instance of UpdateTracker if the request is not targetted at open types; null otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.FireNotifications">
            <summary>Fires all notifications</summary>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.TrackAction(System.Object,System.Data.Services.Providers.ResourceSet,System.Data.Services.UpdateOperations)">
            <summary>
            Tracks the specified <paramref name="target"/> for a 
            given <paramref name="action "/> on the <paramref name="container"/>.
            </summary>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
            <param name="action">Action affecting target.</param>
            <remarks>
            If <paramref name="target"/> was already being tracked, the actions are OR'ed together.
            </remarks>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.AssertActionValues(System.Object,System.Data.Services.Providers.ResourceSet)">
            <summary>Asserts valid value for tracking update actions.</summary>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
        </member>
        <member name="T:System.Data.Services.WebUtil">
            <summary>Utility methods for this project.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.PublicInstanceBindingFlags">
            <summary>Bindings Flags for public instance members.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.EmptyObjectArray">
            <summary>A zero-length object array.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.EmptyStringArray">
            <summary>A zero-length string array.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.GetValueMethodInfo">
            <summary>MethodInfo for object WebUtil.GetValue(this object value, ResourceProperty property).</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.GetValueOpenPropertyMethodInfo">
            <summary>MethodInfo for object WebUtil.GetValue(this object value, string propertyName, IDataServiceProvider provider).</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.OutOfMemoryType">
            <summary>Type of OutOfMemoryException.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.StackOverflowType">
            <summary>Type of StackOverflowException.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.ThreadAbortType">
            <summary>Type of ThreadAbortException.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.PrimitiveTypesEdmNameMapping">
            <summary>List of primitive types supported by Astoria and their corresponding edm names.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.PrimitiveTypesMimeTypeMapping">
            <summary>List of primitive types supported by Astoria and their corresponding default MIME types.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.PrimitiveTypesContentFormatMapping">
            <summary>List of primitive types supported by Astoria and their corresponding default content format.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.GenericExpandedWrapperTypes">
            <summary>
            Collection of ExpandedWrapper types and their corresponding number of parameters
            </summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.primitiveResourceTypes">
            <summary>List of primitive resource types. We don't want to create them again and again, so creating them once and caching them</summary>
        </member>
        <member name="M:System.Data.Services.WebUtil.ApplyHostHeader(System.Uri,System.String)">
            <summary>
            Applies the host specified in a request if available to the given <paramref name="baseUri"/>.
            </summary>
            <param name="baseUri">URI to update with host (and port) information.</param>
            <param name="requestHost">Host header (possibly null or empty)</param>
            <returns>The updated URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetValue(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Gets a named value from the specified object.</summary>
            <param name='value'>Object to get value from.</param>
            <param name='property'>ResourceProperty describing the property whose value needs to be fetched.</param>
            <param name="provider">Data Service provider used for verification of rights</param>
            <returns>The requested value.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetValue(System.Object,System.String,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Gets a named value from the specified object.</summary>
            <param name='value'>Object to get value from.</param>
            <param name='propertyName'>Name of property to get.</param>
            <param name="provider">Data Service provider used for verification of rights</param>
            <returns>The requested value; null if not found.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckArgumentNull``1(``0,System.String)">
            <summary>
            Checks the argument value for null and throw ArgumentNullException if it is null
            </summary>
            <typeparam name="T">type of the argument</typeparam>
            <param name="value">argument whose value needs to be checked</param>
            <param name="parameterName">name of the argument</param>
            <returns>returns the argument back</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckStringArgumentNull(System.String,System.String)">
            <summary>
            Checks the string argument value for empty or null and throw ArgumentNullException if it is null
            </summary>
            <param name="value">argument whose value needs to be checked</param>
            <param name="parameterName">name of the argument</param>
            <returns>returns the argument back</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckServiceOperationResultKind(System.Data.Services.Providers.ServiceOperationResultKind,System.String)">
            <summary>
            Check whether the given value for ServiceOperationResultKind is valid. If not, throw argument exception.
            </summary>
            <param name="kind">value for ServiceOperationResultKind</param>
            <param name="parameterName">name of the parameter</param>
            <exception cref="T:System.ArgumentException">if the value is not valid.</exception>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckOpenTypeKind(System.Data.Services.OpenTypeKind)">
            <summary>
            Check whether the given value for OpenTypeKind is valid. If not, throw argument exception.
            </summary>
            <param name="kind">value for OpenTypeKind</param>
            <exception cref="T:System.ArgumentException">if the value is not valid.</exception>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceTypeKind(System.Data.Services.Providers.ResourceTypeKind,System.String)">
            <summary>
            Check whether the given value for ResourceTypeKind is valid. If not, throw argument exception.
            </summary>
            <param name="kind">value for ResourceTypeKind</param>
            <param name="parameterName">name of the parameter</param>
            <exception cref="T:System.ArgumentException">if the value is not valid.</exception>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceContainerRights(System.Data.Services.EntitySetRights,System.String)">
            <summary>Checks that the <paramref name="rights"/> are valid and throws an exception otherwise.</summary>
            <param name="rights">Value to check.</param>
            <param name="parameterName">Name of parameter for the exception message.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckServiceOperationRights(System.Data.Services.ServiceOperationRights,System.String)">
            <summary>Checks that the <paramref name="rights"/> are valid and throws an exception otherwise.</summary>
            <param name="rights">Value to check.</param>
            <param name="parameterName">Name of parameter for the exception message.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceExists(System.Boolean,System.String)">
            <summary>Checks the specifid value for syntax validity.</summary>
            <param name="resourceExists">Whether syntax is valid.</param>
            <param name="identifier">segment indentifier for which the resource was null.</param>
            <remarks>This helper method is used to keep syntax check code more terse.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckSyntaxValid(System.Boolean)">
            <summary>Checks the specifid value for syntax validity.</summary>
            <param name="valid">Whether syntax is valid.</param>
            <remarks>This helper method is used to keep syntax check code more terse.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateIfNull``1(``0@)">
            <summary>Creates a new instance if the specified value is null.</summary>
            <typeparam name="T">Type of variable.</typeparam>
            <param name="value">Current value.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.DebugEnumIsDefined``1(``0)">
            <summary>
            Debug.Assert(Enum.IsDefined(typeof(T), value))
            </summary>
            <typeparam name="T">type of enum</typeparam>
            <param name="value">enum value</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.Dispose(System.Object)">
            <summary>Disposes of <paramref name="o"/> if it implements <see cref="T:System.IDisposable"/>.</summary>
            <param name="o">Object to dispose, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.EnsureLastSegmentEmpty(System.Uri)">
            <summary>Adds an empty last segment as necessary to the specified <paramref name="absoluteUri"/>.</summary>
            <param name="absoluteUri">An absolute URI.</param>
            <returns><paramref name="absoluteUri"/> with an empty last segment (ie, "ending with '/'").</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetResponseFormatForPrimitiveValue(System.Data.Services.Providers.ResourceType,System.String@)">
            <summary>
            Get the expected responseFormat and the content type for the given primitive type
            </summary>
            <param name="valueType">type of the primitive</param>
            <param name="contentType">expected content type for the given primitive type</param>
            <returns>the expected response format for the given primitive type </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetTypeName(System.Type)">
            <summary>Gets the public name for the specified <paramref name='type' />.</summary>
            <param name='type'>Type to get name for.</param>
            <returns>A public name for the specified <paramref name='type' />, empty if it cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsCatchableExceptionType(System.Exception)">
            <summary>
            Determines whether the specified exception can be caught and 
            handled, or whether it should be allowed to continue unwinding.
            </summary>
            <param name="e"><see cref="T:System.Exception"/> to test.</param>
            <returns>
            true if the specified exception can be caught and handled; 
            false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsIdentifier(System.String)">
            <summary>
            Checks whether the specified string is a valid C# identifier.
            </summary>
            <param name="identifier">Non-null value to check.</param>
            <returns>
            true if <paramref name="identifier"/> is a valid C# identifier; 
            false otherwise.
            </returns>
            <remarks>
            See section '2.4.2 Identifiers' of the C# specification at
            http://download.microsoft.com/download/3/8/8/388e7205-bc10-4226-b2a8-75351c669b09/csharp%20language%20specification.doc.
            These differences are by design, however:
            - An initial '@' character is disallowed rather than used for keywords.
            - Unicode escape sequences are disallowed rather than processed for comparison.
            - Formatting characters are disallowed, rather than removed for comparison.
            </remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.RecurseEnter(System.Int32,System.Int32@)">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
            <param name="recursionLimit">Maximum recursion limit.</param>
            <param name="recursionDepth">Depth of recursion.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.RecurseLeave(System.Int32@)">
            <summary>Marks the fact that a recursive method is leaving.</summary>
            <param name="recursionDepth">Depth of recursion.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.SelectRequestFormat(System.String,System.Data.Services.RequestDescription)">
            <summary>Selects the request format type from the content type.</summary>
            <param name="contentType">content type as specified in the request header</param>
            <param name="description">request description for which the content type was specified.</param>
            <returns>enum representing the response format for the given content type</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.StringToSimpleArray(System.String)">
            <summary>Converts comma-separated entries with no quotes into a text array.</summary>
            <param name="text">Text to convert.</param>
            <returns>A string array that represents the comma-separated values in the text.</returns>
            <remarks>This method can be used to provide a simpler API facade instead of identifier arrays.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateMediaResourceUri(System.String,System.Uri)">
            <summary>
            If the given DataServiceStreamDescriptor.ReadStreamUri is not null or empty, we return that as the Uri to the Media Resource.
            Otherwise we take the given Media Link Entry uri, and construct the default Media Resource Uri.
            </summary>
            <param name="mediaLinkEntryUri">Uri to the Media Link Entry.</param>
            <param name="readStreamUri">Read stream Uri from the DataServiceStreamDescriptor.</param>
            <returns>Uri to the Media Resource.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.HasMediaLinkEntryInHierarchy(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Test if any of the types in the hierarchy of <paramref name="baseType"/> is a Media Link Entry.
            </summary>
            <param name="baseType">base type of the hierarchy</param>
            <param name="provider">IDataServiceProvider interface instance</param>
            <returns>Returns true if <paramref name="baseType"/> or at least one of its descendants is a Media Link Entry.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CopyStream(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>copy from one stream to another</summary>
            <param name="input">input stream</param>
            <param name="output">output stream</param>
            <param name="buffer">reusable buffer</param>
            <returns>count of copied bytes</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CopyStream(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>copy from one stream to another</summary>
            <param name="input">input stream</param>
            <param name="output">output stream</param>
            <param name="bufferSize">size of buffer to use during copying. If 0 is specified, the default of 64K will be used.</param>
            <returns>count of copied bytes</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateNewInstanceConstructor(System.Type,System.String,System.Type)">
            <summary>
            Creates a delegate that when called creates a new instance of the specified <paramref name="type" />.
            </summary>
            <param name="type">Type of the instance.</param>
            <param name="fullName">full name of the given clr type.
            If the type name is not specified, it takes the full name from the clr type.</param>
            <param name="targetType">Type to return from the delegate.</param>
            <returns>A delegate that when called creates a new instance of the specified <paramref name="type" />.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsPrimitiveType(System.Type)">
            <summary>Checks whether the specified type is a known primitive type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if the specified type is known to be a primitive type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.TryResolveResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.String)">
            <summary>
            Try to resolve a type by name by first trying primitive types and then provider's types
            </summary>
            <param name="provider">Provider to resolve non-primitive types against</param>
            <param name="typeName">Type name</param>
            <returns>ResourceType object for this type, or null if none found</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object)">
            <summary>
            Get a primitive or EDM type from an instance
            </summary>
            <param name="provider">Provider to get EDM types from, in case <paramref name="obj"/> is not a primitive.</param>
            <param name="obj">Instance to get the type from</param>
            <returns>A ResourceType for this instance or null if it is not a known type</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetNonPrimitiveResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object)">
            <summary>
            Get the non primitive type resource and checks that the given instance represents a single resource.
            </summary>
            <param name="provider">underlying data source.</param>
            <param name="obj">instance of the resource.</param>
            <returns>returns the resource type representing the given resource instance.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetRootType(System.Data.Services.Providers.ResourceType)">
            <summary> Gets the root type of the given resource type.</summary>
            <param name="resourceType">ResourceType to get least derived type for.</param>
            <returns>The least derived type for the specified <paramref name="resourceType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsValidMimeType(System.String)">
            <summary>
            Checks whether the specified <paramref name="mimeType"/>
            is a valid MIME type with no parameters.
            </summary>
            <param name="mimeType">Simple MIME type.</param>
            <returns>
            true if the specified <paramref name="mimeType"/> is valid; 
            false otherwise.
            </returns>
            <remarks>
            See http://tools.ietf.org/html/rfc2045#section-5.1 for futher details.
            </remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetEdmTypeName(System.Type)">
            <summary>
            Returns the name of the edm type given the clr type
            </summary>
            <param name="type">clrType for whose edm type name needs to be returned</param>
            <returns>returns the edm name for the given clrType</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsElementIEnumerable(System.Object,System.Collections.IEnumerable@)">
            <summary>
            Checks whether the specified element is an <see cref="T:System.Collections.IEnumerable"/>
            of other elements.
            </summary>
            <param name="element">Element to check (possibly null).</param>
            <param name="enumerable"><paramref name="element"/>, or null if <see cref="T:System.Collections.IEnumerable"/> is not supported.</param>
            <returns>
            true if <paramref name="element"/> supports IEnumerable and is not
            a primitive type (strings and byte arrays are also enumerables, but
            they shouldn't be iterated over, so they return false).
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetETagValue(System.Object,System.Collections.Generic.ICollection{System.Data.Services.Providers.ResourceProperty},System.Data.Services.IDataService,System.Boolean)">
            <summary>Returns the etag for the given resource.</summary>
            <param name="resource">Resource for which etag value needs to be returned.</param>
            <param name="etagProperties">list of etag properties for the given resource</param>
            <param name="service">Service to which the request was made.</param>
            <param name="getMethod">whether the request was a get method or not.</param>
            <returns>ETag value for the given resource, with values encoded for use in a URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetETagValue(System.Data.Services.IDataService,System.Object,System.Data.Services.Providers.ResourceSet)">
            <summary>Returns the etag for the given resource.</summary>
            <param name="service">Data service to which the request was made.</param>
            <param name="resource">Resource for which etag value needs to be returned.</param>
            <param name="container">resource set to which the resource belongs to.</param>
            <returns>ETag value for the given resource, with values encoded for use in a URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetModelTypeNamespace(System.Type)">
            <summary>
            Gets the type namespace of the specified <paramref name="type"/>,
            appropriate as an externally-visible type name.
            </summary>
            <param name="type">Type to get namespace for.</param>
            <returns>The namespace for <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetPrimitiveTypes">
            <summary>Returns an array of primitive types supported.</summary>
            <returns>An array of primitive types supported</returns>
            <remarks>Most of the time ResourceType.GetPrimitiveResourceType should be used instead of 
            searching this array directly, as it takes into account nullable types.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetRequestEnumerator(System.Collections.IEnumerable)">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the specified <paramref name="enumerable"/>,
            mapping well-known exceptions to the appropriate HTTP status code.
            </summary>
            <param name="enumerable">Request enumerable to get enumerator for.</param>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the specified <paramref name="enumerable"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetResourceContainer(System.Object,System.Data.Services.SegmentInfo,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Returns the container for the given resource cookie
            </summary>
            <param name="resource">cookie for which resource set needs to be returned.</param>
            <param name="segmentInfo">segment info containing the information about the resource cookie.</param>
            <param name="provider">underlying data source provider instance.</param>
            <returns>resource set for the resource represented by the resource cookie.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CompareAndGetETag(System.Object,System.Object,System.Data.Services.Providers.ResourceSet,System.Data.Services.IDataService,System.Data.Services.CachedRequestParams,System.Boolean@)">
            <summary>
            Given the request description, query for the parent entity resource
            and compare the etag, if specified in the header
            </summary>
            <param name="parentEntityResource">entity resource for which etag needs to be checked.</param>
            <param name="parentEntityToken">token as returned by the IUpdatable interface methods.</param>
            <param name="container">container to which the entity resource belongs to.</param>
            <param name="service">Underlying service to which the request was made to.</param>
            <param name="requestParams">Cached request headers</param>
            <param name="writeResponseForGetMethods">out bool which indicates whether response needs to be written for GET operations</param>
            <returns>current etag value for the given entity resource.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.WriteSpacePreserveAttributeIfNecessary(System.Xml.XmlWriter,System.String)">
            <summary>Writes an xml:space='preserve' attribute if the element value would need it.</summary>
            <param name='writer'>XmlWriter to write to.</param>
            <param name='elementValue'>Value that will be written after this call.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.XmlReaderEnsureElement(System.Xml.XmlReader)">
            <summary>
            If the specified reader is not on an element, advances to one, skipping document declaration
            nodes (typically at the beginning of a document), comments, processing instructions and 
            whitespace.
            </summary>
            <param name="reader">Reader to reposition.</param>
            <returns>
            true if the reader is left on an element; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetStatusCodeText(System.Int32)">
            <summary>Gets the text for a well-known status code.</summary>
            <param name="statusCode">Status code to get text for.</param>
            <returns>Text for the status code; an empty string if <paramref name="statusCode"/> is unknown.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.ToStreamProvider(System.Data.Services.IDataService)">
            <summary>
            Return an IDataServiceStreamProvider out of an IDataService object and throw the right thing it does not support it
            </summary>
            <param name="service">The service to get the IDataServiceStreamProvider from.</param>
            <returns>IDataServiceStreamProvider object</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetService``1(System.Object,System.Boolean)">
            <summary>
            Checks whether a given object implements IServiceProvider and if it supports the specified service interface
            </summary>
            <typeparam name="T">The type representing the requested service</typeparam>
            <param name="target">Object that acts as the service provider</param>
            <param name="fallback">Whether the function should try to fallback to built-in providers</param>
            <returns>An object implementing the requested service, or null if not available</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.TypeAllowsNull(System.Type)">
            <summary>Checks if the given type allows null values</summary>
            <param name="t">Type to check for nullability</param>
            <returns>true if type allows nulls otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsNullableValueType(System.Type)">
            <summary>Checks if given type is a Nullable of T type</summary>
            <param name="t">Type to check</param>
            <returns>true if <paramref name="t"/> is a Nullable of T, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetWrapperType(System.Type[],System.Func{System.Object,System.String})">
            <summary>
            Gets the type corresponding to the wrapper based in input parameter types
            </summary>
            <param name="wrapperParameters">Parameter types</param>
            <param name="errorGenerator">Delegate that generates the error</param>
            <returns>Closed generic type</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsExpandedWrapperType(System.Type)">
            <summary>
            Checks if the given type is an ExpandedWrapper type
            </summary>
            <param name="inputType">Input closed type</param>
            <returns>true if the given type is one of ExpandedWrapper types</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Returns an enumeration that picks one element from each enumerable and projects from them.
            </summary>
            <typeparam name="T1">Type of first enumerable.</typeparam>
            <typeparam name="T2">Type of second enumerable.</typeparam>
            <typeparam name="TResult">Type of zipped projection.</typeparam>
            <param name="left">Left enumerable.</param>
            <param name="right">Right enumerable.</param>
            <param name="resultSelector">Projecting function.</param>
            <returns>An enumeration with the projected results.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.AreSame(System.String,System.String)">
            <summary>are the two values the same reference</summary>
            <param name="value1">value1</param>
            <param name="value2">value2</param>
            <returns>true if they are the same reference</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.AreSame(System.Xml.XmlReader,System.String,System.String)">
            <summary>is the reader on contentNode where the localName and namespaceUri match</summary>
            <param name="reader">reader</param>
            <param name="localName">localName</param>
            <param name="namespaceUri">namespaceUri</param>
            <returns>true if localName and namespaceUri match reader current element</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.SkipToEnd(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            Skips the children of the current node.
            </summary>
            <param name="xmlReader">XmlReader to skip content from</param>
            <param name="localName">local name of the node we search to</param>
            <param name="namespaceURI">namespace of the node we search to</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetAttributeEx(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            get attribute value from specified namespace or empty namespace
            </summary>
            <param name="reader">reader</param>
            <param name="attributeName">attributeName</param>
            <param name="namespaceUri">namespaceUri</param>
            <returns>attribute value</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.ReadOperationParameters(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Read the parameters for the reques body for the service operation as referred in the description.
            </summary>
            <param name="description">description about the request.</param>
            <param name="dataService">data service instance.</param>
            <returns>list of the parameters for the service operation.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.TargetKindFromType(System.Data.Services.Providers.ResourceType)">
            <summary>Determines a matching target kind from the specified type.</summary>
            <param name="type">ResourceType of element to get kind for.</param>
            <returns>An appropriate <see cref="T:System.Data.Services.RequestTargetKind"/> for the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetPropertyValue(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the given property.
            </summary>
            <param name="provider">underlying data provider.</param>
            <param name="target">instance of the type which contains this property.</param>
            <param name="resourceProperty">resource property instance containing metadata about the property.</param>
            <returns>the value of the given property.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetHostAndPort(System.String,System.String,System.String@,System.Int32@)">
            <summary>Gets the host and port parts of a Host header if they are both present.</summary>
            <param name="hostHeader">Host header value (non-null).</param>
            <param name="scheme">Scheme for the host and port values.</param>
            <param name="host">If the result is true, the host part of the header.</param>
            <param name="port">If the result is false, the port part of the header.</param>
            <returns>true if the header has a host and port part, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsWhitespace(System.String)">
            <summary>Checks whether the specifies string is null or blank.</summary>
            <param name="text">Text to check.</param>
            <returns>true if text is null, empty, or all whitespace characters.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.WriteSpacePreserveAttribute(System.Xml.XmlWriter)">
            <summary>Writes an xml:space='preserve' attribute to the specified writer.</summary>
            <param name='writer'>XmlWriter to write to.</param>
        </member>
        <member name="T:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex">
            <summary>
            Represents a pair of Expanded wrapper with the index in  the array
            The only reason to create this class is to avoid CA908 for KeyValuePairs
            </summary>
        </member>
        <member name="P:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex.Type">
            <summary>Type</summary>
        </member>
        <member name="P:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex.Index">
            <summary>Index</summary>
        </member>
        <member name="T:System.Data.Services.XmlConstants">
            <summary>
            Class that contains all the constants for various schemas.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ClrServiceInitializationMethodName">
            <summary>"InitializeService" method name for service initialize.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentID">
            <summary>id of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentLength">
            <summary>byte-length of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentType">
            <summary>mime-type of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpHost">
            <summary>Host name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpDataServiceVersion">
            <summary>'DataServiceVersion' - HTTP header name for data service version.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMaxDataServiceVersion">
            <summary>'MaxDataServiceVersion' - HTTP header name for maximum understood data service version.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCacheControlNoCache">
            <summary>'no-cache' - HTTP value for Cache-Control header.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCharsetParameter">
            <summary>'charset' - HTTP parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodGet">
            <summary>HTTP method name for GET requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodPost">
            <summary>HTTP method name for POST requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodPut">
            <summary> Http Put Method name - basically used for updating resource.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodDelete">
            <summary>HTTP method name for delete requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodMerge">
            <summary>HTTP method name for </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringExpand">
            <summary>HTTP query string parameter value for expand.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringFilter">
            <summary>HTTP query string parameter value for filtering.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringOrderBy">
            <summary>HTTP query string parameter value for ordering.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringSkip">
            <summary>HTTP query string parameter value for skipping elements.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringTop">
            <summary>HTTP query string parameter value for limiting the number of elements.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringInlineCount">
            <summary>HTTP query string parameter value for counting query result set</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringSkipToken">
            <summary>HTTP query string parameter value for skipping results based on paging.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SkipTokenPropertyPrefix">
            <summary>Property prefix for the skip token property in expanded results for a skip token</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringValueCount">
            <summary>HTTP query string parameter value for counting query result set</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQValueParameter">
            <summary>'q' - HTTP q-value parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpXMethod">
            <summary>'X-HTTP-Method' - HTTP header name for requests that want to tunnel a method through POST.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestAccept">
            <summary>HTTP name for Accept header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestAcceptCharset">
            <summary>HTTP name for If-Match header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestIfMatch">
            <summary>HTTP name for If-Match header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestIfNoneMatch">
            <summary>HTTP name for If-None-Match header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundary">
            <summary>multi-part keyword in content-type to identify batch separator</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseAllow">
            <summary>'Allow' - HTTP response header for allowed verbs.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseCacheControl">
            <summary>'no-cache' - HTTP value for Cache-Control header.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseETag">
            <summary>HTTP name for ETag header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseLocation">
            <summary>HTTP name for location header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseStatusCode">
            <summary>HTTP name for Status-Code header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundaryBatchResponse">
            <summary>multi-part mixed batch separator for response stream</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundaryChangesetResponse">
            <summary>multi-part mixed changeset separator</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentTransferEncoding">
            <summary>Content-Transfer-Encoding header for batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpVersionInBatching">
            <summary>Http Version in batching requests and response.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpAnyETag">
            <summary>To checks if the resource exists or not.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpWeakETagPrefix">
            <summary>Weak etags in HTTP must start with W/.
            Look in http://www.ietf.org/rfc/rfc2616.txt?number=2616 section 14.19 for more information.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpAcceptCharset">
            <summary>The character set the client wants the response to be in.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCookie">
            <summary>The name of the Cookie HTTP header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeAny">
            <summary>MIME type for requesting any media type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationAtom">
            <summary>MIME type for ATOM bodies (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationAtomService">
            <summary>MIME type for ATOM Service Documents (http://tools.ietf.org/html/rfc5023#section-8).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJson">
            <summary>MIME type for JSON bodies (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationOctetStream">
            <summary>MIME type general binary bodies (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationHttp">
            <summary>MIME type for batch requests - this mime type must be specified in CUD changesets or GET batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationType">
            <summary>'application' - MIME type for application types.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationXml">
            <summary>MIME type for XML bodies.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeJsonSubType">
            <summary>'json' - constant for MIME JSON subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeMetadata">
            <summary>"application/xml", MIME type for metadata requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeMultiPartMixed">
            <summary>MIME type for changeset multipart/mixed</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextPlain">
            <summary>MIME type for plain text bodies.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextType">
            <summary>'text' - MIME type for text subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextXml">
            <summary>MIME type for XML bodies (deprecated).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeXmlSubType">
            <summary>'xml' - constant for MIME xml subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.BatchRequestContentTransferEncoding">
            <summary>Content-Transfer-Encoding value for batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriHttpAbsolutePrefix">
            <summary>A prefix that turns an absolute-path URI into an absolute-URI.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriMetadataSegment">
            <summary>A segment name in a URI that indicates metadata is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriValueSegment">
            <summary>A segment name in a URI that indicates a plain primitive value is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriBatchSegment">
            <summary>A segment name in a URI that indicates metadata is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriLinkSegment">
            <summary>A segment name in a URI that indicates that this is a link operation.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriCountSegment">
            <summary>A segment name in a URI that indicates that this is a count operation.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriRowCountAllOption">
            <summary>A const value for the query parameter $inlinecount to set counting mode to inline</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriRowCountOffOption">
            <summary>A const value for the query parameter $inlinecount to set counting mode to none</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.WcfBinaryElementName">
            <summary>"Binary" - WCF element name for binary content in XML-wrapping streams.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomContentElementName">
            <summary>XML element name to mark content element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEntryElementName">
            <summary>XML element name to mark entry element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomFeedElementName">
            <summary>XML element name to mark feed element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmContentKind">
            <summary>Type of content for syndication property which can be one of Plaintext, Html or XHtml</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmKeepInContent">
            <summary>Whether to keep the property value in the content section</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmNsPrefix">
            <summary>TargetNamespace prefix for non-syndication mapping</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmNsUri">
            <summary>TargetNamespace URI for non-syndication mapping</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmTargetPath">
            <summary>Target element or attribute name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmSourcePath">
            <summary>Source property name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorEmail">
            <summary>author/email</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorName">
            <summary>author/name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorUri">
            <summary>author/uri</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndPublished">
            <summary>published</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndRights">
            <summary>rights</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndSummary">
            <summary>summary</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndTitle">
            <summary>title</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindPlaintext">
            <summary>Plaintext</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindHtml">
            <summary>HTML</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindXHtml">
            <summary>XHTML</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomHRefAttributeName">
            <summary>XML element name to mark href attribute element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomSummaryElementName">
            <summary>XML element name to mark summary element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNameElementName">
            <summary>XML element name to mark author/name element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEmailElementName">
            <summary>XML element name to mark author/email element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomUriElementName">
            <summary>XML element name to mark author/uri element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishedElementName">
            <summary>XML element name to mark published element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomRightsElementName">
            <summary>XML element name to mark rights element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingCollectionElementName">
            <summary>XML element name to mark 'collection' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingServiceElementName">
            <summary>XML element name to mark 'service' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingWorkspaceDefaultValue">
            <summary>XML value for a default workspace in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingWorkspaceElementName">
            <summary>XML element name to mark 'workspace' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomTitleElementName">
            <summary>XML element name to mark title element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomTypeAttributeName">
            <summary>XML element name to mark title element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomSelfRelationAttributeValue">
            <summary> Atom link relation attribute value for self links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEditRelationAttributeValue">
            <summary> Atom link relation attribute value for edit links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEditMediaRelationAttributeValue">
            <summary> Atom link relation attribute value for edit-media links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNullAttributeName">
            <summary> Atom attribute which indicates the null value for the element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomETagAttributeName">
            <summary> Atom attribute which indicates the etag value for the declaring entry element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomInlineElementName">
            <summary>'Inline' - wrapping element for inlined entry/feed content.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPropertiesElementName">
            <summary>Element containing property values when 'content' is used for media link entries</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.RowCountElement">
            <summary>'count' element</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlCollectionItemElementName">
            <summary>'element', the XML element name for items in enumerations.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorElementName">
            <summary>XML element name for an error.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorCodeElementName">
            <summary>XML element name for an error code.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorInnerElementName">
            <summary>XML element name for the inner error details.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorInternalExceptionElementName">
            <summary>XML element name for an internal exception.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorTypeElementName">
            <summary>XML element name for an exception type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorStackTraceElementName">
            <summary>XML element name for an exception stack trace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorMessageElementName">
            <summary>XML element name for an error message.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlFalseLiteral">
            <summary>'false' literal, as used in XML.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlTrueLiteral">
            <summary>'true' literal, as used in XML.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlInfinityLiteral">
            <summary>'INF' literal, as used in XML for infinity.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlNaNLiteral">
            <summary>'NaN' literal, as used in XML for not-a-number values.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSingleInfinityLiteral">
            <summary>'INF' literal, as used in XML for infinity.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSingleNaNLiteral">
            <summary>'NaN' literal, as used in XML for not-a-number values.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlBaseAttributeName">
            <summary>XML attribute value to indicate the base URI for a document or element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlLangAttributeName">
            <summary>'lang' XML attribute name for annotation language.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSpaceAttributeName">
            <summary>XML attribute name for whitespace parsing control.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSpacePreserveValue">
            <summary>XML attribute value to indicate whitespace should be preserved.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmV1Namespace">
            <summary> Schema Namespace For Edm.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmV2Namespace">
            <summary> Schema Namespace For Edm.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebNamespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMetadataNamespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebRelatedNamespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebSchemeNamespace">
            <summary>ATOM Scheme Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2Namespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2MetadataNamespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2RelatedNamespace">
            <summary> Schema Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2SchemeNamespace">
            <summary>ATOM Scheme Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2NamespacePrefix">
            <summary> Schema Namespace Prefix For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebV2MetadataNamespacePrefix">
            <summary>'adsm' - namespace prefix for DataWebMetadataNamespace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AppNamespace">
            <summary>Schema Namespace for Atom Publishing Protocol.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNamespace">
            <summary> Schema Namespace For Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlnsNamespacePrefix">
            <summary> Schema Namespace prefix For xmlns.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlNamespacePrefix">
            <summary> Schema Namespace prefix For xml.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebNamespacePrefix">
            <summary> Schema Namespace Prefix For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMetadataNamespacePrefix">
            <summary>'adsm' - namespace prefix for DataWebMetadataNamespace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlNamespacesNamespace">
            <summary>'http://www.w3.org/2000/xmlns/' - namespace for namespace declarations.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxNamespace">
            <summary> Edmx namespace in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxNamespacePrefix">
            <summary> Prefix for Edmx Namespace in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Association">
            <summary> Association Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AssociationSet">
            <summary> AssociationSet Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ComplexType">
            <summary> ComplexType Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Dependent">
            <summary> Dependent Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmCollectionTypeFormat">
            <summary>Format string to describe a collection of a given type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmEntitySetAttributeName">
            <summary>EntitySet attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmFunctionImportElementName">
            <summary>FunctionImport element name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmModeAttributeName">
            <summary>Mode attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmModeInValue">
            <summary>Mode attribute value for 'in' direction in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmParameterElementName">
            <summary>Parameter element name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmReturnTypeAttributeName">
            <summary>ReturnType attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.End">
            <summary> End Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntityType">
            <summary> EntityType Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntityContainer">
            <summary> EntityContainer Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Key">
            <summary> Key Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NavigationProperty">
            <summary> NavigationProperty Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.OnDelete">
            <summary> OnDelete Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Principal">
            <summary> Principal Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Property">
            <summary> Property Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.PropertyRef">
            <summary> PropetyRef Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ReferentialConstraint">
            <summary> ReferentialConstraint Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Role">
            <summary> Role Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Schema">
            <summary> Schema Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxElement">
            <summary> Edmx Element Name in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxDataServicesElement">
            <summary> Edmx DataServices Element Name in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxVersion">
            <summary>Version attribute for the root Edmx Element in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxVersionValue">
            <summary>Value of the version attribute in the root edmx element in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Action">
            <summary> Action attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.BaseType">
            <summary> BaseType attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntitySet">
            <summary> EntitySet attribute and Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.FromRole">
            <summary> FromRole attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Abstract">
            <summary>Abstract attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Multiplicity">
            <summary>Multiplicity attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Name">
            <summary>Name attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Namespace">
            <summary>Namespace attribute Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ToRole">
            <summary>ToRole attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Type">
            <summary>Type attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Relationship">
            <summary>Relationship attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Many">
            <summary>Value for Many multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.One">
            <summary>Value for One multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ZeroOrOne">
            <summary>Value for ZeroOrOne multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Nullable">
            <summary>Nullable Facet Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ConcurrencyAttribute">
            <summary>Name of the concurrency attribute.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ConcurrencyFixedValue">
            <summary>Value of the concurrency attribute.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMimeTypeAttributeName">
            <summary>'MimeType' - attribute name for property MIME type attributes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebOpenTypeAttributeName">
            <summary>'OpenType' - attribute name to indicate a type is an OpenType property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebAccessHasStreamAttribute">
            <summary>'HasStream' - attribute name to indicate a type has a default stream property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebAccessDefaultStreamPropertyValue">
            <summary>'$default' - attribute value to indicate a type has a default stream property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.IsDefaultEntityContainerAttribute">
            <summary>Attribute to indicate whether this is a default entity container or not.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ServiceOperationHttpMethodName">
            <summary>Attribute name in the csdl to indicate whether the service operation must be called using POST or GET verb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriElementName">
            <summary>uri element name for link bind/unbind operations</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NextElementName">
            <summary>next element name for link paging</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LinkCollectionElementName">
            <summary>XML element name for writing out collection of links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonError">
            <summary>JSON property name for an error.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorCode">
            <summary>JSON property name for an error code.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorInner">
            <summary>JSON property name for the inner error details.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorInternalException">
            <summary>JSON property name for an internal exception.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorMessage">
            <summary>JSON property name for an error message.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorStackTrace">
            <summary>JSON property name for an exception stack trace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorType">
            <summary>JSON property name for an exception type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorValue">
            <summary>JSON property name for an error message value.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonMetadataString">
            <summary>metadata element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonUriString">
            <summary>uri element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonTypeString">
            <summary>type element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonEditMediaString">
            <summary>edit_media element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonMediaSrcString">
            <summary>media_src element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonContentTypeString">
            <summary>content_type element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonDeferredString">
            <summary>deferred element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonETagString">
            <summary>etag element name in json payload.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonRowCountString">
            <summary>row count element name in json payload</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonNextString">
            <summary>next page link element name in json payload</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmNamespace">
            <summary>namespace for edm primitive types.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmBinaryTypeName">
            <summary>edm binary primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmBooleanTypeName">
            <summary>edm boolean primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmByteTypeName">
            <summary>edm byte primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDateTimeTypeName">
            <summary>edm datetime primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDecimalTypeName">
            <summary>edm decimal primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDoubleTypeName">
            <summary>edm double primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGuidTypeName">
            <summary>edm guid primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmSingleTypeName">
            <summary>edm single primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmSByteTypeName">
            <summary>edm sbyte primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt16TypeName">
            <summary>edm int16 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt32TypeName">
            <summary>edm int32 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt64TypeName">
            <summary>edm int64 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmStringTypeName">
            <summary>edm string primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersion1Dot0">
            <summary>'1.0' - the version 1.0 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersion2Dot0">
            <summary>'2.0' - the version 2.0 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrent">
            <summary>'2.0;' - the text for the current server version text.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrentMajor">
            <summary>1 - the version 1 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrentMinor">
            <summary>0 - the current minor version for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixBinary">
            <summary>'binary' constant prefixed to binary literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixDateTime">
            <summary>'datetime' constant prefixed to datetime literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixGuid">
            <summary>'guid' constant prefixed to guid literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NullLiteralInETag">
            <summary>null liternal that needs to be return in ETag value when the value is null</summary>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache">
            <summary>
            Use this class to cache metadata through MetadataCacheItem instances.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache.cache">
            <summary>AppDomain-wide cache for metadata items.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache.cacheLock">
            <summary>Reader/writer lock for AppDomain <see cref="F:System.Data.Services.Caching.MetadataCache.cache"/>.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache.AddCacheItem(System.Type,System.Object,System.Data.Services.Caching.MetadataCacheItem)">
            <summary>Adds a new cache item, and returns the item that is put in the cache.</summary>
            <param name="serviceType">Type of service with metadata being cached.</param>
            <param name="dataContextInstance">
            Data context instance being cached, possibly segmenting the cache 
            space for <paramref name="serviceType"/>.
            </param>
            <param name="item">Item being added.</param>
            <returns>The item being put in the cache (possibly an existing one).</returns>
            <remarks>This method is thread-safe but not re-entrant.</remarks>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache.TryLookup(System.Type,System.Object)">
            <summary>Tries to look up metadata for the specifed service type and context instance.</summary>
            <param name="serviceType">Type of service with metadata being cached.</param>
            <param name="dataContextInstance">
            Data context instance being cached, possibly segmenting the cache 
            space for <paramref name="serviceType"/>.
            </param>
            <returns>The cached metadata item, if one exists.</returns>
            <remarks>This method is thread-safe but not re-entrant.</remarks>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache.MetadataCacheKey">
            <summary>This type is used as the key in the metadata cache.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.dataContextConnection">
            <summary>Connection string used to segment service type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.hashCode">
            <summary>Hash code for this instance.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.serviceType">
            <summary>Service type.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.#ctor(System.Type,System.Data.Objects.ObjectContext)">
            <summary>Initializes a new MetadataCacheKey instance.</summary>
            <param name='serviceType'>Service type for key.</param>
            <param name='dataContextInstance'>Data context instace for key, possibly null.</param>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.Comparer">
            <summary>Comparer for metadata cache keys.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.Comparer.Equals(System.Data.Services.Caching.MetadataCache.MetadataCacheKey,System.Data.Services.Caching.MetadataCache.MetadataCacheKey)">
            <summary>Compares the specified keys.</summary>
            <param name="x">First key.</param>
            <param name="y">Second key.</param>
            <returns>true if <paramref name="x"/> equals <paramref name="y"/>, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache.MetadataCacheKey.Comparer.GetHashCode(System.Data.Services.Caching.MetadataCache.MetadataCacheKey)">
            <summary>Gets the hash code for the object.</summary>
            <param name="obj">Object.</param>
            <returns>The hash code for this key.</returns>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCacheItem">
            <summary>Use this class to cache metadata for providers.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.entitySets">
            <summary> list of top level entity sets</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.serviceOperations">
            <summary>Collection of service operations, keyed by name.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.type">
            <summary>Target type for the data provider.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.typeCache">
            <summary>Cache of resource properties per type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.childTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCacheItem.edmVersion1Schema">
            <summary>If the metadata is compliant with the edm schema v1.0 other false, indicating that we need to use 1.1 schema
            1> Edm Schema 1.0 FunctionImport returns only collection of scalars or collection of entities</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCacheItem.#ctor(System.Type)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Caching.MetadataCacheItem"/> instance.</summary>
            <param name="type">Type of data context for which metadata will be generated.</param>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.ServiceOperations">
            <summary>Collection of service operations, keyed by name.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.TypeCache">
            <summary>Cache of resource properties per type.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.ChildTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.EntitySets">
            <summary> list of top level entity sets</summary>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.Type">
            <summary>Target type for the data provider.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.MetadataCacheItem.EdmVersion1Schema">
            <summary>Returns true if the metadata adheres to edm v1 constraints otherwise returns false.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionConstants">
            <summary>This type provides constants used in Astoria expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAdd">
            <summary>"add" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAnd">
            <summary>"and" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAscending">
            <summary>"asc" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordDescending">
            <summary>"desc" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordDivide">
            <summary>"div" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordEqual">
            <summary>"eq" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordFalse">
            <summary>"false" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordGreaterThan">
            <summary>"gt" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordGreaterThanOrEqual">
            <summary>"ge" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordLessThan">
            <summary>"lt" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordLessThanOrEqual">
            <summary>"le" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordModulo">
            <summary>"mod" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordMultiply">
            <summary>"mul" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNot">
            <summary>"not" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNotEqual">
            <summary>"ne" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNull">
            <summary>"null" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordOr">
            <summary>"or" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordSub">
            <summary>"sub" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordTrue">
            <summary>"true" keyword for expressions.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionLexer">
            <summary>Use this class to parse an expression in the Astoria URI format.</summary>
            <remarks>
            Literals (non-normative "handy" reference - see spec for correct expression):
            Null        null
            Boolean     true | false
            Int32       (digit+)
            Int64       (digit+)L
            Decimal     (digit+ ['.' digit+])M
            Float       (digit+ ['.' digit+][e|E [+|-] digit+)f
            Double      (digit+ ['.' digit+][e|E [+|-] digit+)
            String      "'" .* "'"
            DateTime    datetime"'"dddd-dd-dd[T|' ']dd:mm[ss[.fffffff]]"'"
            Binary      (binary|X)'digit*'
            GUID        guid'digit*'
            </remarks>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.text">
            <summary>Text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.textLen">
            <summary>Length of text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.textPos">
            <summary>Position on text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.ch">
            <summary>Character being processed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.token">
            <summary>Token being processed.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.#ctor(System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.ExpressionLexer"/>.</summary>
            <param name="expression">Expression to parse.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.IsNumeric(System.Data.Services.Parsing.TokenId)">
            <summary>Whether the specified token identifier is a numeric literal.</summary>
            <param name="id">Token to check.</param>
            <returns>true if it's a numeric literal; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.NextToken">
            <summary>Reads the next token, skipping whitespace as necessary.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ReadDottedIdentifier">
            <summary>
            Starting from an identifier, reads a sequence of dots and 
            identifiers, and returns the text for it, with whitespace 
            stripped.
            </summary>
            <returns>The dotted identifier starting at the current identifie.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.PeekNextToken">
            <summary>Returns the next token without advancing the lexer.</summary>
            <returns>The next token.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ValidateToken(System.Data.Services.Parsing.TokenId)">
            <summary>Validates the current token is of the specified kind.</summary>
            <param name="t">Expected token kind.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.SubstringEqualsOrdinal(System.String,System.Int32,System.String)">
            <summary>
            Checks whether <paramref name="text"/> contains <paramref name="match"/> at position 
            <paramref name="index"/>.
            </summary>
            <param name="text">Text to look in.</param>
            <param name="index">Index into <paramref name="text"/>.</param>
            <param name="match">Text to look for.</param>
            <returns>true if the substring is equal using an ordinal comparison; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseError(System.String)">
            <summary>Creates an exception for a parse error.</summary>
            <param name="message">Message text.</param>
            <returns>A new Exception.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.HandleTypePrefixedLiterals">
            <summary>Handles lexemes that are formed by an identifier followed by a quoted string.</summary>
            <remarks>This method modified the token field as necessary.</remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.NextChar">
            <summary>Advanced to the next character.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseFromDigit">
            <summary>Parses a token that starts with a digit.</summary>
            <returns>The kind of token recognized.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseIdentifier">
            <summary>Parses an identifier by advancing the current character.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.SetTextPos(System.Int32)">
            <summary>Sets the text position.</summary>
            <param name="pos">New text position.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ValidateDigit">
            <summary>Validates the current character is a digit.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.CurrentToken">
            <summary>Token being processed.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.ExpressionText">
            <summary>Text being parsed.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.Position">
            <summary>Position on text being parsed.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.FunctionDescription">
            <summary>Use this class to represent a system function for Astoria expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.FunctionNameCast">
            <summary>Function name for type casts.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.FunctionNameIsOf">
            <summary>Function name for type checks.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.member">
            <summary>CLR member for property or method invocation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.name">
            <summary>Function name.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.parameterTypes">
            <summary>Parameter types for method invocation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.conversionFunction">
            <summary>Conversion to expression for this function.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.Reflection.MemberInfo,System.Type[])">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="member">CLR member for property or method invocation.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.String,System.Type[],System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression})">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="name">Name for conversion function.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
            <param name="conversionFunction">Conversion to expression for this function.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.Reflection.MemberInfo,System.Type[],System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression},System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="member">CLR member for property or method invocation.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
            <param name="conversionFunction">Conversion to expression for this function.</param>
            <param name="name">Name for conversion function.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InstanceMethodConvertionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs an instance method invocation.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for method invocation; first one should be the target 'this'.</param>
            <returns>A new expression with the method invocation.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.StaticMethodConvertionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a static method invocation.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for method invocation.</param>
            <returns>A new expression with the method invocation.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InstancePropertyConvertionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs an instance property access.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Argument for property access; instance.</param>
            <returns>A new expression with the property access.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InvokeLateBoundMethod(System.Linq.Expressions.Expression[])">
            <summary>
            Invoke the late bound method for this function.
            </summary>
            <param name="arguments">list of parameters to pass to the late bound method.</param>
            <returns>A new expression with the late bound function</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BuildSignatureList(System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Parsing.FunctionDescription})">
            <summary>Builds a list of function signatures.</summary>
            <param name="name">Function name.</param>
            <param name="descriptions">Function descriptions.</param>
            <returns>A string with ';'-separated list of function signatures.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.CreateFunctions">
            <summary>Creates and populates a dictionary of system functions.</summary>
            <returns>A new dictionary of functions.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.SubstringOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Transforms a URI-style "substringof(a,b)" function into "a.contains(b)".</summary>
            <param name="target">Target of query; not used.</param>
            <param name="arguments">Arguments to function.</param>
            <returns>The conversion for this method.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryIsOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for type check; type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryIsOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for type check; instance and type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryCast(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for cast; type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryCast(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for cast; instance and type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.CreateFunctionDescription(System.Type,System.Boolean,System.Boolean,System.String,System.Type[])">
            <summary>Creates a new function description for a method or property.</summary>
            <param name="targetType">Type on which property or method is declared.</param>
            <param name="instance">Whether an instance member is looked for.</param>
            <param name="method">Whether a method (rather than a property) is looked for.</param>
            <param name="name">Name of member.</param>
            <param name="parameterTypes">Parameter types.</param>
            <returns>A new function description.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.StringInstanceFunction(System.String,System.Type[])">
            <summary>Creates a description for a string instance method.</summary>
            <param name="name">Name of method to look up.</param>
            <param name="parameterTypes">Parameter types to match.</param>
            <returns>A new function description.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.DateTimeFunctionArray(System.String)">
            <summary>Creates an array of function description for a DateTime property.</summary>
            <param name="name">Name of property to look up.</param>
            <returns>A new function description array.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.MathFunctionArray(System.String)">
            <summary>Creates an array of function description for math method with decimal and double overloads.</summary>
            <param name="name">Name of method to look up.</param>
            <returns>A new function description array.</returns>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.ConversionFunction">
            <summary>Conversion to expression for this function.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.IsTypeCast">
            <summary>Gets a value indicating whether this function is a typecast function.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.IsTypeCheck">
            <summary>Gets a value indicating whether this function is a type check function.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.ParameterTypes">
            <summary>Parameter types for method invocation.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures">
            <summary>This class provides inner types with operation signatures.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures">
            <summary>Signatures for logical operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Boolean,System.Boolean)">
            <summary>Logical signatures for bool arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Logical signatures for bool? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Object,System.Object)">
            <summary>Logical signatures for object arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures">
            <summary>Signatures for arithmetic operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Int32,System.Int32)">
            <summary>Arithmetic signature for int arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Int64,System.Int64)">
            <summary>Arithmetic signature for long arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Single,System.Single)">
            <summary>Arithmetic signature for float arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Double,System.Double)">
            <summary>Arithmetic signature for double arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Decimal,System.Decimal)">
            <summary>Arithmetic signature for decimal arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Arithmetic signature for int? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>Arithmetic signature for long? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>Arithmetic signature for float? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>Arithmetic signature for double? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>Arithmetic signature for decimal? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Object,System.Object)">
            <summary>Arithmetic signature for object arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures">
            <summary>Signatures for relational operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.String,System.String)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Boolean,System.Boolean)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Guid,System.Guid)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Char,System.Char)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.DateTime,System.DateTime)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Char},System.Nullable{System.Char})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IEqualitySignatures">
            <summary>Signatures for equality operations.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IAddSignatures">
            <summary>Signatures for addition operations.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.ISubtractSignatures">
            <summary>Signatures for subtraction operations.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.INegationSignatures">
            <summary>Signatures for negation operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Int32)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Int64)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Single)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Double)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Decimal)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Int32})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Int64})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Single})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Double})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Decimal})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Object)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.INotSignatures">
            <summary>Signatures for logical negation operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Boolean)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Nullable{System.Boolean})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Object)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures">
            <summary>Signatures for enumerable operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Where(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Any">
            <summary>Enumerable operation signature.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Any(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.All(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Count">
            <summary>Enumerable operation signature.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Count(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Min(System.Object)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Max(System.Object)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Int32)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Int32})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Int64)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Int64})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Single)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Single})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Double)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Double})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Decimal)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Decimal})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Int32)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Int32})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Int64)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Int64})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Single)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Single})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Double)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Double})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Decimal)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Decimal})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.RequestQueryParser">
            <summary>
            This class provides static methods to parse query options and compose 
            them on an existing query.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.NullLiteral">
            <summary>Constant for "null" literal.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.GetTypeAllowingNull(System.Type)">
            <summary>Gets a type for <paramref name="type"/> that allows null values.</summary>
            <param name="type">Type to base resulting type on.</param>
            <returns>
            <paramref name="type"/> if it's a reference or Nullable&lt;&gt; type;
            Nullable&lt;<paramref name="type"/>&gt; otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.IsNullableType(System.Type)">
            <summary>Checks whether the specified type is a generic nullable type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is nullable; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.IsNullConstant(System.Linq.Expressions.Expression)">
            <summary>Checks whether <paramref name="expression"/> is a null constant.</summary>
            <param name="expression">Expression to check.</param>
            <returns>true if <paramref name="expression"/> is a null constant; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.TypeAllowsNull(System.Type)">
            <summary>Checks whether the specified <paramref name='type' /> can be assigned null.</summary>
            <param name='type'>Type to check.</param>
            <returns>true if type is a reference type or a Nullable type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.OrderBy(System.Data.Services.IDataService,System.Linq.IQueryable,System.Data.Services.Providers.OrderingInfo)">
            <summary>Sorts a query like a SQL ORDER BY clause does.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="source">Original source for query.</param>
            <param name="orderingInfo">Ordering definition to compose.</param>
            <returns>The composed query.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.Where(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceType,System.Linq.IQueryable,System.String)">
            <summary>Filters a query like a SQL WHERE clause does.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="typeForIt">Type for each item in the query in Astoria metadata terms</param>
            <param name="source">Original source for query.</param>
            <param name="predicate">Predicate to compose.</param>
            <returns>The composed query.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ParseLambdaForWhere(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceType,System.Type,System.String)">
            <summary>Parses a lambda expression.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="typeForIt">Type for "it" contextual variable.</param>
            <param name="queryElementType">Actual (clr) element type for the sequence</param>
            <param name="expression">Expression to parse.</param>
            <returns>The parsed expression.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser">
            <summary>Use this class to parse an expression in the Astoria URI format.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.RecursionLimit">
            <summary>Maximum recursion limit on deserializer.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.NumericTypeNotNumeric">
            <summary>A type that is not numeric.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.NumericTypeNotIntegral">
            <summary>A type that is a char, single, double or decimal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.NumericTypeSignedIntegral">
            <summary>A type that is a signed integral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.NumericTypeUnsignedIntegral">
            <summary>A type that is an unsigned integral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.SizeOfGuid">
            <summary>Size of Guid</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.emptyExpressions">
            <summary>Empty Expressions array.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.trueLiteral">
            <summary>Constant for "true" literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.falseLiteral">
            <summary>Constant for "false" literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.functions">
            <summary>Dictionary of system functions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.guidComparisonSequence">
            <summary>Guid comparison byte sequence as used by SQL Server</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.StringCompareMethodInfo">
            <summary>Method info for string comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.BoolCompareMethodInfo">
            <summary>Method info for Bool comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.BoolCompareMethodInfoNullable">
            <summary>Method info for Bool? comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GuidCompareMethodInfo">
            <summary>Method info for Guid comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GuidCompareMethodInfoNullable">
            <summary>Method info for Guid? comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.provider">
            <summary>Provider of data and metadata.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.service">
            <summary>Service with data and configuration.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.typeForIt">
            <summary>Metadata type for "it"</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.literals">
            <summary>Literals.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.it">
            <summary>"it" contextual parameter.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.lexer">
            <summary>Expression lexer.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.nullPropagationRequired">
            <summary>Whether the expression tree should propagate nulls explicitly.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.currentSegmentType">
            <summary>Type for the current segment. This is used only when parsing member access paths.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.#ctor(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceType,System.Linq.Expressions.ParameterExpression,System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser"/>.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="typeForIt">Type for "it" contextual variable</param>
            <param name="parameterForIt">Parameters for the current "it" context.</param>
            <param name="expression">Expression to parse.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseWhere">
            <summary>Parses the text expression for a .Where method invocation.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseOrdering">
            <summary>Parses the text expression for ordering.</summary>
            <returns>An enumeration of orderings.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateComparison(System.Linq.Expressions.Expression,System.String,System.Data.Services.Parsing.Token)">
            <summary>
            Generates a comparison expression given a left hand side expression and literal for right hand side
            </summary>
            <param name="left">Left hand side experssions</param>
            <param name="rightLiteral">Literal for right hand side</param>
            <param name="op">gt, eq or lt operator token</param>
            <returns>Resulting comparison expression</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="b0">First byte array.</param><param name="b1">Second byte array.</param>
            <returns>true if the arrays are equal; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ByteArraysNotEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="b0">First byte array.</param><param name="b1">Second byte array.</param>
            <returns>true if the arrays are not equal; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GetNonNullableType(System.Type)">
            <summary>Gets a non-nullable version of the specified type.</summary>
            <param name="type">Type to get non-nullable version for.</param>
            <returns>
            <paramref name="type"/> if type is a reference type or a 
            non-nullable type; otherwise, the underlying value type.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsSignedIntegralType(System.Type)">
            <summary>Checks whether the specified type is a signed integral type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is a signed integral type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsUnsignedIntegralType(System.Type)">
            <summary>Checks whether the specified type is an unsigned integral type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is an unsigned integral type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GetNumericTypeKind(System.Type)">
            <summary>Gets a flag for the numeric kind of type.</summary>
            <param name="type">Type to get numeric kind for.</param>
            <returns>
            One of NumericTypeNotNumeric; NumericTypeNotIntegral if it's char,
            single, double or decimal; NumericTypeSignedIntegral, or NumericTypeUnsignedIntegral.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsEnumType(System.Type)">
            <summary>Checks whether type is a (possibly nullable) enumeration type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if type is an enumeration or a nullable enumeration; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.SelfAndBaseTypes(System.Type)">
            <summary>Returns an object that can enumerate the specified type and its supertypes.</summary>
            <param name="type">Type to based enumeration on.</param>
            <returns>An object that can enumerate the specified type and its supertypes.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.SelfAndBaseClasses(System.Type)">
            <summary>Returns an object that can enumerate the specified type and its supertypes.</summary>
            <param name="type">Type to based enumeration on.</param>
            <returns>An object that can enumerate the specified type and its supertypes.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.AddInterface(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>Adds an interface type to a list of types, including inherited interfaces.</summary>
            <param name="types">Types list ot add to.</param>
            <param name="type">Interface type to add.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.FindBestApplicableMethods(System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData[],System.Linq.Expressions.Expression[])">
            <summary>Finds the best applicable methods from the specified array that match the arguments.</summary>
            <param name="applicable">Candidate methods.</param>
            <param name="args">Argument expressions.</param>
            <returns>Best applicable methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseNumber(System.String,System.Type)">
            <summary>Parses the specified text into a number.</summary>
            <param name="text">Text to parse.</param>
            <param name="type">Type to parse into.</param>
            <returns>The parsed number.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsCompatibleWith(System.Type,System.Type)">
            <summary>Checks whether the source type is compatible with the value type.</summary>
            <param name="source">Source type.</param>
            <param name="target">Target type.</param>
            <returns>true if source can be used in place of target; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsBetterThan(System.Linq.Expressions.Expression[],System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Checks whether one type list is a better fit than other for the 
            specified expressions.
            </summary>
            <param name="args">Expressions for arguments.</param>
            <param name="firstCandidate">First type list to check.</param>
            <param name="secondCandidate">Second type list to check.</param>
            <returns>
            true if <paramref name="firstCandidate"/> has better parameter matching than <paramref name="secondCandidate"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsBetterThan(System.Linq.Expressions.Expression[],System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData,System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData)">
            <summary>
            Checks whether one method is a better fit than other for the 
            specified expressions.
            </summary>
            <param name="args">Expressions for arguments.</param>
            <param name="m1">First method to check.</param>
            <param name="m2">Second method to check.</param>
            <returns>
            true if <paramref name="m1"/> has better parameter matching than <paramref name="m2"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.CompareConversions(System.Type,System.Type,System.Type)">
            <summary>Checks which conversion is better.</summary>
            <param name="source">Source type.</param>
            <param name="targetA">First candidate type to convert to.</param>
            <param name="targetB">Second candidate type to convert to.</param>
            <returns>
            Return 1 if s -> t1 is a better conversion than s -> t2
            Return -1 if s -> t2 is a better conversion than s -> t1
            Return 0 if neither conversion is better
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates an Equal expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a NotEqual expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateGreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a GreaterThan comparison expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateGreaterThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a GreaterThanOrEqual comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateLessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a LessThan comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateLessThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a LessThanOrEqual comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.Compare(System.String,System.String)">
            <summary>
            Compares 2 strings by ordinal, used to obtain MethodInfo for comparison operator expression parameter
            </summary>
            <param name="left">Left Parameter</param>
            <param name="right">Right Parameter</param>
            <returns>0 for equality, -1 for left less than right, 1 for left greater than right</returns>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the 
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.Compare(System.Boolean,System.Boolean)">
            <summary>
            Compares 2 booleans with true greater than false, used to obtain MethodInfo for comparison operator expression parameter
            </summary>
            <param name="left">Left Parameter</param>
            <param name="right">Right Parameter</param>
            <returns>0 for equality, -1 for left less than right, 1 for left greater than right</returns>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the 
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.Compare(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Compares 2 nullable booleans with true greater than false, used to obtain MethodInfo for comparison operator expression parameter
            </summary>
            <param name="left">Left Parameter</param>
            <param name="right">Right Parameter</param>
            <returns>0 for equality, -1 for left less than right, 1 for left greater than right</returns>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the 
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.Compare(System.Guid,System.Guid)">
            <summary>
            Compares 2 guids by byte order, used to obtain MethodInfo for comparison operator expression parameter
            </summary>
            <param name="left">Left Parameter</param>
            <param name="right">Right Parameter</param>
            <returns>0 for equality, -1 for left less than right, 1 for left greater than right</returns>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the 
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.Compare(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Compares 2 nullable guids by byte order, used to obtain MethodInfo for comparison operator expression parameter
            </summary>
            <param name="left">Left Parameter</param>
            <param name="right">Right Parameter</param>
            <returns>0 for equality, -1 for left less than right, 1 for left greater than right</returns>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the 
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateAdd(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates an addition expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateSubtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a subtract expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsOpenPropertyExpression(System.Linq.Expressions.Expression)">
            <summary>
            Checks whether the specified <paramref name="expression"/> is part of an open property expression.
            </summary>
            <param name="expression">Non-null <see cref="T:System.Linq.Expressions.Expression"/> to check.</param>
            <returns>true if <paramref name="expression"/> is based on an open property; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GetStaticMethod(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Gets a static method by name.</summary>
            <param name="methodName">Name of method to get.</param>
            <param name="left">Left expression to resolve method from and to use as argument.</param>
            <param name="right">Right expression.</param>
            <returns>The method.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateStaticMethodCall(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a static method call.</summary>
            <param name="methodName">Method name.</param>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseError(System.String)">
            <summary>Creates an exception for a parse error.</summary>
            <param name="message">Message text.</param>
            <returns>A new Exception.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.TokenIdentifierIs(System.Data.Services.Parsing.Token,System.String)">
            <summary>Checks that the given token has the specified identifier.</summary>
            <param name="token">Token to check</param>
            <param name="id">Identifier to check.</param>
            <returns>true if <paramref name="token"/> is an identifier with the specified text.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IncompatibleOperandsError(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Int32)">
            <summary>Creates an exception indicated that two operands are incompatible.</summary>
            <param name="operationName">Name of operation for operands.</param>
            <param name="left">Expression for left-hand operand.</param>
            <param name="right">Expression for right-hand operand.</param>
            <param name="pos">Position for error.</param>
            <returns>A new <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseNullLiteral(System.Data.Services.Parsing.ExpressionLexer)">
            <summary>Handles 'null' literals.</summary>
            <param name="l">Lexer to use for reading tokens</param>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseExpression">
            <summary>Handles a ?: operator - not supported.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseLogicalOr">
            <summary>Handles or operator.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseLogicalAnd">
            <summary>Handles and operator.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseComparison">
            <summary>Handles eq, ne, lt, gt, le, ge operators.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.GenerateComparisonExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Services.Parsing.Token)">
            <summary>
            Given left and right hand side expressions, generates a comparison expression based
            on the given comparison token
            </summary>
            <param name="left">Left hand side expression</param>
            <param name="right">Right hand side expression</param>
            <param name="op">Comparison operator</param>
            <returns>Resulting comparison expression</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseAdditive">
            <summary>Handles +, -, &amp; operators (&amp; for string concat, not supported).</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseMultiplicative">
            <summary>Handles mul, div, mod operators.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseUnary">
            <summary>Handles -, not unary operators.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParsePrimary">
            <summary>Handles primary expressions.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParsePrimaryStart(System.Data.Services.Parsing.ExpressionLexer)">
            <summary>Handles the start of primary expressions.</summary>
            <param name="l">Lexer to use for reading tokens</param>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseParenExpression">
            <summary>Handles parenthesized expressions.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseIdentifier">
            <summary>Handles identifiers.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseIdentifierAsFunction">
            <summary>Handles identifiers which have been recognized as functions.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseBooleanLiteral">
            <summary>Handles boolean literals.</summary>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseTypedLiteral(System.Type,System.String,System.Data.Services.Parsing.ExpressionLexer)">
            <summary>Handles typed literals.</summary>
            <param name="targetType">Expected type to be parsed.</param>
            <param name="targetTypeName">Expected type name.</param>
            <param name="l">Lexer to use for reading tokens</param>
            <returns>The constants expression produced by building the given literal.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseMemberAccess(System.Linq.Expressions.Expression)">
            <summary>Handles member access.</summary>
            <param name="instance">Instance being accessed.</param>
            <returns>The parsed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseArgumentList">
            <summary>Handles argument lists.</summary>
            <returns>The parsed expressions.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ParseArguments">
            <summary>Handles comma-separated arguments.</summary>
            <returns>The parsed expressions.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.CreateLiteral(System.Object,System.String)">
            <summary>Creates a constant expression with the specified literal.</summary>
            <param name="value">Constant value.</param>
            <param name="text">Value text.</param>
            <returns>The created expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.FindBestFunction(System.Data.Services.Parsing.FunctionDescription[],System.Linq.Expressions.Expression[]@)">
            <summary>Finds the best fitting function for the specified arguments.</summary>
            <param name="functions">Functions to consider.</param>
            <param name="arguments">Arguments; if a best function is found, promoted arguments.</param>
            <returns>The best fitting function; null if none found or ambiguous.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ConsiderNullPropagation(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Rewrites an expression to propagate null values if necessary.</summary>
            <param name='element'>Expression to check for null.</param>
            <param name='notNullExpression'>Expression to yield if <paramref name='element' /> does not yield null.</param>
            <returns>The possibly rewriteen <paramref name='notNullExpression' />.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.CheckAndPromoteOperand(System.Type,System.String,System.Linq.Expressions.Expression@,System.Int32)">
            <summary>Checks that the operand (possibly promoted) is valid for the specified operation.</summary>
            <param name="signatures">Type with signatures to match.</param>
            <param name="operationName">Name of operation for error reporting.</param>
            <param name="expr">Expression for operand.</param>
            <param name="errorPos">Position for error reporting.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.CheckAndPromoteOperands(System.Type,System.String,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Int32)">
            <summary>Checks that the operands (possibly promoted) are valid for the specified operation.</summary>
            <param name="signatures">Type with signatures to match.</param>
            <param name="operationName">Name of operation for error reporting.</param>
            <param name="left">Expression for left operand.</param>
            <param name="right">Expression for right operand.</param>
            <param name="errorPos">Position for error reporting.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.FindMethod(System.Type,System.String,System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>Finds the named method in the specifid type.</summary>
            <param name="type">Type to look in.</param>
            <param name="methodName">Name of method to look for.</param>
            <param name="args">Arguments to method.</param>
            <param name="method">Best method found.</param>
            <returns>Number of matching methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.FindApplicableMethods(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[])">
            <summary>Finds all applicable methods from the specified enumeration that match the arguments.</summary>
            <param name="methods">Enumerable object of candidate methods.</param>
            <param name="args">Argument expressions.</param>
            <returns>Methods that apply to the specified arguments.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.FindBestMethod(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>Finds the best methods for the specified arguments given a candidate method enumeration.</summary>
            <param name="methods">Enumerable object for candidate methods.</param>
            <param name="args">Argument expressions to match.</param>
            <param name="method">Best matched method.</param>
            <returns>The number of "best match" methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.IsApplicable(System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData,System.Linq.Expressions.Expression[])">
            <summary>Checks whether the specified method is applicable given the argument expressions.</summary>
            <param name="method">Method to check.</param>
            <param name="args">Argument expressions.</param>
            <returns>true if the method is applicable; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.PromoteExpression(System.Linq.Expressions.Expression,System.Type,System.Boolean)">
            <summary>Promotes the specified expression to the given type if necessary.</summary>
            <param name="expr">Expression to promote.</param>
            <param name="type">Type to change expression to.</param>
            <param name="exact">Whether an exact type is required; false implies a compatible type is OK.</param>
            <returns>Expression with the promoted type.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.TokenIdentifierIs(System.String)">
            <summary>Checks that the current token has the specified identifier.</summary>
            <param name="id">Identifier to check.</param>
            <returns>true if the current token is an identifier with the specified text.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.ValidateToken(System.Data.Services.Parsing.TokenId)">
            <summary>Validates the current token is of the specified kind.</summary>
            <param name="t">Expected token kind.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.CurrentToken">
            <summary>Current token being processed.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData">
            <summary>Use this class to encapsulate method information.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.methodBase">
            <summary>Described method.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.parameters">
            <summary>Parameters for method.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.args">
            <summary>Argument expressions.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.#ctor(System.Reflection.MethodBase,System.Reflection.ParameterInfo[])">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData"/> instance.</summary>
            <param name="method">Described method</param>
            <param name="parameters">Parameters for method.</param>
        </member>
        <member name="P:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.Args">
            <summary>Argument expressions.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.MethodBase">
            <summary>Described method.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.Parameters">
            <summary>Parameters for method.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.RequestQueryParser.ExpressionParser.MethodData.ParameterTypes">
            <summary>Enumeration of parameter types.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.Token">
            <summary>Use this class to represent a lexical token.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.GreaterThan">
            <summary>Token representing gt keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.EqualsTo">
            <summary>Token representing eq keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.LessThan">
            <summary>Token representing lt keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.Id">
            <summary>Kind of token.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.Text">
            <summary>Token text.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.Token.Position">
            <summary>Position of token.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.Token.ToString">
            <summary>Provides a string representation of this token.</summary>
            <returns>String representation of this token.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.Token.GetIdentifier">
            <summary>Gets the current identifier text.</summary>
            <returns>The current identifier text.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.Token.IdentifierIs(System.String)">
            <summary>Checks that this token has the specified identifier.</summary>
            <param name="id">Identifier to check.</param>
            <returns>true if this is an identifier with the specified text.</returns>
        </member>
        <member name="P:System.Data.Services.Parsing.Token.IsComparisonOperator">
            <summary>Checks whether this token is a comparison operator.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.Token.IsEqualityOperator">
            <summary>Checks whether this token is an equality operator.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.Token.IsKeyValueToken">
            <summary>Checks whether this token is a valid token for a key value.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.TokenId">
            <summary>Enumeration values for token kinds.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Unknown">
            <summary>Unknown.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.End">
            <summary>End of text.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Equal">
            <summary>'=' - equality character.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Identifier">
            <summary>Identifier.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.NullLiteral">
            <summary>NullLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.BooleanLiteral">
            <summary>BooleanLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.StringLiteral">
            <summary>StringLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.IntegerLiteral">
            <summary>IntegerLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Int64Literal">
            <summary>Int64 literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.SingleLiteral">
            <summary>Single literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.DateTimeLiteral">
            <summary>DateTime literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.DecimalLiteral">
            <summary>Decimal literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.DoubleLiteral">
            <summary>Double literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.GuidLiteral">
            <summary>GUID literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.BinaryLiteral">
            <summary>Binary literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Exclamation">
            <summary>Exclamation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.OpenParen">
            <summary>OpenParen.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.CloseParen">
            <summary>CloseParen.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Comma">
            <summary>Comma.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Minus">
            <summary>Minus.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Slash">
            <summary>Slash.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Question">
            <summary>Question.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.TokenId.Dot">
            <summary>Dot</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.WebConvert">
            <summary>Use this class to convert URI and payload values.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.WebConvert.HexValues">
            <summary>Constant table of nibble-to-hex convertion values.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.WebConvert.XmlHexEncodePrefix">
            <summary>Prefix to hex-encoded values.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.WebConvert.XmlNegativeInfinity">
            <summary>-INF - negative infinity.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.WebConvert.XmlPositiveInfinity">
            <summary>INF - positive infinity.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.WebConvert.XmlWhitespaceChars">
            <summary>XML whitespace characters to trim around literals.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.IsCharHexDigit(System.Char)">
            <summary>Determines whether the specified character is a valid hexadecimal digit.</summary>
            <param name="c">Character to check.</param>
            <returns>true if <paramref name="c"/> is a valid hex digit; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.ConvertByteArrayToKeyString(System.Byte[])">
            <summary>Converts the given byte[] into string.</summary>
            <param name="byteArray">byte[] that needs to be converted.</param>
            <returns>String containing hex values representing the byte[].</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.IsKeyValueQuoted(System.String)">
            <summary>Checks whether the specified text is a correctly formatted quoted value.</summary>
            <param name='text'>Text to check.</param>
            <returns>true if the text is correctly formatted, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.IsKeyTypeQuoted(System.Type)">
            <summary>
            Determines whether the values for the specified types should be 
            quoted in URI keys.
            </summary>
            <param name='type'>Type to check.</param>
            <returns>
            true if values of <paramref name='type' /> require quotes; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyPrimitiveToString(System.Object,System.String@)">
            <summary>Converts the specified value to a serializable string for URI key.</summary>
            <param name="value">Non-null value to convert.</param>
            <param name="result">out parameter for value converted to a serializable string for URI key.</param>
            <returns>true/ false indicating success</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.RemoveQuotes(System.String)">
            <summary>Removes quotes from the single-quotes text.</summary>
            <param name="text">Text to remove quotes from.</param>
            <returns>The specified <paramref name="text"/> with single quotes removed.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToByteArray(System.String,System.Byte[]@)">
            <summary>Converts a string to a byte[] value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToDateTime(System.String,System.DateTime@)">
            <summary>Converts a string to a DateTime value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToDecimal(System.String,System.Decimal@)">
            <summary>Converts a string to a decimal value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToDouble(System.String,System.Double@)">
            <summary>Converts a string to a double value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToGuid(System.String,System.Guid@)">
            <summary>Converts a string to a GUID value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToInt64(System.String,System.Int64@)">
            <summary>Converts a string to an Int64 value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToPrimitive(System.String,System.Type,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetType">Type to convert string to.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToSingle(System.String,System.Single@)">
            <summary>Converts a string to a single value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.StringToPrimitive(System.String,System.Type)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetType">Type to convert string to.</param>
            <returns>value converted to the target type.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryRemoveQuotes(System.String@)">
            <summary>Removes quotes from the single-quotes text.</summary>
            <param name="text">Text to remove quotes from.</param>
            <returns>Whether quotes were successfully removed.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryXmlPrimitiveToString(System.Object,System.String@)">
            <summary>Converts the specified value to a serializable string for XML content.</summary>
            <param name="value">Non-null value to convert.</param>
            <param name="result">The specified value converted to a serializable string for XML content. </param>
            <returns>boolean value indicating conversion successful conversion</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.HexCharToNibble(System.Char)">
            <summary>Returns the 4 bits that correspond to the specified character.</summary>
            <param name="c">Character in the 0-F range to be converted.</param>
            <returns>The 4 bits that correspond to the specified character.</returns>
            <exception cref="T:System.FormatException">Thrown when 'c' is not in the '0'-'9','a'-'f' range.</exception>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryKeyStringToPrimitive(System.String,System.Type,System.Boolean,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="text">String text to convert.</param>
            <param name="targetType">Type to convert string to.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <param name="allowRecursion">Whether recursion is allowed by binary-encoded values.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WebConvert.TryRemoveLiteralPrefix(System.String,System.String@)">
            <summary>
            Tries to remove a literal <paramref name="prefix"/> from the specified <paramref name="text"/>.
            </summary>
            <param name="prefix">Prefix to remove; one-letter prefixes are case-sensitive, others insensitive.</param>
            <param name="text">Text to attempt to remove prefix from.</param>
            <returns>true if the prefix was found and removed; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider">
            <summary>
            Provides a helper class to implement $expand functionality
            with filters by rewriting queries and implementing custom
            result enumerators.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.OrderByMethodInfo">
            <summary>Queryable.OrderBy method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ThenByMethodInfo">
            <summary>Queryable.ThenBy method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.OrderByDescendingMethodInfo">
            <summary>Queryable.OrderByDescending method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ThenByDescendingMethodInfo">
            <summary>Queryable.ThenByDescending method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.SkipMethodInfo">
            <summary>Queryable.Skip method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.TakeMethodInfo">
            <summary>Queryable.Take method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.expanded">
            <summary>Whether all values are automatically expanded in the model.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.provider">
            <summary>Full provider.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.#ctor(System.Data.Services.Providers.DataServiceProviderWrapper,System.Boolean)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Providers.BasicExpandProvider"/> instance.</summary>
            <param name="provider">Full provider.</param>
            <param name="expanded">Whether all values are automatically expanded in the model.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <param name="orderingInfo">List of expressions to sort the topmost result by. 
            The parameter is used for generating the skiptoken for the result items</param>
            <param name="skipCount">Number of rows to skip from the outermost result. null means ignore the parameter.</param>
            <param name="takeCount">Number of rows to take from the outermost result. null means igonore the parameter.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>. The result will have at most
            <paramref name="takeCount"/> elements if <paramref name="takeCount"/> is non-zero.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="topLevelOrderingInfo"/> then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyOrderSkipTakeOnTopLevelResult(System.Linq.IQueryable,System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applies the ordering, skip and take on top level query result set
            </summary>
            <param name="query">Current query expression</param>
            <param name="orderingInfo">Top level ordering information</param>
            <param name="skipCount">Elements to skip</param>
            <param name="takeCount">Count of elements to return</param>
            <returns><paramref name="query"/> appended with OrderBy/ThenBy, Skip and Top expressions</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.InvokeOrderBy``2(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression,System.Boolean,System.Boolean)">
            <summary>
            Invokes Queryable.OrderBy/ThenBy in a strongly typed way for a weakly typed <paramref name="query"/>
            </summary>
            <typeparam name="TSource">Source type</typeparam>
            <typeparam name="TKey">Type of expression to order by</typeparam>
            <param name="query">Input query</param>
            <param name="orderExpression">Expression representing orderby clause</param>
            <param name="firstOrder">Is this first ordering expression in a list</param>
            <param name="isAscending">Ordering is ascending or descending</param>
            <returns>Query with orderby/thenby appended to it</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.InvokeSkipOrTake``1(System.Linq.IQueryable,System.Int32,System.Boolean)">
            <summary>
             Invokes Queryable.Skip/Take in a strongly typed way for a weakly typed <paramref name="query"/>
            </summary>
            <typeparam name="TSource">Source type</typeparam>
            <param name="query">Input query</param>
            <param name="count">Value of skip or top parameter</param>
            <param name="isSkip">Is it Skip or Top</param>
            <returns>Query with appended Skip/Top invocation</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.Provider">
            <summary>Provider for metadata.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerable`2">
            <summary>Enumerable element for results with expanded properties.</summary>
            <typeparam name="TResult">Type for enumeration.</typeparam>
            <typeparam name="TWrapper">Wrapper type with expanded properties.</typeparam>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerable`2.source">
            <summary>Source enumeration with wrapped properties.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerable`2.#ctor(System.Collections.Generic.IEnumerable{`1})">
            <summary>Initializes a new ExpandedEnumerable instance.</summary>
            <param name="source">Source for enumeration.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerable`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets an enumerator object for results.</summary>
            <returns>An enumerator object for results.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerable`2.GetEnumerator">
            <summary>Gets an enumerator object for results.</summary>
            <returns>An enumerator object for results.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2">
            <summary>Use this class to enumerate elements that can be expanded.</summary>
            <typeparam name="TResult">Type for enumeration.</typeparam>
            <typeparam name="TWrapper">Wrapper type with expanded properties.</typeparam>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.e">
            <summary>Enumerator for wrapper instances.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.#ctor(System.Collections.Generic.IEnumerator{`1})">
            <summary>Initializes a new ExpandedEnumerator instance.</summary>
            <param name="enumerator">Source for enumeration.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.GetExpandedPropertyValue(System.String)">
            <summary>Gets an expanded property for the specified <paramref name="name"/>.</summary>
            <param name="name">Name of property to return.</param>
            <returns>The expanded property value with the specified <paramref name="name"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.MoveNext">
            <summary>Moves to the next element.</summary>
            <returns>true if an element is available after the move; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.Reset">
            <summary>Resets the enumerator to the beginning of the sequence.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.Dispose">
            <summary>Releases resources.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.ExpandedElement">
            <summary>Element with expanded properties.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.Current">
            <summary>Element with expanded properties.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`2.System#Collections#IEnumerator#Current">
            <summary>Element with expanded properties.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode">
            <summary>Use this class to build a tree structure over a list of paths.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.SelectMethodInfoEnumerable">
            <summary>Enumerable.Select method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.WhereMethodInfoEnumerable">
            <summary>Enumerable.Where method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.TakeMethodInfoEnumerable">
            <summary>Enumerable.Take method info</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.Segment">
            <summary>Expansion segment for this node.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.ExpandProvider">
            <summary>Provider with metadata for operations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.children">
            <summary>All child nodes for this segment.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.childrenWithWrappers">
            <summary>Child nodes that have wrappers.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.childrenWithFilters">
            <summary>Child nodes that have filters.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.childrenWithoutWrappers">
            <summary>Child nodes that don't have wrappers.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.elementType">
            <summary>The element type that will be projected from this segment.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.enumeratedType">
            <summary>
            The model (never wrapped) type to be used in an strongly-typed IEnumerable for this segment.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.hasFilterWithin">
            <summary>Whether there are any filters within this node. MaxResults are considered filters for processing.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.singleResult">
            <summary>Whether this segment represents a single element rather than a collection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.orderingInfo">
            <summary>Ordering info for this node</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.needSkipToken">
            <summary>Is skip token needed for current segment</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.requiresWrapper">
            <summary>Whether this segment should be projected into a wrapper.</summary>
            <remarks>
            Segments require a wrapper because the model doesn't auto-wire
            up (as in the EDM case), or because they have children with
            filters (and thus they need to project filtered children),
            or because they have wrapped children (and thus they need
            to project the custom projected type).
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.#ctor(System.Data.Services.ExpandSegment,System.Data.Services.Providers.BasicExpandProvider)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode"/>.</summary>
            <param name="segment">Segment being described, possibly null.</param>
            <param name="provider">Provider for expansion flags and metadata.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.CollectExpandPathsIntoTree(System.Data.Services.Providers.BasicExpandProvider,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
            <summary>Builds a tree of <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode"/> items for the specified paths.</summary>
            <param name="provider">Expand provider for nodes.</param>
            <param name="expandPaths">Paths to expand.</param>
            <returns>The root of the path trees.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.AddChild(System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode)">
            <summary>Adds a child node to this segment node.</summary>
            <param name="child">Child to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.AssignTypeForExpected(System.Type,System.Boolean)">
            <summary>Assings type information given the specified type.</summary>
            <param name="enumeratedType">Type expected for enumeration.</param>
            <param name="singleResult">true if a single result is expected of this node; false otherwise.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.FindChildByName(System.String)">
            <summary>Finds a child node by name.</summary>
            <param name="name">Name of node to find.</param>
            <returns>The child node if found; null otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.BuildProjectionQuery(System.Linq.IQueryable)">
            <summary>Builds the projection to apply expansion for the specified <paramref name="query"/>.</summary>
            <param name="query">Query to build for.</param>
            <returns>A new query with the expansions performed inside.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.BuildLambdaExpression(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
            <summary>
            Creates a LambdaExpression and can be used when the delegate type is not known at compile time.
            </summary>
            <param name="delegateType">A Type that represents a delegate type.</param>
            <param name="body">An Expression to set the Body property equal to.</param>
            <param name="parameters">An IEnumerable&lt;T&gt; that contains ParameterExpression objects to use to populate the Parameters collection.</param>
            <returns>
            An object that represents a lambda expression which has the NodeType property equal to Lambda and the 
            Body and Parameters properties set to the specified values.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.IsMethodEnumerableSelect(System.Reflection.MethodInfo)">
            <summary>Checks whether the specified method is the IEnumerable.Select() with Func`T,T2.</summary>
            <param name="m">Method to check.</param>
            <returns>true if this is the method; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.IsMethodEnumerableWhere(System.Reflection.MethodInfo)">
            <summary>Checks whether the specified method is the IEnumerable.Where() with Func`T,bool.</summary>
            <param name="m">Method to check.</param>
            <returns>true if this is the method; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.IsNamedMethodSecondArgumentPredicate(System.Reflection.MethodInfo,System.String)">
            <summary>Checks whether the specified method takes a Func`T,bool as its second argument.</summary>
            <param name="m">Method to check.</param>
            <param name="name">Expected name of method.</param>
            <returns>true if this is the method; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.ProjectLateBoundLink(System.Linq.Expressions.Expression,System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode)">
            <summary>
            Create the accessor expression for a late-bound property
            </summary>
            <param name="parameter">Expression representing the instance on which to access a property</param>
            <param name="node">Expansion segment to be projected</param>
            <returns>An expression to access a property (singleton or set)</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.ApplySegmentFilter(System.Linq.Expressions.Expression)">
            <summary>Applies the segment filter to the specified expression.</summary>
            <param name="expression">Expression to apply filter on.</param>
            <returns>The expression with the filter applied.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.BuildProjectionExpression(System.Linq.Expressions.Expression)">
            <summary>Builds the projection for this segment.</summary>
            <param name="expression">
            Expected expression for this segment if it had no filtering or wrapping.
            </param>
            <returns>
            The expression for this segment, possibly a filter and/or wrapped version of 
            <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.ApplyOrderTakeOnInnerSegment(System.Linq.Expressions.Expression)">
            <summary>
            Applies OrderBy/ThenBy and Take on inner segments
            </summary>
            <param name="expression">Input expression</param>
            <returns>Output expression with OrderBy/Take possibly added to it</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.BindByName(System.String,System.Linq.Expressions.Expression)">
            <summary>
            Creates a <see cref="T:System.Linq.Expressions.MemberAssignment"/> expression that binds an expression to the named property.
            </summary>
            <param name="propertyName">Name of property on the element type.</param>
            <param name="source">Source expression for property.</param>
            <returns>
            A <see cref="T:System.Linq.Expressions.MemberAssignment"/> expression that binds an expression to the named property.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.SetWrapperElementType">
            <summary>Sets the wrapper element type on this node.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.ProjectedType">
            <summary>Type to be projected for this node in the model (possibly wrapped).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.OrderingInfo">
            <summary>Ordering information needed for root node</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandSegmentNode.WrapperDescription">
            <summary>Description to initialize the wrapper with.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ReflectionServiceProvider">
            <summary>
            Provides a reflection-based IDataServiceProvider implementation.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.#ctor(System.Data.Services.Caching.MetadataCacheItem,System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.ReflectionServiceProvider instance.
            </summary>
            <param name="metadata">Metadata for this provider.</param>
            <param name="dataSourceInstance">instance of the data source provider.</param>
            <param name="dataServiceInstance">data service instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetSetForResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the name of the container that holds this resource type.</summary>
            <param name="resourceType">Resource to get container for.</param>
            <returns>
            The name of the container for the specified resource; null if it cannot
            be determined.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetTypeIsOrdered(System.Type)">
            <summary>
            Checks whether the specified <paramref name="type"/> is ordered.
            </summary>
            <param name="type">Type to check.</param>
            <returns>true if the type may be ordered; false otherwise.</returns>
            <remarks>
            The ordering may still fail at runtime; this method is currently
            used for cleaner error messages only.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Applies expansions to the specified <paramref name="queryable"/>.</summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable"/> object to expand.</param>
            <param name="expandPaths">A list of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand.</param>
            <param name="orderingInfo">List of expressions to sort the topmost result by. 
            The parameter is used for generating the skiptoken for the result items</param>
            <param name="skipCount">Number of rows to skip from the outermost result. null means ignore the parameter.</param>
            <param name="takeCount">Number of rows to take from the outermost result. null means igonore the parameter.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the given <paramref name="queryable"/>,
            with the results including the specified <paramref name="expansions"/>. The result will have at most
            <paramref name="takeCount"/> elements if <paramref name="takeCount"/> is non-zero.
            </returns>
            <remarks>
            This method may modify the <paramref name="expansions"/> to indicate which expansions
            are included.
            
            The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
            interface to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="topLevelOrderingInfo"/> then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetService(System.Type)">
            <summary>
            Returns the requested service
            </summary>
            <param name="serviceType">type of service you are requesting for.</param>
            <returns>returns the instance of the requested service.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>Enumerates name/value pairs for properties in the specified open type instance.</summary>
            <param name="target">Instance to get values for.</param>
            <returns>
            An enumerable object of name/value pairs for the open properties in <paramref name="target"/>.
            </returns>
            <remarks>
            The property names are already validated.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. If the property is not present, return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsPropertyKeyProperty(System.Reflection.PropertyInfo,System.Data.Services.Providers.ResourceKeyKind@)">
            <summary>Checks whether the given property is a key property.</summary>
            <param name="property">property to check</param>
            <param name="keyKind">returns the key kind of the property, based on the heuristic it matches</param>
            <returns>true if this is a key property, else returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.ImplementsIUpdatable">
            <summary>
            Checks whether the provider implements IUpdatable.
            </summary>
            <returns>returns true if the provider implements IUpdatable. otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadata(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IDictionary{System.String,System.Data.Services.Providers.ResourceSet})">
            <summary>Populates the metadata for this provider.</summary>
            <param name="knownTypes">
            Dictionary of known CLR to ResourceType entries, which is 
            populated as metadata is built.
            </param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">
            Dictionary of name to ResourceSet for entity sets, populated
            as metadata is built.
            </param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetResourceContainerInstance(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Creates the IQueryable instance for the given resource set and returns it
            </summary>
            <param name="resourceContainer">resource set for which IQueryable instance needs to be created</param>
            <returns>returns the IQueryable instance for the given resource set</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source type</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="knownTypes">list of already known resource types.</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="entitySets">list of entity sets as specified in the data source.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsComplexType(System.Type)">
            <summary>Checks whether the specified type is a complex type.</summary>
            <param name="type">Type to check.</param>
            <returns>
            true if the specified type is a complex type; false otherwise. Note
            that resources are not distinguished from complex types.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.DoesTypeHaveKeyProperties(System.Type,System.Boolean)">
            <summary>
            Checks whether there is a key defined for the given type.
            </summary>
            <param name="type">type to check </param>
            <param name="entityTypeCandidate">
            Whether <paramref name="type"/> is being considered as a possible 
            entity type.
            </param>
            <returns>returns true if there are one or key properties present else returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForTypes(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populates the metadata for the given unvisited types and all the associated types with this type
            </summary>
            <param name="knownTypes">list of known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="unvisitedTypes">list of unvisited type</param>
            <param name="entitySets">Available entity sets.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildHierarchyForEntityType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType},System.Boolean)">
            <summary>
            Walks through the list of ancestors and finds the root base type and collects metadata for the entire chain of ancestors
            </summary>
            <param name="type">type whose ancestors metadata needs to be populated</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="unvisitedTypes">list of unvisited types</param>
            <param name="entityTypeCandidate">Whether <paramref name="type"/> is a candidate to be an entity type.</param>
            <returns>return true if this given type is a entity type, otherwise returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildTypeProperties(System.Data.Services.Providers.ResourceType,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Populates the metadata for the properties of the given resource type
            </summary>
            <param name="parentResourceType">resource type whose properties metadata needs to be populated</param>
            <param name="knownTypes">list of known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="unvisitedTypes">list of unvisited type</param>
            <param name="entitySets">Available entity sets.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsEntityOrComplexType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType})">
            <summary>
            If the given type is a entity or complex type, it returns the resource type corresponding to the given type
            </summary>
            <param name="type">clr type</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="unvisitedTypes">list of unvisited types</param>
            <returns>resource type corresponding to the given clr type, if the clr type is entity or complex</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.InternalGetContainerForResourceType(System.Type,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>Get the resource set for the given clr type.</summary>
            <param name="type">clr type for which resource set name needs to be returned</param>
            <param name="entitySets">Available entity sets to consider.</param>
            <returns>The container for its type, null if not found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForDerivedTypes(System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}},System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType},System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>
            Find out all the derived types in the list of assemblies and then populate metadata for those types
            </summary>
            <param name="knownTypes">list of known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <param name="unvisitedTypes">list of unvisited types</param>
            <param name="entitySets">Available entity sets.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.LoadETagProperties(System.Data.Services.Providers.ResourceType)">
            <summary>
            Loads the etag properties for the given resource type
            </summary>
            <param name="resourceType">resource type whose etag property names need to be loaded.</param>
            <returns>the list of properties that form the etag for the given resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.CreateResourceType(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.Collections.Generic.IDictionary{System.Type,System.Data.Services.Providers.ResourceType},System.Collections.Generic.IDictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType}})">
            <summary>
            returns the new resource type instance
            </summary>
            <param name="type">backing clr type for the resource.</param>
            <param name="kind">kind of the resource.</param>
            <param name="baseType">base type of the resource.</param>
            <param name="knownTypes">list of already known types</param>
            <param name="childTypes">list of already known types and their immediate children</param>
            <returns>returns a new instance of the resource type containing all the metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetModelTypeName(System.Type)">
            <summary>
            Gets the type name (without namespace) of the specified <paramref name="type"/>,
            appropriate as an externally-visible type name.
            </summary>
            <param name="type">Type to get name for.</param>
            <returns>The type name for <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.CheckOpenType(System.Type)">
            <summary>Checks whether the specified <paramref name="type"/> is an open type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is an open type; false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown when the type is declared as an open type but the declared 
            property isn't there or doesn't support name/value pairs.
            </exception>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetOpenPropertyName(System.Type)">
            <summary>Gets the name of the open property on the specified type.</summary>
            <param name="type">Type to get value for.</param>
            <returns>the name of the open property on the specified type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsOpenType(System.Type)">
            <summary>Checks whether the specified type is an open type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if the type is open; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsOpenPropertyAvailable(System.Type)">
            <summary>Checks whether the specified open type has the property name set correctly.</summary>
            <param name="type">Type to check.</param>
            <returns>true if the type is open; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.HasGenericParameters(System.Type)">
            <summary>
            Checks whether the given type is a generic type with a generic parameter.
            </summary>
            <param name="type">type which needs to be checked.</param>
            <returns>Returns true, if the <paramref name="type"/> is generic and has generic parameters. Otherwise returns false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSet">
            <summary>
            Structure to keep information about a resource set
            </summary>
            <remarks>
            Implementors of IDataServiceProvider can choose to use it as is or derive from it
            in order to flow provider-specific data.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.elementType">
            <summary> Reference to resource type that this resource set is a collection of</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.name">
            <summary>Name of the resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.readAuthorizationMethods">
            <summary>Methods to be called when composing read queries to allow authorization.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.readFromContextDelegate">
            <summary>Cached delegate to read an IQueryable from the context.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.writeAuthorizationMethods">
            <summary>Methods to be called when validating write methods to allow authorization.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.isReadOnly">
            <summary>Is true, if the resource set is fully initialized and validated. No more changes can be made once its set to readonly.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Constructs a new ResourceSet instance using the specified name and ResourceType instance
            </summary>
            <param name="name">name of the resource set</param>
            <param name="elementType">Reference to clr type that this resource set is a collection of</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.SetReadOnly">
            <summary>
            Sets the resource set to readonly mode. resource sets cannot be updated once this property is set.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.AddQueryInterceptor(System.Reflection.MethodInfo)">
            <summary>
            Adds the specified <paramref name="method"/> to the list of query
            interceptors for this resource set.
            </summary>
            <param name="method">Method to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.AddChangeInterceptor(System.Reflection.MethodInfo)">
            <summary>
            Adds the specified <paramref name="method"/> to the list of change
            interceptors for this resource set.
            </summary>
            <param name="method">Method to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.AppendMethod(System.Reflection.MethodInfo,System.Reflection.MethodInfo[]@)">
            <summary>Appends a method to the specified array.</summary>
            <param name="method">Method to append.</param>
            <param name="methods">Array to append to.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.Name">
            <summary>Name of the resource set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.ResourceType">
            <summary> Reference to resource type that this resource set is a collection of </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.CustomState">
            <summary>
            PlaceHolder to hold custom state information about service operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.IsReadOnly">
            <summary>
            Returns true, if this container has been set to read only. Otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.ReadFromContextDelegate">
            <summary>Cached delegate to read an IQueryable from the context.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.QueryInterceptors">
            <summary>Retursn the list of query interceptors for this set (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.ChangeInterceptors">
            <summary>Returns the list of change interceptors for this set (possible null).</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceProperty">
            <summary>Use this class to describe a property on a resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.getMethod">
            <summary>A MethodInfo representing the get accessor for this property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.setMethod">
            <summary>Returns a MethodInfo representing the set accessor for this property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.name">
            <summary>The name of this property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.propertyResourceType">
            <summary>The kind of resource Type that this property refers to.
            For e.g. for collection properties, this would return the resource type,
            and not the collection type that this property refers to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.resourceContainer">
            <summary>The resource set a resource property refers to, if applicable.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.kind">
            <summary>The kind of property this is in relation to the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.resourcePropertyInfo">
            <summary>Returns a PropertyInfo representing this property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.isClrProperty">
            <summary> Is true, if this property is a actual clr property on the property type. In this case,
            astoria service will do reflection over the property type and get/set value for this property.
            False means that astoria service needs to go through the IDataServiceProvider contract to get/set value for this provider.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.isReadOnly">
            <summary>Is true, if the resource property is set to readonly i.e. fully initialized and validated. No more changes can be made,
            once the resource property is set to readonly.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.mimeType">
            <summary>MIME type for the property, if it's a primitive value.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.#ctor(System.String,System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
            <summary>
            Initializes a new ResourceProperty instance for an open property.
            </summary>
            <param name="name">Property name for the property.</param>
            <param name="kind">Property kind.</param>
            <param name="propertyResourceType">The type of the resource that this property refers to</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.#ctor(System.Reflection.PropertyInfo,System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet)">
            <summary>
            Initializes a new ResourceProperty instance based on the specified parameters.
            </summary>
            <param name="propertyInfo">Property info for the property.</param>
            <param name="kind">Property kind.</param>
            <param name="propertyResourceType">The type of the resource that this property refers to</param>
            <param name="resourceContainer">The resource set a resource property refers to, if applicable.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.SetReadOnly">
            <summary>
            Sets the resource property to readonly. Once this method is called, no more changes can be made to resource property.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.SetValue(System.Object,System.Object)">
            <summary>Sets the value of the property.</summary>
            <param name="instance">The object whose property needs to be set.</param>
            <param name="propertyValue">new value for the property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.IsOfKind(System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>
            return true if this property is of the given kind
            </summary>
            <param name="checkKind">flag which needs to be checked on the current property kind</param>
            <returns>true if the current property is of the given kind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.GetPropertyInfo(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the property info for the resource property if it is not reflected yet.
            </summary>
            <param name="declaringType">Type declaring this property.</param>
            <returns>returns the propertyinfo object for this resource property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.GetResourceContainer(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Returns the <see cref="T:System.Data.Services.Providers.ResourceSet"/> this property refers to, if applicable.</summary>
            <remarks>
            In MEST (multiple entity sets per type) scenarios, the specific 
            resource set may vary depending on the container (entity set) 
            of type that has holds this property.
            
            In this case, the container returned by this method will be a representative
            container for security purposes, meaning that all associated
            containers will have identical rights.
            </remarks>
            <param name="provider">underlying data provider.</param>
            <returns>resource set for this navigation property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.IsOfKind(System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>
            return true if the given property kind is of the given kind
            </summary>
            <param name="propertyKind">kind of the property</param>
            <param name="kind">flag which needs to be checked on property kind</param>
            <returns>true if the kind flag is set on the given property kind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.CheckResourcePropertyKind(System.Data.Services.Providers.ResourcePropertyKind,System.String)">
            <summary>
            Validates that the given property kind is valid
            </summary>
            <param name="kind">property kind to check</param>
            <param name="parameterName">name of the parameter</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.ValidatePropertyParameters(System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
            <summary>
            Validate the parameters of the resource property constructor.
            </summary>
            <param name="kind">kind of the resource property.</param>
            <param name="propertyResourceType">resource type that this property refers to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.ThrowIfSealed">
            <summary>
            Checks if the resource type is sealed. If not, it throws an InvalidOperationException.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.IsClrProperty">
            <summary>Indicates whether this property is a clr property on the declaring resource instance type.</summary>
            <remarks>A 'true' value here typically indicates astoria service will use reflection to get the property info on the declaring ResourceType.InstanceType.
            'false' means that astoria service will go through IDataServiceProvider interface to get/set this property's value.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.ResourceType">
            <summary>
            The resource type that is property refers to [For collection, 
            this will return the element of the collection, and not the 
            collection].
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Name">
            <summary>The property name.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.MimeType">
            <summary>MIME type for the property, if it's a primitive value; null if none specified.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Kind">
            <summary>The kind of property this is in relation to the resource.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.CustomState">
            <summary>
            PlaceHolder to hold custom state information about resource property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.IsReadOnly">
            <summary>
            Returns true, if this resource property has been set to read only. Otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.GetMethod">
            <summary>Gets a MethodInfo representing the get accessor for this property.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.TypeKind">
            <summary>The kind of type this property has in relation to the data service.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Type">
            <summary>The type of the property.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourcePropertyKind">
            <summary>
            Enumeration for the kinds of property a resource can have.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Primitive">
            <summary>A primitive type property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Key">
            <summary>A property that is part of the key.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ComplexType">
            <summary>A complex (compound) property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceReference">
            <summary>A reference to another resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceSetReference">
            <summary>A reference to a resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ETag">
            <summary>Whether this property is a etag property.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceType">
            <summary>Use this class to represent a DataService type (primitive, complex or entity).</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EmptyProperties">
            <summary> empty list of properties </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.resourceTypeKind">
            <summary> ResourceTypeKind for the type that this structure represents </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.type">
            <summary> Reference to clr type that this resource represents </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.baseType">
            <summary> Reference to base resource type </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.name">
            <summary> name of the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.fullName">
            <summary> full name of the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.namespaceName">
            <summary> Namespace for this type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.abstractType">
            <summary>Whether this type is abstract.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.openTypeKind">
            <summary>Whether the resource type has open properties.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.constructorDelegate">
            <summary>Cached delegate to create a new instance of this type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.dictionarySerializerDelegate">
            <summary>Cached delegate to serialize parts of this resource into a dictionary.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.properties">
            <summary> List of properties declared in this type (includes properties only defined in this type, not in the base type) </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.allProperties">
            <summary> List of all properties for this type (includes properties defined in the base type also) </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.keyProperties">
            <summary> list of key properties for this type</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.etagProperties">
            <summary> list of etag properties for this type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.epmInfo">
            <summary>EpmInfo for this <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isReadOnly">
            <summary>is true, if the type is set to readonly.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isMediaLinkEntry">
            <summary>True if the resource type includes a default stream </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new instance of Astoria type using the specified clr type
            </summary>
            <param name="instanceType">clr type that represents the flow format inside the Astoria runtime</param>
            <param name="resourceTypeKind"> kind of the resource type</param>
            <param name="baseType">base type of the resource type</param>
            <param name="namespaceName">Namespace name of the given resource type.</param>
            <param name="name">name of the given resource type.</param>
            <param name="isAbstract">whether the resource type is an abstract type or not.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructs a new instance of Resource type for the given clr primitive type. This constructor must be called only for primitive types.
            </summary>
            <param name="type">clr type representing the primitive type.</param>
            <param name="namespaceName">namespace of the primitive type.</param>
            <param name="name">name of the primitive type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new instance of Astoria type using the specified clr type
            </summary>
            <param name="type">clr type from which metadata needs to be pulled </param>
            <param name="baseType">base type of the resource type</param>
            <param name="namespaceName">Namespace name of the given resource type.</param>
            <param name="name">name of the given resource type.</param>
            <param name="isAbstract">whether the resource type is an abstract type or not.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPrimitiveResourceType(System.Type)">
            <summary>
            Get a ResourceType representing a primitive type given a .NET System.Type object
            </summary>
            <param name="type">.NET type to get the primitive type from</param>
            <returns>A ResourceType object representing the primitive type or null if not primitive</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddProperty(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Adds the given property to this ResourceType instance
            </summary>
            <param name="property">resource property to be added</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.RemoveProperty(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Remove the resource property from the given type.
            </summary>
            <param name="property">resource property to be removed.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute(System.Data.Services.Common.EntityPropertyMappingAttribute)">
            <summary>
            Adds an <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> for the resource type.
            </summary>
            <param name="attribute">Given <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/></param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.SetReadOnly">
            <summary>
            Make the resource type readonly from now on. This means that no more changes can be made to the resource type anymore.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BuildReflectionEpmInfo(System.Data.Services.Providers.ResourceType)">
            <summary>Given a resource type, builds the EntityPropertyMappingInfo for each EntityPropertyMappingAttribute on it</summary>
            <param name="currentResourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BuildEpmInfo(System.Data.Services.Common.EntityPropertyMappingAttribute,System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Builds the EntityPropertyMappingInfo corresponding to an EntityPropertyMappingAttribute, also builds the delegate to
            be invoked in order to retrieve the property provided in the <paramref name="sourceName"/>
            </summary>
            <param name="epmAttr">Source EntityPropertyMappingAttribute</param>
            <param name="definingType">Type that has the attribute applied to it</param>
            <param name="isEFProvider">Is EF provider being initialized, used for error message formatting</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.SetEpmValue(System.Data.Services.Common.EpmTargetPathSegment,System.Object,System.Object,System.Data.Services.Common.EpmContentDeSerializerBase)">
            <summary>
            Sets the value <paramref name="propertyValue"/> on the <paramref name="currentValue"/> object
            </summary>
            <param name="currentSegment">Target path segment containing the corresponding attribute information</param>
            <param name="currentValue">Object on which to set property</param>
            <param name="propertyValue">Value to be set</param>
            <param name="deserializer">Current deserializer</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.SetPropertyValueFromPath(System.String[],System.Data.Services.Providers.ResourceType,System.Object,System.Object,System.Int32,System.Data.Services.Common.EpmContentDeSerializerBase)">
            <summary>
            Given a collection of <paramref name="segments"/> corresponding to a property access path
            on the <paramref name="instance"/> object, sets the <paramref name="value"/> on the property
            </summary>
            <param name="segments">Property access path where each element is a property name</param>
            <param name="resourceType">Resource type for which to set the property</param>
            <param name="element">Object on which to set property</param>
            <param name="propertyValue">Value of property</param>
            <param name="currentIndex">Index of the current segment being looked at</param>
            <param name="deserializer">Current deserializer</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.RemoveKeyProperties">
            <summary>
            Changes the key property to non key property and removes it from the key properties list
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertyName(System.String)">
            <summary>Tries to find the property for the specified name.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <returns>Resolved property; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertiesDeclaredOnThisTypeByName(System.String)">
            <summary>Tries to find the property declared on this type for the specified name.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <returns>Resolved property; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.IsAssignableFrom(System.Data.Services.Providers.ResourceType)">
            <summary>
            Checks if the given type is assignable to this type. In other words, if this type
            is a subtype of the given type or not.
            </summary>
            <param name="superType">resource type to check.</param>
            <returns>true, if the given type is assignable to this type. Otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ResourcePropertyComparison(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Compares two resource property instances, sorting them so keys are first,
            and are alphabetically ordered in case-insensitive ordinal order.
            </summary>
            <param name="a">First property to compare.</param>
            <param name="b">Second property to compare.</param>
            <returns>
            Less than zero if a sorts before b; zero if equal; greater than zero if a sorts
            after b.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BuildDynamicEpmInfo(System.Data.Services.Providers.ResourceType)">
            <summary>Given a resource type, builds the EntityPropertyMappingInfo for each of the dynamic entity property mapping attribute</summary>
            <param name="currentResourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BuildPropertyReader(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType,System.String[],System.Int32,System.Data.Services.Providers.ResourceProperty@,System.Boolean@)">
            <summary>
            Given a source property path in segmented form, creates the correponding delegate that reads the
            property value from the resource type instance
            </summary>
            <param name="expr">Generated expression tree</param>
            <param name="providerParam">Parameter expression for provider wrapper</param>
            <param name="rsrcType">Resource type whose property is to be read</param>
            <param name="srcPathSegments">Collection of property names used for resource type property lookup</param>
            <param name="currentSegment">Index of current property name in <paramref name="srcPathSegments"/></param>
            <param name="rsrcProp">Final resource property object that the <paramref name="srcPathSegments"/> refers to</param>
            <param name="openProperty">Is the path representing an open property</param>
            <returns>Expression tree which results in access to property value</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.PropertyExistsInCurrentType(System.Data.Services.Common.EntityPropertyMappingAttribute)">
            <summary>
            Does given property in the attribute exist in this type or one of it's base types
            </summary>
            <param name="epmAttr">Attribute which has PropertyName</param>
            <returns>true if property exists in current type, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ThrowIfSealed">
            <summary>
            Checks if the resource type is sealed. If not, it throws an InvalidOperationException.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsMediaLinkEntry">
            <summary>True if the resource type includes a default stream</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.InstanceType">
            <summary> Reference to clr type that this resource represents </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.BaseType">
            <summary> Reference to base resource type, if any </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ResourceTypeKind">
            <summary> ResourceTypeKind of this type </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Properties">
            <summary> Returns the list of properties for this type </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.PropertiesDeclaredInThisType">
            <summary> list of properties declared on this type </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.KeyProperties">
            <summary> Returns the list of key properties for this type, if this type is entity type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ETagProperties">
            <summary>Returns the list of etag properties for this type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Name">
            <summary> Gets the name of the resource.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.FullName">
            <summary> Gets the fullname of the resource.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Namespace">
            <summary> Returns the namespace of this type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsAbstract">
            <summary>Indicates whether this is an abstract type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.OpenTypeKind">
            <summary>returns the kind of open type this type represents.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.CustomState">
            <summary>
            PlaceHolder to hold custom state information about resource type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsReadOnly">
            <summary>
            Returns true, if this resource type has been set to read only. Otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsOpenType">
            <summary>Whether the resource type has open properties.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ConstructorDelegate">
            <summary>Cached delegate to create a new instance of this type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.DictionarySerializerDelegate">
            <summary>Cached delegate to serialize parts of this resource into a dictionary.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.HasEntityPropertyMappings">
            <summary>
            Do we have entity property mappings for this <see cref="T:System.Data.Services.Providers.ResourceType"/>
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoInitialized">
            <summary>
            Property used to mark the fact that EpmInfo for the resource type has been initialized
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmIsV1Compatible">
            <summary>The mappings for friendly feeds are V1 compatible or not</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmSourceTree">
            <summary>
            Tree of source paths for EntityPropertyMappingAttributes on this resource type
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmTargetTree">
            <summary>
            Tree of target paths for EntityPropertyMappingAttributes on this resource type
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.InheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.OwnEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType">
            <summary>Holder of Epm related data structure per resource type</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.epmSourceTree">
            <summary>EpmSourceTree per <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.epmTargetTree">
            <summary>EpmTargetTree per <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.inheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.ownEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.Reset">
            <summary>
            Removes all data created internally by ResourceType. This is needed when building epm 
            info fails since the trees may be left in undefined state (i.e. half constructed) and 
            if inherited EPM attributes exist duplicates will be added.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.EpmSourceTree">
            <summary>Property for obtaining EpmSourceTree for a type</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.EpmTargetTree">
            <summary>Property for obtaining EpmTargetTree for a type</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.InheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.OwnEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceKeyKind">
            <summary>
            Enumeration for the kind of resource key kind
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.AttributedKey">
            <summary> if the key property was attributed </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.TypeNameId">
            <summary> If the key property name was equal to TypeName+ID </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.Id">
            <summary> If the key property name was equal to ID </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceTypeKind">
            <summary>
            Enumeration for the kind of resource types
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.EntityType">
            <summary> Resource type with keys </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.ComplexType">
            <summary> Resource type without keys </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.Primitive">
            <summary>A resource type without keys and with no properties.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperation">
            <summary>Use this class to represent a custom service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.invoke">
            <summary>Whether this is an update method or a GET method.</summary>
            <remarks>Might need to be more specific than this when we design service operation updates.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.parameters">
            <summary>In-order parameters for this operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.resultKind">
            <summary>Kind of result expected from this operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.resultType">
            <summary>Type of element of the method result.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.emptyParameterCollection">
            <summary>Empty parameter collection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.mimeType">
            <summary>MIME type specified on primitive results, possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.entitySet">
            <summary>Entity set from which entities are read, if applicable.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.name">
            <summary>name of the service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.isReadOnly">
            <summary>Is true, if the service operation is set to readonly i.e. fully initialized and validated. No more changes can be made,
            after the service operation is set to readonly.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.#ctor(System.String,System.Data.Services.Providers.ServiceOperationResultKind,System.Data.Services.Providers.ResourceType,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceOperationParameter})">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Providers.ServiceOperation"/> instance.
            </summary>
            <param name="name">name of the service operation.</param>
            <param name="resultKind">Kind of result expected from this operation.</param>
            <param name="resultType">Type of element of the method result.</param>
            <param name="invoke">Whether this is an update method or a GET method.</param>
            <param name="parameters">In-order parameters for this operation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.SetReadOnly">
            <summary>
            Set this service operation to readonly.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.ThrowIfSealed">
            <summary>
            Throws an InvalidOperationException if this service operation is already set to readonly.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.GetResourceContainer(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Gets the container for the resource type.
            </summary>
            <param name="provider">data source.</param>
            <returns>returns the container for the result type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.Invoke">
            <summary>Whether this is an update method or a GET method.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.MimeType">
            <summary>MIME type specified on primitive results, possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.Name">
            <summary>Name of the service operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.Parameters">
            <summary>Returns all the parameters for the given service operations./// </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.ResultKind">
            <summary>Kind of result expected from this operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.ResultType">
            <summary>Element of result type.</summary>
            <remarks>
            Note that if the method returns an IEnumerable&lt;string&gt;, 
            this property will be typeof(string).
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.CustomState">
            <summary>
            PlaceHolder to hold custom state information about service operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.IsReadOnly">
            <summary>
            Returns true, if this service operation has been set to read only. Otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.EntitySet">
            <summary>Entity set from which entities are read (possibly null).</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperationParameter">
            <summary>Use this type to represent a parameter on a service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationParameter.name">
            <summary>Parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationParameter.type">
            <summary>Parameter type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationParameter.isReadOnly">
            <summary>Is true, if the service operation parameter is set to readonly i.e. fully initialized and validated.
            No more changes can be made, after this is set to readonly.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Providers.ServiceOperationParameter"/>.
            </summary>
            <param name="name">Name of parameter.</param>
            <param name="parameterType">resource type of parameter value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationParameter.SetReadOnly">
            <summary>
            Sets this service operation parameter to readonly.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperationParameter.Name">
            <summary>Name of parameter.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperationParameter.ParameterType">
            <summary>Type of parameter values.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperationParameter.CustomState">
            <summary>
            PlaceHolder to hold custom state information about service operation parameter.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperationParameter.IsReadOnly">
            <summary>
            Returns true, if this parameter has been set to read only. Otherwise returns false.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperationResultKind">
            <summary>
            Use this type to describe the kind of results returned by a service
            operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.DirectValue">
            <summary>A single direct value which cannot be further composed.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Enumeration">
            <summary>An enumeration of values which cannot be further composed.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithMultipleResults">
            <summary>A queryable object which returns multiple elements.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithSingleResult">
            <summary>A queryable object which returns a single element.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Void">
            <summary>No result return.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Atom10FormatterFactory">
            <summary>Provides support for serializing responses in ATOM 1.0 format.</summary>
            <remarks>
            For more information, see http://tools.ietf.org/html/rfc4287.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationFormatterFactory">
            <summary>
            An abstract class used as a base class for other classes that can create formatters, readers and writers
            for different content types (for example <see cref="T:System.Data.Services.Serializers.Atom10FormatterFactory"/>).
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateSyndicationFeedFormatter">
            <summary>Creates a new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter"/> class.</summary>
            <returns>A new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateSyndicationFeedFormatter(System.ServiceModel.Syndication.SyndicationFeed)">
            <summary>
            Creates a new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> instance.
            </summary>
            <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> to serialize.</param>
            <returns>
            A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> instance.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateSyndicationItemFormatter">
            <summary>Creates a new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter"/> class.</summary>
            <returns>A new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateSyndicationItemFormatter(System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Creates a new instance of an <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> instance.
            </summary>
            <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> to serialize.</param>
            <returns>
            A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> instance.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlReader"/> over the specified <paramref name="stream"/> with the given
            <paramref name="encoding"/>, to be used with an appropriate formatter.
            </summary>
            <param name="stream">Stream over which to read (the reader should close it when it's done with it).</param>
            <param name="encoding">Encoding of the stream.</param>
            <returns>A new <see cref="T:System.Xml.XmlReader"/> instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationFormatterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlWriter"/> into the specified <paramref name="stream"/> with the given
            <paramref name="encoding"/>, to be used with an appropriate formatter.
            </summary>
            <param name="stream">Stream over which to write (the writer should close it when it's done with it).</param>
            <param name="encoding">Encoding of the stream.</param>
            <returns>A new <see cref="T:System.Xml.XmlWriter"/> instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateSyndicationFeedFormatter">
            <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter"/> class.</summary>
            <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateSyndicationFeedFormatter(System.ServiceModel.Syndication.SyndicationFeed)">
            <summary>
            Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> instance.
            </summary>
            <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> to serialize.</param>
            <returns>
            A new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter"/> class with the specified
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed"/> instance.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateSyndicationItemFormatter">
            <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter"/> class.</summary>
            <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateSyndicationItemFormatter(System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter"/> class with the specified
            <see cred="SyndicationItem"/> instance.
            </summary>
            <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> to serialize.</param>
            <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlReader"/> over the specified <paramref name="stream"/> with the given
            <paramref name="encoding"/>, to be used with an appropriate formatter.
            </summary>
            <param name="stream">Stream over which to read (the reader should close it when it's done with it).</param>
            <param name="encoding">Encoding of the stream, possibly null.</param>
            <returns>A new <see cref="T:System.Xml.XmlReader"/> instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Atom10FormatterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlWriter"/> into the specified <paramref name="stream"/> with the given
            <paramref name="encoding"/>, to be used with an appropriate formatter.
            </summary>
            <param name="stream">Stream over which to write (the writer should close it when it's done with it).</param>
            <param name="encoding">Encoding of the stream.</param>
            <returns>A new <see cref="T:System.Xml.XmlWriter"/> instance.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.AtomServiceDocumentSerializer">
            <summary>
            Provides support for serializing service models as
            a Service Document.
            </summary>
            <remarks>
            For more information, see http://tools.ietf.org/html/rfc5023#section-8.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.XmlDocumentSerializer">
            <summary>Provides support for serializing generic XML documents.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.IExceptionWriter">
            <summary>Interface for objects than can write exception descriptions.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.IExceptionWriter.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="F:System.Data.Services.Serializers.XmlDocumentSerializer.baseUri">
            <summary>Base URI from which resources should be resolved.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.XmlDocumentSerializer.provider">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.XmlDocumentSerializer.writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.XmlDocumentSerializer.#ctor(System.IO.Stream,System.Uri,System.Data.Services.Providers.DataServiceProviderWrapper,System.Text.Encoding)">
            <summary>
            Initializes a new XmlDocumentSerializer, ready to write
            out an XML document
            </summary>
            <param name="output">Stream to which output should be sent.</param>
            <param name="baseUri">Base URI from which resources should be resolved.</param>
            <param name="provider">Data provider from which metadata should be gathered.</param>
            <param name="encoding">Text encoding for the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.XmlDocumentSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.XmlDocumentSerializer.WriteRequest">
            <summary>Writes the document for this request..</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.XmlDocumentSerializer.BaseUri">
            <summary>Base URI from which resources should be resolved.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.XmlDocumentSerializer.Provider">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.XmlDocumentSerializer.Writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.AtomServiceDocumentSerializer.AppNamespacePrefix">
            <summary>XML prefix for the Atom Publishing Protocol namespace.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.AtomServiceDocumentSerializer.AtomNamespacePrefix">
            <summary>XML prefix for the Atom namespace.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.AtomServiceDocumentSerializer.#ctor(System.IO.Stream,System.Uri,System.Data.Services.Providers.DataServiceProviderWrapper,System.Text.Encoding)">
            <summary>
            Initializes a new AtomServiceDocumentSerializer, ready to write
            out the Service Document for a data provider.
            </summary>
            <param name="output">Stream to which output should be sent.</param>
            <param name="baseUri">Base URI from which resources should be resolved.</param>
            <param name="provider">Data provider from which metadata should be gathered.</param>
            <param name="encoding">Text encoding for the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.AtomServiceDocumentSerializer.WriteRequest">
            <summary>Writes the Service Document to the output stream.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.AtomServiceDocumentSerializer.IncludeCommonNamespaces">
            <summary>Ensures that common namespaces are included in the topmost tag.</summary>
            <remarks>
            This method should be called by any method that may write a 
            topmost element tag.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.BatchWriter">
            <summary>
            Static helper class to write responses for batch requests
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.BatchWriter.WriteStartBatchBoundary(System.IO.StreamWriter,System.String,System.String)">
            <summary>
            Writes the start of the changeset response
            </summary>
            <param name="writer">writer to which the response needs to be written</param>
            <param name="batchBoundary">batch boundary</param>
            <param name="changesetBoundary">changeset boundary</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BatchWriter.WriteBoundaryAndHeaders(System.IO.StreamWriter,System.Data.Services.IDataServiceHost2,System.String)">
            <summary>Write the boundary and header information.</summary>
            <param name="writer">writer to which the response needs to be written</param>
            <param name="host">host containing the value of the response headers</param>
            <param name="boundary">boundary string that needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BatchWriter.WriteEndBoundary(System.IO.StreamWriter,System.String)">
            <summary>
            Write the end boundary
            </summary>
            <param name="writer">writer to which the response needs to be written</param>
            <param name="boundary">end boundary string.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BatchWriter.WriterStartBoundary(System.IO.StreamWriter,System.String)">
            <summary>
            Write the start boundary
            </summary>
            <param name="writer">writer to which the response needs to be written</param>
            <param name="boundary">boundary string.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BatchWriter.WriteHeaderValue(System.IO.StreamWriter,System.String,System.Object)">
            <summary>
            Write the header name and value
            </summary>
            <param name="writer">writer to which the response needs to be written</param>
            <param name="headerName">name of the header whose value needs to be written.</param>
            <param name="headerValue">value of the header that needs to be written.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.BinarySerializer">
            <summary>Provides support for serializing responses in binary format.</summary>
            <remarks>
            The file histroy should show a BinaryExceptionTextWriter which is no longer used.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.BinarySerializer.outputStream">
            <summary>Stream to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.#ctor(System.IO.Stream)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.BinarySerializer"/> for the specified stream.</summary>
            <param name="output">Stream to which output should be sent.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.WriteRequest(System.Object)">
            <summary>Handles the complete serialization for the specified content.</summary>
            <param name="content">Single Content to write..</param>
            <remarks><paramref name="content"/> should be a byte array.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.WriteRequest(System.IO.Stream,System.Int32)">
            <summary>Handles the complete serialization for the specified stream.</summary>
            <param name="inputStream">Input stream to write out.</param>
            <param name="bufferSize">Buffer size to use during copying.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.Deserializer">
            <summary>
            Provides a abstract base deserializer class
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.RecursionLimit">
            <summary>Maximum recursion limit on deserializer.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.service">
            <summary>Data service for which the deserializer will act.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.tracker">
            <summary>Tracker for actions taken during deserialization.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.update">
            <summary> Indicates whether the payload is for update or not </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.objectCount">
            <summary>number of resources (entity or complex type) referred in this request.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.Deserializer"/> for the specified stream.</summary>
            <param name="update">indicates whether this is a update operation or not</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.#ctor(System.Data.Services.Serializers.Deserializer)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.Deserializer"/> based on a different one.</summary>
            <param name="parent">Parent deserializer for the new instance.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.System#IDisposable#Dispose">
            <summary>Releases resources held onto by this object.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateDeserializer(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Data.Services.UpdateTracker)">
            <summary>
            Creates a new <see cref="T:System.Data.Services.Serializers.Deserializer"/> for the specified stream.
            </summary>
            <param name="description">description about the request uri.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="update">indicates whether this is a update operation or not</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <returns>A new instance of <see cref="T:System.Data.Services.Serializers.Deserializer"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ConvertValues(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.ContentFormat,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Converts the given value to the expected type as per the deserializer rules
            </summary>
            <param name="value">value to the converted</param>
            <param name="property">property information whose value is the first parameter</param>
            <param name="contentFormat">specifies the content format of the payload</param>
            <param name="provider">underlying data service provider.</param>
            <returns>object which is in sync with the properties type</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandlePutRequest(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.IO.Stream)">
            <summary>
            Update the resource specified in the given request description
            </summary>
            <param name="description">description about the request uri</param>
            <param name="dataService">data service type to which the request was made</param>
            <param name="stream">Stream from which request body should be read.</param>
            <returns>The tracked modifications.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetResourceToModify(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Object@)">
            <summary>
            Gets the resource to modify.
            </summary>
            <param name="description">description about the target request</param>
            <param name="service">data service type to which the request was made</param>
            <param name="entityResource">entity resource which is getting modified.</param>
            <returns>Returns the object that needs to get modified</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetResourceToModify(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Object@,System.Data.Services.Providers.ResourceSet@,System.Boolean)">
            <summary>
            Returns the last segment info whose target request kind is resource
            </summary>
            <param name="description">description about the target request</param>
            <param name="service">data service type to which the request was made</param>
            <param name="allowCrossReferencing">whether cross-referencing is allowed for the resource in question.</param>
            <param name="entityResource">entity resource which is getting modified.</param>
            <param name="entityContainer">entity container of the entity which is getting modified.</param>
            <param name="checkETag">whether to check the etag for the entity resource that is getting modified.</param>
            <returns>Returns the object that needs to get modified</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ModifyResource(System.Data.Services.RequestDescription,System.Object,System.Object,System.Data.Services.ContentFormat,System.Data.Services.IDataService)">
            <summary>
            Modify the value of the given resource to the given value
            </summary>
            <param name="description">description about the request</param>
            <param name="resourceToBeModified">resource that needs to be modified</param>
            <param name="requestValue">the new value for the target resource</param>
            <param name="contentFormat">specifies the content format of the payload</param>
            <param name="service">Service this request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetResource(System.Data.Services.SegmentInfo,System.String,System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Get the resource referred by the given segment
            </summary>
            <param name="segmentInfo">information about the segment.</param>
            <param name="fullTypeName">full name of the resource referred by the segment.</param>
            <param name="service">data service type to which the request was made</param>
            <param name="checkForNull">whether to check if the resource is null or not.</param>
            <returns>returns the resource returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateMediaLinkEntry(System.String,System.String,System.IO.Stream,System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>
            Creates a Media Link Entry.
            </summary>
            <param name="containerName">Container for the MLE type.</param>
            <param name="fullTypeName">Full type name for the MLE to be created.</param>
            <param name="requestStream">Request stream from the host.</param>
            <param name="service">Service this request is against.</param>
            <param name="description">Description of the target request.</param>
            <returns>Newly created Media Link Entry.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetStreamPropertyValue(System.Object,System.IO.Stream,System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>
            Copy the contents of the request stream into the default stream of the specified entity.
            </summary>
            <param name="resourceToBeModified">Entity with the associated stream which we will write to.</param>
            <param name="requestStream">Request stream from the host</param>
            <param name="service">Service this is request is against</param>
            <param name="description">Description of the target request.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetCrossReferencedResource(System.Data.Services.SegmentInfo)">
            <summary>
            Gets the resource from the segment enumerable.
            </summary>
            <param name="segmentInfo">segment from which resource needs to be returned.</param>
            <returns>returns the resource contained in the request enumerable.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.IsCrossReferencedSegment(System.Data.Services.SegmentInfo,System.Data.Services.IDataService)">
            <summary>
            Test if the given segment is a cross referenced segment in a batch operation
            </summary>
            <param name="segmentInfo">Segment in question</param>
            <param name="service">service instance</param>
            <returns>True if the given segment is a cross referenced segment</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadEntity(System.Data.Services.RequestDescription)">
            <summary>
            Deserializes the given stream into clr object as specified in the payload
            </summary>
            <param name="requestDescription">description about the target request</param>
            <returns>the object instance that it created and populated from the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandleBindOperation(System.Data.Services.RequestDescription,System.Object)">
            <summary>
            Handle bind operation
            </summary>
            <param name="description">information about the request uri.</param>
            <param name="linkResource">the child resource which needs to be linked.</param>
            <returns>returns the parent object to which an new object was linked to.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandlePostRequest(System.Data.Services.RequestDescription)">
            <summary>
            Handles post request.
            </summary>
            <param name="requestDescription">description about the uri for the post operation.</param>
            <returns>returns the resource that is getting inserted or binded - as specified in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.UpdateObjectCount(System.Int32)">
            <summary>
            Update the object count value to the given value.
            </summary>
            <param name="value">value to be set for object count.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetPropertyValue(System.Data.Services.Providers.ResourceProperty,System.Object,System.Object,System.Data.Services.ContentFormat,System.Data.Services.IDataService)">
            <summary>
            Set the value of the given resource property to the new value
            </summary>
            <param name="resourceProperty">property whose value needs to be updated</param>
            <param name="declaringResource">instance of the declaring type of the property for which the property value needs to be updated</param>
            <param name="propertyValue">new value for the property</param>
            <param name="contentFormat">specifies the content format of the payload</param>
            <param name="service">Service this is request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetOpenPropertyValue(System.Object,System.String,System.Object,System.Data.Services.IDataService)">
            <summary>
            Set the value of the open property
            </summary>
            <param name="declaringResource">instance of the declaring type of the property for which the property value needs to be updated</param>
            <param name="propertyName">name of the open property to update</param>
            <param name="propertyValue">new value for the property</param>
            <param name="service">Service this request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadStringFromStream(System.IO.StreamReader)">
            <summary>
            Reads the content from the stream reader and returns it as string
            </summary>
            <param name="streamReader">stream reader from which the content needs to be read</param>
            <returns>string containing the content as read from the stream reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CheckForBindingInPutOperations(System.Data.Services.AstoriaVerbs)">
            <summary>
            Make sure binding operations cannot be performed in PUT operations
            </summary>
            <param name="requestVerb">http method name for the request.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateSegment(System.Data.Services.Providers.ResourceProperty,System.String,System.Boolean)">
            <summary>Creates a new SegmentInfo for the specified <paramref name="property"/>.</summary>
            <param name="property">Property to create segment info for (possibly null).</param>
            <param name="propertyName">Name for the property.</param>
            <param name="singleResult">Whether a single result is expected.</param>
            <returns>
            A new <see cref="T:System.Data.Services.SegmentInfo"/> instance that describes the specfied <paramref name="property"/>
            as a target, or an open proprty if <paramref name="property"/> is null.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateSegment(System.Data.Services.Providers.ServiceOperationParameter)">
            <summary>Creates a new SegmentInfo for the specified <paramref name="parameter"/>.</summary>
            <param name="parameter">Parameter to create segment for.</param>
            <returns>
            A new <see cref="T:System.Data.Services.SegmentInfo"/> instance that describes the specfied <paramref name="parameter"/>
            as a target.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateSingleObject(System.Data.Services.SegmentInfo)">
            <summary>
            Create the object from the given payload and return the top level object
            </summary>
            <param name="segmentInfo">info about the object being created</param>
            <returns>instance of the object created</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetLinkUriFromPayload">
            <summary>
            Get the resource referred by the uri in the payload
            </summary>
            <returns>resource referred by the uri in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.Dispose(System.Boolean)">
            <summary>Provides an opportunity to clean-up resources.</summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetTargetResourceToBind(System.String,System.Boolean)">
            <summary>
            Returns the target/child resource to bind to an resource, which might be getting inserted or modified.
            Since this is a target resource, null is a valid value here (for e.g. /Customers(1)/BestFriend value
            can be null)
            </summary>
            <param name="uri">uri referencing to the resource to be returned.</param>
            <param name="checkNull">whether the resource can be null or not.</param>
            <returns>returns the resource as referenced by the uri. Throws 404 if the checkNull is true and the resource returned is null.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetObjectFromSegmentInfo(System.Data.Services.Providers.ResourceType,System.Data.Services.SegmentInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a resource referenced by the given segment info.
            </summary>
            <param name="resourceType">resource type whose instance needs to be created</param>
            <param name="segmentInfo">segment info containing the description of the uri</param>
            <param name="verifyETag">verify etag value of the current resource with one specified in the request header</param>
            <param name="checkForNull">validate that the resource cannot be null.</param>
            <param name="replaceResource">reset the resource as referred by the segment.</param>
            <returns>a new instance of the given resource type with key values populated</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CheckAndIncrementObjectCount">
            <summary>
            Check and increment the object count
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadByteStream(System.IO.Stream)">
            <summary>
            Read the byte from the given input request stream
            </summary>
            <param name="stream">input/request stream from which data needs to be read</param>
            <returns>byte array containing all the data read</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.IsQueryRequired(System.Data.Services.RequestDescription,System.Object,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Returns true if we need to query the provider before updating.
            </summary>
            <param name="requestDescription">request description</param>
            <param name="requestValue">value corresponding to the payload for this request</param>
            <param name="provider">provider against which the request was targeted</param>
            <returns>returns true if we need to issue an query to satishfy the request</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Tracker">
            <summary>Tracker for actions taken during deserialization.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.ContentFormat">
            <summary>returns the content format for the deserializer</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Service">
            <summary>Data service for which the deserializer will act.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Updatable">
            <summary>Return the IUpdatable object to use to make changes to entity states</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Update">
            <summary>
            Returns true if the request method is a PUT (update) method
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.MaxObjectCount">
            <summary>Returns the current count of number of objects referred by this request.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.DictionaryContent">
            <summary>
            Use this class to hold the name/value pairs of content that will be written 
            to the content element of a syndication item.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DictionaryContent.valueContents">
            <summary>Content for a property value: one of a string, dictionary or null.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DictionaryContent.valueNames">
            <summary>Names for property values.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DictionaryContent.valueTypes">
            <summary>Declared type names for property values.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.#ctor">
            <summary>Initializes a new DictionaryContent instance.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.#ctor(System.Int32)">
            <summary>Initializes a new DictionaryContent instance.</summary>
            <param name='capacity'>Initial capacity for entries.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.#ctor(System.Data.Services.Serializers.DictionaryContent)">
            <summary>
            Initializes a new DictionaryContent instance by copying values from 
            the specified one.
            </summary>
            <param name="other">Dictionary to copy content from.</param>
            <remarks>This produces a shallow copy only.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.Clone">
            <summary>Creates a shallow copy of this content.</summary>
            <returns>A shallow copy of this content.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.Add(System.String,System.String,System.Object)">
            <summary>Adds the specified property.</summary>
            <param name="name">Property name.</param>
            <param name="expectedTypeName">Expected type name for value.</param>
            <param name="value">Property value in text form.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.AddNull(System.String,System.String)">
            <summary>Adds a property with a null value.</summary>
            <param name="expectedTypeName">Type for the property.</param>
            <param name="name">Property name.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.GetPropertyContentsReader">
            <summary>
            Gets a XmlReader to the property contents.
            </summary>
            <returns>XmlReader for the property contents.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.Lookup(System.String,System.Boolean@)">
            <summary>
            Looks up the dictionary content value for the property bag for complex property 
            </summary>
            <param name="propertyName">Name of property to lookup</param>
            <param name="found">Was content found</param>
            <returns>The property bag or null if the property never existed</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.WriteContentsTo(System.Xml.XmlWriter)">
            <summary>Writes the contents of this SyndicationContent object to the specified XmlWriter.</summary>
            <param name='writer'>The XmlWriter to write to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.DictionaryContent.WritePropertyContentsTo(System.Xml.XmlWriter)">
            <summary>Writes the contents of this SyndicationContent object to the specified XmlWriter.</summary>
            <param name='writer'>The XmlWriter to write to.</param>
        </member>
        <member name="P:System.Data.Services.Serializers.DictionaryContent.Type">
            <summary>The MIME type of this content.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.IndentedTextWriter">
            <summary>Writes the Json text in indented format.</summary>
            <remarks>
            There are many more methods implemented in previous versions
            of this file to handle more type and newline cases.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.IndentedTextWriter.writer">
            <summary> writer to which Json text needs to be written</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.IndentedTextWriter.indentLevel">
            <summary> keeps track of the indentLevel</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.IndentedTextWriter.tabsPending">
            <summary> keeps track of pending tabs</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.IndentedTextWriter.tabString">
            <summary> string representation of tab</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Creates a new instance of IndentedTextWriter over the given text writer
            </summary>
            <param name="writer">writer which IndentedTextWriter wraps</param>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.Close">
            <summary> Closes the underlying writer</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.Flush">
            <summary> Clears all the buffer of the current writer </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.Write(System.String)">
            <summary>
            Writes the given string value to the underlying writer
            </summary>
            <param name="s">string value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.Write(System.Char)">
            <summary>
            Writes the given char value to the underlying writer 
            </summary>
            <param name="value">char value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.WriteTrimmed(System.String)">
            <summary>
            Writes the trimmed text if minimizeWhiteSpeace is set to true
            </summary>
            <param name="text">string value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.IndentedTextWriter.OutputTabs">
            <summary> Writes the tabs depending on the indent level </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.IndentedTextWriter.Encoding">
            <summary> Returns the Encoding for the given writer </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.IndentedTextWriter.NewLine">
            <summary> Returns the new line character </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.IndentedTextWriter.Indent">
            <summary> returns the current indent level </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonDeserializer">
            <summary>
            Provides a deserializer for json content.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonDeserializer.jsonReader">
            <summary> json reader which reads json content</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.JsonSerializer"/> for the specified stream.</summary>
            <param name="requestStream">Input stream from which JSON content must be read.</param>
            <param name="encoding">Encoding to use for the stream.</param>
            <param name="update">indicates whether this is a update operation or not</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.ConvertValues(System.Object,System.String,System.Type,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Converts the given value to the expected type as per json reader rules
            Make sure these rules are in sync with jsonwriter.
            </summary>
            <param name="value">value to the converted</param>
            <param name="propertyName">name of the property whose value is getting converted</param>
            <param name="typeToBeConverted">clr type to which the value needs to be converted to</param>
            <param name="provider">underlying data service provider.</param>
            <returns>object which is in sync with the properties type</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.CreateSingleObject(System.Data.Services.SegmentInfo)">
            <summary>
            Assumes the payload to represent a single object and processes accordingly
            </summary>
            <param name="segmentInfo">info about the object being created</param>
            <returns>the newly formed object that the payload represents</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.Dispose(System.Boolean)">
            <summary>Provides an opportunity to clean-up resources.</summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.GetLinkUriFromPayload">
            <summary>
            Get the resource referred by the uri in the payload
            </summary>
            <returns>resource referred by the uri in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.GetArrayList(System.Object)">
            <summary>
            Gets the array list object
            </summary>
            <param name="jsonObject">object representing json array </param>
            <returns>strongly type array list object that json object represents</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.IsDeferredElement(System.Object)">
            <summary>
            Verifies if the given element value is a deferred element or not
            </summary>
            <param name="element">element value</param>
            <returns>true if this value is a deferred content else returns false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.HandleTopLevelNonEntityProperty(System.Collections.Hashtable,System.Data.Services.SegmentInfo,System.Object@)">
            <summary>
            Returns true if the payload is correct for the top level non-entity target.
            </summary>
            <param name="jsonObject">json object representing the data in the payload.</param>
            <param name="segment">information about the last segment in the request uri.</param>
            <param name="resource">resource object as specified in the payload.</param>
            <returns>returns true if the payload is correct for non-entity resource.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.ReadUri(System.Collections.Hashtable)">
            <summary>
            Read the uri from the json object
            </summary>
            <param name="metadata">metadata object which contains the uri.</param>
            <returns>returns the uri as specified in the object.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.CreateObject(System.Object,System.Data.Services.SegmentInfo,System.Boolean,System.Boolean@)">
            <summary>
            Create the object given the list of the properties. One of the properties will be __metadata property
            which will contain type information
            </summary>
            <param name="jsonObject">list of the properties and values specified in the payload</param>
            <param name="segmentInfo">info about the object being created</param>
            <param name="topLevel">true if the current object is a top level one, otherwise false</param>
            <param name="existingRelationship">does this resource already binded to its parent</param>
            <returns>instance of the object created</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.PopulateProperties(System.Collections.Hashtable,System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>
            Populate the properties of the given resource
            </summary>
            <param name="jsonObject">hashtable containing property name and values</param>
            <param name="resource">instance of the resource whose properties needs to be populated</param>
            <param name="parentResourceType">resource type whose properties needs to be populated</param>
            <returns>true if any properties were set; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.PopulateParameters(System.Collections.Hashtable,System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Services.Providers.ServiceOperation)">
            <summary>
            Deserialize all parameters for a given service operation.
            </summary>
            <param name="jsonObject">json object containing all the values specified in the wire.</param>
            <param name="parameterCollection">dictionary to hold all the parameter values.</param>
            <param name="operation">service operation whose parameters need to be deserialized.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.HandleOpenTypeProperties(System.Object,System.String,System.Object)">
            <summary>
            Handle the open type property
            </summary>
            <param name="parentResource">parent resource to which the open property belongs to</param>
            <param name="propertyName">name of the property</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonDeserializer.GetTypeAndUriFromMetadata(System.Collections.Hashtable,System.Data.Services.Providers.ResourceType,System.Boolean,System.String@,System.Boolean@)">
            <summary>
            Gets the type and uri specified in the metadata object in the given json object.
            </summary>
            <param name="jsonObject">jsonObject which contains the metadata information</param>
            <param name="expectedType">expected type that this segment of the uri is targeted to</param>
            <param name="topLevel">whether the segment represents the top level object.</param>
            <param name="uri">uri as specified in the metadata object. If its not specified, this is set to null</param>
            <param name="metadataElementSpecified">returns true if the metadata element was specified</param>
            <returns>typename and uri as specified in the metadata object</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.JsonDeserializer.ContentFormat">
            <summary>returns the content format for the deserializer</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonReader">
            <summary>Json text reader.</summary>
            <remarks>Does not dispose the reader, since we don't own the underlying stream.</remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonReader.RecursionLimit">
            <summary>Maximum recursion limit on reader.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonReader.DateTimeFormat">
            <summary>Compiled Regex for DateTime Format.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonReader.reader">
            <summary> Reader to reader text into </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonReader.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.#ctor(System.IO.TextReader)">
            <summary>
            Creates a new instance of Json reader which readers the json text 
            from the given reader
            </summary>
            <param name="reader">text reader from which json payload needs to be read.
            Does not dispose the reader, since we don't own the underlying stream.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadValue">
            <summary>
            Converts the given value into the right type
            </summary>
            <returns>returns the clr object instance which </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadNextCharacter">
            <summary>
            Gets the next character from the reader. This function moves the enumerator by 1 position
            </summary>
            <returns>the next charater from the current reader position</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.PeekNextCharacter">
            <summary>
            peeks the next character from the reader. This does not move the current reader position.
            </summary>
            <returns>the next character from the current reader position</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.GetCharacters(System.Int32)">
            <summary>
            Returns the next count characters from the reader's current position
            </summary>
            <param name="count">number of characters to return</param>
            <returns>string consisting of next count characters</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.PeekNextSignificantCharacter">
            <summary>
            Sets the readers position to the next significant character position
            </summary>
            <returns>returns the next significant character without changing the current position of the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadArray">
            <summary>
            Converts the given text into an arrayList
            </summary>
            <returns>returns the arraylist containing the list of objects</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadBoolean">
            <summary>
            Reads the boolean value
            </summary>
            <returns>returns the boolean value as read from the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadName(System.Boolean)">
            <summary>
            Reads the name string from the reader
            </summary>
            <param name="allowQuotes">true, if you want to allow quotes, otherwise false</param>
            <returns>string name value</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadNull">
            <summary>
            Reads the null literal from the reader
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadNumber">
            <summary>Reads the number from the reader.</summary>
            <returns>reads the clr number object</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadObject">
            <summary>
            Reads the object from the reader
            </summary>
            <returns>returns hashtable containing the list of property names and values</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadString">
            <summary>
            Read the string value from the reader
            </summary>
            <returns>returns the string value read from the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.ReadString(System.Boolean@)">
            <summary>
            Read the string value from the reader
            </summary>
            <param name="hasLeadingSlash">out parameter indicating whether the string has a leading slash or not</param>
            <returns>returns the string value read from the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonReader.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving..</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonSerializer">
            <summary>
            Provides support for serializing responses in JSON format.
            </summary>
            <remarks>For more information, see http://www.json.org/.</remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer">
            <summary>Abstract base class for all serializers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.RecursionLimit">
            <summary>Maximum recursion limit on serializers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.absoluteServiceUri">
            <summary>Base URI from which resources should be resolved.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.httpETagHeaderValue">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.service">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.requestDescription">
            <summary>Description for the requested results.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.complexTypeCollection">
            <summary>Collection of complex types, used for cycle detection.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.segmentContainers">
            <summary>Resolved segment containers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.segmentNames">
            <summary>Segment names.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.segmentResultCounts">
            <summary>Result counts for segments.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,System.String)">
            <summary>Initializes a new base Serializer, ready to write out a description.</summary>
            <param name="requestDescription">Description for the requested results.</param>
            <param name="absoluteServiceUri">Base URI from which resources should be resolved.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="httpETagHeaderValue">HTTP ETag header value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetUri(System.Object,System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceSet,System.Uri)">
            <summary>
            Gets the uri given the list of resource properties. This logic must be the same across all
            serializers. Hence putting this in a util class
            </summary>
            <param name="resource">instance of the resource type whose properties needs to be returned</param>
            <param name="provider">Provider from which resource was obtained.</param>
            <param name="container">Container for the resource.</param>
            <param name="absoluteServiceUri">Base URI from which resources should be resolved.</param>
            <returns>uri for the given resource</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.AppendEntryToUri(System.Uri,System.String)">
            <summary>
            Appends the given entry to the given uri
            </summary>
            <param name="currentUri">uri to which the entry needs to be appended</param>
            <param name="entry">entry which gets appended to the given uri</param>
            <returns>new uri with the entry appended to the given uri</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteRequest(System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Handles the complete serialization for the specified <see cref="P:System.Data.Services.Serializers.Serializer.RequestDescription"/>.
            </summary>
            <param name="queryResults">Query results to enumerate.</param>
            <param name="hasMoved">Whether <paramref name="queryResults"/> was succesfully advanced to the first element.</param>
            <remarks>
            <paramref name="queryResults"/> should correspond to the RequestQuery of the 
            RequestDescription object passed while constructing this serializer
            We allow the results to be passed in
            to let the query be executed earlier than at result-writing time, which
            helps detect data and query errors where they can be better handled.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetExpandedProperty(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets the expandable value for the specified object.</summary>
            <param name="provider">underlying data source instance.</param>
            <param name="expanded">Expanded properties for the result, possibly null.</param>
            <param name="customObject">Object with value to retrieve.</param>
            <param name="property">Property for which value will be retrieved.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.Flush">
            <summary>Flushes the writer to the underlying stream.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Boolean)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Result elements.</param>
            <param name="hasMoved">Whether <paramref name="elements"/> was succesfully advanced to the first element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteRowCount">
            <summary>
            Write out the entry count
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteLink(System.Object)">
            <summary>
            Write out the uri for the given element
            </summary>
            <param name="element">element whose uri needs to be written out.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteLinkCollection(System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Write out the uri for the given elements
            </summary>
            <param name="elements">elements whose uri need to be writtne out</param>
            <param name="hasMoved">the current state of the enumerator.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.AddToComplexTypeCollection(System.Object)">
            <summary>
            Adds the given object instance to complex type collection
            </summary>
            <param name="complexTypeInstance">instance to be added</param>
            <returns>true, if it got added successfully</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetContainerForCurrent(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceSet"/> for the <paramref name="current"/> object.</summary>
            <param name="current">Object being written.</param>
            <returns>resource set for current object.</returns>
            <remarks>This method relies on segments being pushed and popped for MEST scenarios.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetNextLinkUri(System.Object,System.Object,System.Uri)">
            <summary>
            Obtains the URI for the link for next page in string format
            </summary>
            <param name="lastObject">Last object serialized to be used for generating $skiptoken</param>
            <param name="expandedResult"><see cref="T:System.Data.Services.IExpandedResult"/> object corresponding to last serialized object</param>
            <param name="absoluteUri">Absolute response URI</param>
            <returns>URI for the link for next page</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.NeedNextPageLink">
            <summary>Is next page link needs to be appended to the feed</summary>
            <returns>true if the feed must have a next page link</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegmentForOpenProperty(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Pushes a segment for the root of the tree being written out.</summary>
            <param name="propertyName">Name of open property.</param>
            <param name="propertyResourceType">Resulved type of open property.</param>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if segment was pushed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.IncrementSegmentResultCount">
            <summary>Increments the result count for the current segment, throws if exceeds the limit.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegmentForProperty(System.Data.Services.Providers.ResourceProperty)">
            <summary>Pushes a segment from the stack of names being written.</summary>
            <param name='property'>Property to push.</param>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if a segment was pushed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegmentForRoot">
            <summary>Pushes a segment for the root of the tree being written out.</summary>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if the segment was pushed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PopSegmentName(System.Boolean)">
            <summary>Pops a segment name from the stack of names being written.</summary>
            <param name="needPop">Is a pop required. Only true if last push was successful</param>
            <remarks>Calls to this method should be balanced with previous calls to PushSegmentName.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SaveSegmentNames">
            <summary>Returns a clone of the segment names and containers trackd at this moment.</summary>
            <returns>A clone of the segment names and containers tracked at this moment; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RestoreSegmentNames(System.Object)">
            <summary>Restores the segment names saved through <see cref="M:System.Data.Services.Serializers.Serializer.SaveSegmentNames"/>.</summary>
            <param name="savedSegmentNames">Value returned from a previous call to <see cref="M:System.Data.Services.Serializers.Serializer.SaveSegmentNames"/>.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RemoveFromComplexTypeCollection(System.Object)">
            <summary>
            Remove the given object instance from the complex type collection
            </summary>
            <param name="complexTypeInstance">instance to be removed</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.ShouldExpandSegment(System.String)">
            <summary>Checks whether the property with the specified name should be expanded in-line.</summary>
            <param name='name'>Name of property to consider for expansion.</param>
            <returns>true if the segment should be expanded; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetETagValue(System.Object)">
            <summary>
            Returns the ETag value from the host response header
            </summary>
            <param name="resource">resource whose etag value gets to be returned</param>
            <returns>returns the etag value for the given resource</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetObjectKey(System.Object,System.Data.Services.Providers.DataServiceProviderWrapper,System.String)">
            <summary>Returns the key for the given resource.</summary>
            <param name="resource">Resource for which key value needs to be returned.</param>
            <param name="provider">Specific provider from which resource was obtained.</param>
            <param name="containerName">name of the entity container that the resource belongs to</param>
            <returns>Key for the given resource, with values encoded for use in a URI.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.BuildSkipTokenFromProperties(System.Object,System.Collections.Generic.ICollection{System.Data.Services.Providers.ResourceProperty},System.Text.StringBuilder)">
            <summary>
            Given a collection of properties, builds a skip token expression out of their values for <paramref name="lastObject"/>
            </summary>
            <param name="lastObject">Object from which to read the property values</param>
            <param name="properties">Collection of properties to read</param>
            <param name="skipTokenBuilder">Builder of key properties</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegment(System.String,System.Data.Services.Providers.ResourceSet)">
            <summary>Pushes a segment from the stack of names being written.</summary>
            <param name="name">Name of property to push.</param>
            <param name="container">Container to push (possibly null).</param>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if a segment was push, false otherwise</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.CurrentContainer">
            <summary>Container for the resource being serialized (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.IsRootContainer">
            <summary>Is current container the root container.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.Provider">
            <summary>
            Gets the Data provider from which metadata should be gathered.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.Service">
            <summary>
            Gets the Data service from which metadata should be gathered.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.RequestDescription">
            <summary>
            Gets the RequestDescription for the request that is getting serialized.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.ObjectReferenceEqualityComparer">
            <summary>Supports a by-reference equality comparison for objects.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.ObjectReferenceEqualityComparer.instance">
            <summary>Singleton instance.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
            <summary>Determines whether the specified objects are equal</summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
            <summary>Returns a hash code for the specified object.</summary>
            <param name="obj">The Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.ObjectReferenceEqualityComparer.Instance">
            <summary>Singleton instance.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonSerializer.writer">
            <summary>JsonWriter to write out strings in Json format.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.#ctor(System.Data.Services.RequestDescription,System.IO.Stream,System.Uri,System.Data.Services.IDataService,System.Text.Encoding,System.String)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Serializers.JsonSerializer"/>, ready to write out a description.
            </summary>
            <param name="requestDescription">Description for the requested results.</param>
            <param name="output">Stream to which output should be sent.</param>
            <param name="absoluteServiceUri">Absolute URI to the service entry point.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="encoding">Text encoding for the response.</param>
            <param name="httpETagHeaderValue">HTTP ETag header value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.Flush">
            <summary>Flushes the writer to the underlying stream.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Boolean)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Enumerator for elements to write.</param>
            <param name="hasMoved">Whether <paramref name="elements"/> was succesfully advanced to the first element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteRowCount">
            <summary>Writes the Row count</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteLink(System.Object)">
            <summary>Writes out the uri for the given element.</summary>
            <param name="element">element whose uri needs to be written out.</param>
            <remarks>This method accounts for a written entity on the current segment.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteLinkCollection(System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Write out the uri for the given elements.
            </summary>
            <param name="elements">elements whose uri need to be writtne out</param>
            <param name="hasMoved">the current state of the enumerator.</param>
            <remarks>This method accounts for each link as a written entity on the current segment.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.GetTagNameForType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the tag name to be used when writing the specified type.</summary>
            <param name='resourceType'>Type of resource to be written.</param>
            <returns>The tag name to be used when writing he specified type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.NextPageLinkWriter(System.Object,System.Object,System.Uri)">
            <summary>
            Writes the next page link to the current xml writer corresponding to the feed
            </summary>
            <param name="lastElement">Object that will contain the keys for skip token</param>
            <param name="expandedResult"><see cref="T:System.Data.Services.IExpandedResult"/> of the object being written</param>
            <param name="absoluteUri">Absolute URI for the result</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteLinkObject(System.Uri)">
            <summary>Write the link uri in the payload.</summary>
            <param name="uri">uri which needs to be written.</param>
            <remarks>This method accounts for a written entity on the current segment.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WritePrimitiveValue(System.Object)">
            <summary>
            Attempts to convert the specified primitive value to a serializable string.
            </summary>
            <param name="value">Non-null value to convert.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteMetadataObject(System.Object,System.Data.Services.Providers.ResourceType,System.Uri)">
            <summary>Writes the ID and uri path information for the specified resource.</summary>
            <param name='resource'>Resource for which URI information should be written.</param>
            <param name="resourceType">type of the resource</param>
            <param name="uriPath">uri of the resource for which the metadata is getting written</param>
            <returns>The tag name for the resource that was written.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteElementWithName(System.Data.Services.IExpandedResult,System.Object,System.String,System.Uri,System.Boolean)">
            <summary>Writes an element with an optional specified name.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name='element'>Element to write, possibly null.</param>
            <param name='elementName'>Name of element to write, possibly null.</param>
            <param name='elementUri'>URI of element to write.</param>
            <param name="topLevel">whether the element is a top level element or not.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteResourceProperties(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceType,System.Uri)">
            <summary>Writes all the properties of the specified resource.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="resource">Resource with properties to write out.</param>
            <param name="resourceType">Type for the specified resource (saves the lookup in this method).</param>
            <param name="uri">uri of the resource whose properties are getting written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteComplexTypeProperties(System.Object,System.Data.Services.Providers.ResourceType,System.Uri)">
            <summary>Writes all the properties of the specified complex type.</summary>
            <param name="complexObject">Object of a complex type with properties to be written out.</param>
            <param name="resourceType">resource type representing the current object</param>
            <param name="parentUri">uri of the complex type whose properties needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteDeferredContentElement(System.Uri)">
            <summary>Writes a JSON _deferred element.</summary>
            <param name="uri">uri of the element which is getting deferred</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteNullValue">
            <summary>Writes an attribute to indicate that there is no value.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonSerializer.WriteObjectProperties(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceType,System.Uri,System.Boolean)">
            <summary>Writes all the properties of the specified resource or complex object.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="customObject">Resource or complex object with properties to write out.</param>
            <param name="resourceType">Resource Type representing the given object instance.</param>
            <param name="parentUri">uri of the object whose properties are getting written</param>
            <param name="objectIsResource">true if the specified object is a resource; false otherwise.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonServiceDocumentSerializer">
            <summary>
            Provides support for serializing service models as
            a Service Document.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonServiceDocumentSerializer.JsonEntitySetsElementName">
            <summary>Element name for the json service document.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonServiceDocumentSerializer.writer">
            <summary>JsonWriter to write out strings in Json format.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonServiceDocumentSerializer.provider">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonServiceDocumentSerializer.#ctor(System.IO.Stream,System.Data.Services.Providers.DataServiceProviderWrapper,System.Text.Encoding)">
            <summary>
            Initializes a new JsonServiceDocumentSerializer, ready to write
            out the Service Document for a data provider.
            </summary>
            <param name="output">Stream to which output should be sent.</param>
            <param name="provider">Data provider from which metadata should be gathered.</param>
            <param name="encoding">Text encoding for the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonServiceDocumentSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonServiceDocumentSerializer.WriteRequest">
            <summary>Writes the Service Document to the output stream.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonWriter">
            <summary>
            Json text writer
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.JsonDateTimeFormat">
            <summary> Json datetime format </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.JsonWrapperEnd">
            <summary>Text used to end a data object wrapper in JSON.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.JsonWrapperStart">
            <summary>Text used to start a data object wrapper in JSON.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.DatetimeMinTimeTicks">
            <summary> const tick value for caculating tick values</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.writer">
            <summary> Writer to write text into </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.scopes">
            <summary> scope of the json text - object, array, etc</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Creates a new instance of Json writer
            </summary>
            <param name="writer">writer to which text needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.EndWrapper">
            <summary>Ends wrapped text.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.EndScope">
            <summary>
            End the current scope
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.StartArrayScope">
            <summary>
            Start the array scope
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.StartWrapper">
            <summary>Starts a data object wrapper.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.StartObjectScope">
            <summary>
            Start the object scope
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteName(System.String)">
            <summary>
            Write the name for the object property
            </summary>
            <param name="name">name of the object property </param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Boolean)">
            <summary>
            Write the bool value
            </summary>
            <param name="value">bool value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Int32)">
            <summary>
            Write the int value
            </summary>
            <param name="value">int value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Single)">
            <summary>
            Write the float value
            </summary>
            <param name="value">float value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Int16)">
            <summary>
            Write the short value
            </summary>
            <param name="value">short value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Int64)">
            <summary>
            Write the long value
            </summary>
            <param name="value">long value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Double)">
            <summary>
            Write the double value
            </summary>
            <param name="value">double value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Guid)">
            <summary>
            Write the Guid value
            </summary>
            <param name="value">double value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Decimal)">
            <summary>
            Write the decimal value
            </summary>
            <param name="value">decimal value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.DateTime)">
            <summary>
            Write the DateTime value
            </summary>
            <param name="dateTime">dateTime value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.Byte)">
            <summary>
            Write the byte value
            </summary>
            <param name="value">byte value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.SByte)">
            <summary>
            Write the sbyte value
            </summary>
            <param name="value">sbyte value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteValue(System.String)">
            <summary>
            Write the string value
            </summary>
            <param name="s">string value to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.Flush">
            <summary>
            Clears all buffers for the current writer
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.QuoteJScriptString(System.String)">
            <summary>
            Returns the string value with special characters escaped
            </summary>
            <param name="s">input string value</param>
            <returns>Returns the string value with special characters escaped.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.WriteCore(System.String,System.Boolean)">
            <summary>
            Write the string value with/without quotes
            </summary>
            <param name="text">string value to be written</param>
            <param name="quotes">put quotes around the value if this value is true</param>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.StartScope(System.Data.Services.Serializers.JsonWriter.ScopeType)">
            <summary>
            Start the scope given the scope type
            </summary>
            <param name="type">scope type</param>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonWriter.ScopeType">
            <summary>
            Various scope types for Json writer
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.ScopeType.Array">
            <summary> array scope </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.ScopeType.Object">
            <summary> object scope</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.JsonWriter.Scope">
            <summary>
            class representing scope information
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.Scope.objectCount">
            <summary> keeps the count of the nested scopes </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.JsonWriter.Scope.type">
            <summary> keeps the type of the scope </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.JsonWriter.Scope.#ctor(System.Data.Services.Serializers.JsonWriter.ScopeType)">
            <summary>
            Creates a new instance of scope type
            </summary>
            <param name="type">type of the scope</param>
        </member>
        <member name="P:System.Data.Services.Serializers.JsonWriter.Scope.ObjectCount">
            <summary>
            Get/Set the object count for this scope
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.JsonWriter.Scope.Type">
            <summary>
            Gets the scope type for this scope
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.MetadataSerializer">
            <summary>
            Provides support for serializing responses in CSDL format.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.#ctor(System.IO.Stream,System.Uri,System.Data.Services.Providers.DataServiceProviderWrapper,System.Text.Encoding)">
            <summary>
            Initializes a new XmlDocumentSerializer, ready to write
            out an XML document
            </summary>
            <param name="output">Stream to which output should be sent.</param>
            <param name="baseUri">Base URI from which resources should be resolved.</param>
            <param name="provider">Data provider from which metadata should be gathered.</param>
            <param name="encoding">Text encoding for the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteTopLevelSchemaElements(System.Xml.XmlWriter)">
            <summary>
            Writes the edmx elements for the metadata document.
            </summary>
            <param name="writer">xml writer into which the metadata document needs to be written.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteSchemaElement(System.Xml.XmlWriter,System.String,System.Boolean)">
            <summary>
            Writes the lop level schema element
            </summary>
            <param name="writer">xml writer into which the schema node definition is written to</param>
            <param name="schemaNamespace">namespace of the schema</param>
            <param name="compatibleWithV1Schema">true if the metadata is compatible with the edm v1 schema</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteDataWebMetadata(System.Xml.XmlWriter,System.String,System.String)">
            <summary>Writes an attribute in the dataweb metadata namespace.</summary>
            <param name="writer">XmlWriter in which the attribute needs to be written</param>
            <param name="name">Attribute name.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteServiceOperations(System.Xml.XmlWriter,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Writes the service operations as FunctionImports in the specified <paramref name="writer"/>.
            </summary>
            <param name="writer">Writer to which CSDL is being written to.</param>
            <param name="provider">Underlying data provider from which we need to get the list of service operations that we need to write.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteRequest">
            <summary>Handles the complete serialization for the specified content.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.GenerateMetadata(System.Boolean)">
            <summary>Gets the metadata document for this provider.</summary>
            <param name="edmv1schema">Whether to use a v1 or a v.next EDM schema</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteTypes(System.Xml.XmlWriter,System.Collections.Generic.List{System.Data.Services.Providers.ResourceType},System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Writes the definition of types in the XmlWriter
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written</param>
            <param name="types">resourceTypes whose metadata needs to be written</param>
            <param name="associations">list of associations present in the model.</param>
            <param name="associationsInThisNamespace">list of associations in the current namespace.</param>
            <param name="provider">Data Service provider used for verification of rights</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteEntityType(System.Xml.XmlWriter,System.Data.Services.Providers.ResourceType,System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Write the metadata for the entityType in the xmlWriter
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written</param>
            <param name="entityType">entityType whose metadata needs to be written</param>
            <param name="associations">list of associations present in the model.</param>
            <param name="associationsInThisNamespace">list of associations in the current namespace.</param>
            <param name="provider">Data Service provider used for verification of rights</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteEpmProperties(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.Data.Services.Common.EntityPropertyMappingAttribute},System.Boolean,System.Boolean)">
            <summary>
            Writes the content for csdl corresponding to EpmProperties given in the <paramref name="epmInfos"/>
            </summary>
            <param name="xmlWriter">XmlWriter to write to</param>
            <param name="epmInfos">List of properties to write to csdl</param>
            <param name="skipSourcePath">Should source path be given</param>
            <param name="removePrefix">Remove prefix from source path for complex types</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteComplexType(System.Xml.XmlWriter,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Write the metadata for the complexType in the xmlWriter
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written</param>
            <param name="complexType">complexType whose metadata needs to be written</param>
            <param name="provider">Data Service provider used for verification of rights</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteProperties(System.Xml.XmlWriter,System.Data.Services.Providers.ResourceType,System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo},System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Write the metadata of all the properties for the given typein the xmlWriter
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written</param>
            <param name="type">resource type whose property metadata needs to be written</param>
            <param name="associations">list of associations present in the model.</param>
            <param name="associationsInThisNamespace">list of associations in the current namespace.</param>
            <param name="provider">Data Service provider used for verification of rights</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WritePrimitivePropertyFacets(System.Xml.XmlWriter,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Write the facets for clr types
            </summary>
            <param name="xmlWriter">XmlWriter in which facets needs to be written</param>
            <param name="resourceProperty">property which contains the primitive type for which facets needs to be written</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteAssociations(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.AssociationInfo})">
            <summary>
            Writes the metadata for the given associations.
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written.</param>
            <param name="associations">associations whose metadata need to be written.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteAssociationSets(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.AssociationInfo})">
            <summary>
            Writes the metadata for association sets for the given associations.
            </summary>
            <param name="xmlWriter">xmlWriter in which metadata needs to be written</param>
            <param name="associations">associations for which association sets needs to be written.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.WriteEntityContainer(System.Xml.XmlWriter,System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet},System.Collections.Generic.Dictionary{System.String,System.Data.Services.Providers.AssociationInfo})">
            <summary>
            Writes the entity container definition
            </summary>
            <param name="xmlWriter">xmlWriter into which metadata is written</param>
            <param name="entityContainerName">name of the entity container</param>
            <param name="entitySets">list of entity set name and containing element type name</param>
            <param name="associations">associations for which association sets metadata needs to be written.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.MetadataSerializer.TypeManager">
            <summary>
            Finds all the interesting types and their members given the top level type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.MetadataSerializer.TypeManager.namespaceManager">
            <summary>List of namespace along with the types in that namespace</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.TypeManager.#ctor(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceType})">
            <summary>
            Constructs a new instance of TypeManager using the knownTypes
            </summary>
            <param name="knownTypes">list of known resource types</param>
        </member>
        <member name="P:System.Data.Services.Serializers.MetadataSerializer.TypeManager.NamespaceAlongWithTypes">
            <summary>
            Returns the list of namespace and the types in those namespaces
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PlainXmlDeserializer">
            <summary>Provides a deserializer for plain XML content.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PlainXmlDeserializer.xmlReader">
            <summary>reader to read xml from the request stream</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PlainXmlDeserializer.xmlReaderOwned">
            <summary>Whether <see cref="F:System.Data.Services.Serializers.PlainXmlDeserializer.xmlReader"/> is owned and should be disposed of.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PlainXmlDeserializer.propertiesApplied">
            <summary>Properties already applied based on content</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PlainXmlDeserializer.currentPathPrefix">
            <summary>Prefix of the path to use in <see cref="F:System.Data.Services.Serializers.PlainXmlDeserializer.propertiesApplied"/></summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.#ctor(System.IO.Stream,System.Text.Encoding,System.Data.Services.IDataService,System.Boolean,System.Data.Services.UpdateTracker)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.PlainXmlDeserializer"/> for the specified stream.</summary>
            <param name="stream">Input stream reader from which POX content must be read.</param>
            <param name="encoding">Encoding to use for the stream (null to auto-discover).</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="update">Indicates whether this is a PUT operation (rather than POST).</param>
            <param name="tracker">Tracker to use for modifications.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.#ctor(System.Xml.XmlReader,System.Data.Services.Serializers.Deserializer,System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.PlainXmlDeserializer"/> based on the settings for another one.</summary>
            <param name="reader">Reader for content.</param>
            <param name="deserializer">Parent deserializer.</param>
            <param name="propertiesApplied">Properties already applied based on content</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ApplyContent(System.Data.Services.Serializers.Deserializer,System.Xml.XmlReader,System.Data.Services.Providers.ResourceType,System.Object,System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo,System.Int32)">
            <summary>Applies properties from the reader to the specified resource.</summary>
            <param name="deserializer">Deserializer which is driving the <paramref name="reader"/>.</param>
            <param name='reader'>XmlReader to read from.</param>
            <param name='resourceType'>Type of resource.</param>
            <param name='resource'>Resource to set value on.</param>
            <param name="propertiesApplied">Properties already applied based on content</param>
            <param name="currentObjectCount">current object count for this operation.</param>
            <remarks>
            This method will end as soon as it find something that is not an
            XML element to process.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ConvertValuesForXml(System.Object,System.String,System.Type)">
            <summary>
            Converts the given value to the expected type as per XML serializer rules.
            Make sure these rules are in sync with PlainXmlSerializer.
            </summary>
            <param name="value">value to the converted</param>
            <param name="propertyName">name of the property whose value is getting converted</param>
            <param name="typeToBeConverted">clr type to which the value needs to be converted to</param>
            <returns>object which is in sync with the properties type</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.CreateSingleObject(System.Data.Services.SegmentInfo)">
            <summary>
            Assumes the payload to represent a single object and processes accordingly
            </summary>
            <param name="segmentInfo">info about the object being created</param>
            <returns>the newly formed object that the payload represents</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.Dispose(System.Boolean)">
            <summary>Provides an opportunity to clean-up resources.</summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.GetLinkUriFromPayload">
            <summary>
            Get the resource referred by the uri in the payload
            </summary>
            <returns>resource referred by the uri in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.HasNullAttributeWithTrueValue(System.Xml.XmlReader)">
            <summary>
            returns true if the null attribute is specified and the value is true
            </summary>
            <param name="reader">xml reader from which attribute needs to be read</param>
            <returns>true if the null attribute is specified and the attribute value is true</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ReadElementString(System.Xml.XmlReader,System.String)">
            <summary>
            Reads the value from the given element. This leaves the reader in the EndElement.
            </summary>
            <param name="reader">xml reader from which the value needs to be read</param>
            <param name="elementName">name of the element whose value is getting read</param>
            <returns>returns the xml string values as specified in the payload</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ApplyContent(System.Xml.XmlReader,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Applies properties from the reader to the specified resource.</summary>
            <param name='reader'>XmlReader to read from.</param>
            <param name='resourceType'>Type of resource.</param>
            <param name='resource'>Resource to set value on.</param>
            <remarks>
            This method will end as soon as it find something that is not an
            XML element to process.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ApplyProperty(System.Xml.XmlReader,System.String,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Applies a property from the reader to the specified resource.</summary>
            <param name='reader'>XmlReader to read from.</param>
            <param name='propertyName'>Name of property to set on the specified resource.</param>
            <param name='resourceType'>Type of resource.</param>
            <param name='resource'>Resource to set value on.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ReadOpenPropertyTypeAttribute(System.Xml.XmlReader,System.Boolean@)">
            <summary>Gets the type attribute and resolves the type.</summary>
            <param name="reader">reader from which type attribute needs to be read</param>
            <param name="typeNameSpecified">true if the reader contains a type attribute otherwise false</param>
            <returns>resolved type</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.ReadPropertyWithType(System.Xml.XmlReader,System.String,System.Data.Services.Providers.ResourceProperty)">
            <summary>Reads a typed property from the specified XmlReader.</summary>
            <param name='reader'>XmlReader to read from.</param>
            <param name='propertyName'>Name of property to read.</param>
            <param name='resourceProperty'>resourceProperty whose value is to be read.</param>
            <returns>The instance read, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlDeserializer.BuildPropertyPath(System.String)">
            <summary>Gives an absolute property path based on current prefix</summary>
            <param name="propertyName">Name of property</param>
            <returns>Absolute path to the property</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.PlainXmlDeserializer.ContentFormat">
            <summary>Returns the content format for the deserializer.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PlainXmlSerializer">
            <summary>This class serializes primitive and complex type as name/value pairs.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PlainXmlSerializer.writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,System.IO.Stream,System.Text.Encoding)">
            <summary>Initializes a new SyndicationSerializer instance.</summary>
            <param name="requestDescription">Description of request.</param>
            <param name="absoluteServiceUri">Base URI from which resources should be resolved.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="output">Output stream.</param>
            <param name="encoding">Encoding for output.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.PrimitiveToString(System.Object)">
            <summary>Converts the specified value to a serializable string.</summary>
            <param name="value">Non-null value to convert.</param>
            <returns>The specified value converted to a serializable string.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteNullValue(System.Xml.XmlWriter,System.String,System.String)">
            <summary>Writes a property with a null value.</summary>
            <param name='writer'>XmlWriter to write to.</param>
            <param name='propertyName'>Property name.</param>
            <param name='expectedTypeName'>Type name for value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteStartElementWithType(System.Xml.XmlWriter,System.String,System.String)">
            <summary>Writes the start tag for a property.</summary>
            <param name='writer'>XmlWriter to write to.</param>
            <param name='propertyName'>Property name.</param>
            <param name='propertyTypeName'>Type name for value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteTextValue(System.Xml.XmlWriter,System.String,System.String,System.String)">
            <summary>Writes an already-formatted property.</summary>
            <param name='writer'>XmlWriter to write to.</param>
            <param name='propertyName'>Property name.</param>
            <param name='propertyTypeName'>Type name for value.</param>
            <param name='propertyText'>Property value in text form.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.Flush">
            <summary>Flushes the writer to the underlying stream.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expandedResult">Expandd results on the specified <paramref name="element"/>.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Boolean)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded results for elements.</param>
            <param name="elements">Enumerator for elements to write.</param>
            <param name="hasMoved">Whether <paramref name="elements"/> was succesfully advanced to the first element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteRowCount">
            <summary>
            Writes the row count
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteLink(System.Object)">
            <summary>
            Write out the uri for the given element
            </summary>
            <param name="element">element whose uri needs to be written out.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteLinkCollection(System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Write out the uri for the given elements
            </summary>
            <param name="elements">elements whose uri need to be writtne out</param>
            <param name="hasMoved">the current state of the enumerator.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.NextPageLinkWriter(System.Object,System.Object,System.Uri)">
            <summary>
            Writes the next page link to the current xml writer corresponding to the feed
            </summary>
            <param name="lastElement">Object that will contain the keys for skip token</param>
            <param name="expandedResult"><see cref="T:System.Data.Services.IExpandedResult"/> of the object being written</param>
            <param name="absoluteUri">Absolute URI for the result</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteObjectProperties(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Writes all the properties of the specified resource or complex object.</summary>
            <param name="element">Resource or complex object with properties to write out.</param>
            <param name="resourceType">Resource type describing the element type.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WritePrimitiveValue(System.Object,System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Writes a property with a primitive value.</summary>
            <param name='element'>Value.</param>
            <param name='propertyName'>Property name.</param>
            <param name='type'>Type for element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteComplexObjectValue(System.Object,System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Writes the value of a complex object.</summary>
            <param name="element">Element to write.</param>
            <param name="propertyName">Property name.</param>
            <param name="expectedType">Type for element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PlainXmlSerializer.WriteValueWithName(System.Object,System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Writes the <paramref name="element"/> value with the specified name.</summary>
            <param name="element">Element to write out.</param>
            <param name="propertyName">Property name for element.</param>
            <param name="resourceType">Type of resource to write.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationDeserializer">
            <summary>Provides a deserializer for structured content.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationDeserializer.factory">
            <summary>Factory for syndication formatting objects.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationDeserializer.xmlReader">
            <summary>reader to read xml from the request stream</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.#ctor(System.IO.Stream,System.Text.Encoding,System.Data.Services.IDataService,System.Boolean,System.Data.Services.Serializers.SyndicationFormatterFactory,System.Data.Services.UpdateTracker)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.SyndicationDeserializer"/> for the specified stream.</summary>
            <param name="stream">Input stream reader from which ATOM content must be read.</param>
            <param name="encoding">Encoding to use for the stream (null to auto-discover).</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="update">indicates whether this is a update operation or not</param>
            <param name="factory">Factory for formatter objects.</param>
            <param name="tracker">Tracker to use for modifications.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.CreateSingleObject(System.Data.Services.SegmentInfo)">
            <summary>
            Assumes the payload to represent a single object and processes accordingly
            </summary>
            <param name="segmentInfo">info about the object being created</param>
            <returns>the newly formed object that the payload represents</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.Dispose(System.Boolean)">
            <summary>Provides an opportunity to clean-up resources.</summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.GetLinkUriFromPayload">
            <summary>
            Get the resource referred by the uri in the payload
            </summary>
            <returns>resource referred by the uri in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.HasContent(System.ServiceModel.Syndication.SyndicationItem)">
            <summary>Checks whether the specified item has a payload.</summary>
            <param name='item'>Item to check.</param>
            <returns>true if the item has content or links specified; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.SyndicationItemGetType(System.ServiceModel.Syndication.SyndicationItem)">
            <summary>Gets the text for the type annotated on the specified <paramref name='item' />.</summary>
            <param name='item'>Item to read type from.</param>
            <returns>The text for the type annotated on the specified item; null if none is set.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ReadSyndicationFeed(System.ServiceModel.Syndication.SyndicationFeedFormatter,System.Xml.XmlReader)">
            <summary>Reads a SyndicationFeed object from the specified XmlReader.</summary>
            <param name='formatter'>Formatter to use when reading content.</param>
            <param name='reader'>Read to read feed from.</param>
            <returns>A new SyndicationFeed instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ReadSyndicationItem(System.ServiceModel.Syndication.SyndicationItemFormatter,System.Xml.XmlReader)">
            <summary>Reads a SyndicationItem object from the specified XmlReader.</summary>
            <param name='formatter'>Formatter to use when reading content.</param>
            <param name='reader'>Read to read feed from.</param>
            <returns>A new SyndicationItem instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ValidateTypeParameterForNonOpenTypeProperties(System.String,System.Boolean)">
            <summary>
            Read the link media type and validate for non open property types
            </summary>
            <param name="mediaType">media type as specified on the link element.</param>
            <param name="isCollection">whether the property is a collection property or not.</param>
            <returns>returns the type parameters specified in the media link.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ApplyContent(System.ServiceModel.Syndication.XmlSyndicationContent,System.Data.Services.Providers.ResourceType,System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo,System.Object)">
            <summary>Applies the properties in the plain XML content to the specified resource.</summary>
            <param name='content'>Content to read values from.</param>
            <param name='resourceType'>Type of resource whose values are being set.</param>
            <param name="propertiesApplied">Properties that have been applied to the <paramref name="resource"/></param>
            <param name='resource'>Target resource.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ApplyProperties(System.Xml.XmlReader,System.Data.Services.Providers.ResourceType,System.Data.Services.Common.EpmContentDeSerializer.EpmAppliedPropertyInfo,System.Object)">
            <summary>Applies the properties in the plain XML content to the specified resource.</summary>
            <param name="reader">XmlReader containing the property values.</param>
            <param name='resourceType'>Type of resource whose values are being set.</param>
            <param name="propertiesApplied">Properties that have been applied to the <paramref name="resource"/></param>
            <param name='resource'>Target resource.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.CreateObject(System.Data.Services.SegmentInfo,System.Boolean,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>Reads the current object from the <paramref name="item"/>.</summary>
            <param name="segmentInfo">segmentinfo containing information about the current element that is getting processes</param>
            <param name="topLevel">true if the element currently pointed by the xml reader refers to a top level element</param>
            <param name="item">Item to read from.</param>
            <returns>returns the clr object with the data populated</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ApplyLink(System.ServiceModel.Syndication.SyndicationLink,System.Data.Services.Providers.ResourceType,System.Object,System.String)">
            <summary>Applies the information from a link to the specified resource.</summary>
            <param name='link'>LinkDescriptor with information to apply.</param>
            <param name='resourceType'>Type for the target resource.</param>
            <param name='resource'>Target resource to which information will be applied.</param>
            <param name="propertyName">Name of the property that this link represents.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.ApplyEntityParameter(System.ServiceModel.Syndication.SyndicationLink,System.Data.Services.Providers.ServiceOperation,System.Object,System.String)">
            <summary>
            Deserialize the given service operation parameter
            </summary>
            <param name="link">link containing the data about the parameter.</param>
            <param name="operation">service operation whose parameter is getting deserialized.</param>
            <param name="parametersCollection">dicationary containing all the parameters.</param>
            <param name="parameterName">name of the parameter currently getting deserialized.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.GetResourceType(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Providers.ResourceType)">
            <summary>Gets the type attribute and resolves the type.</summary>
            <param name="item">Item from which type attribute needs to be read</param>
            <param name="expectedType">Expected base type for the item.</param>
            <returns>Resolved type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationDeserializer.HandleLinkContent(System.ServiceModel.Syndication.SyndicationLink,System.Data.Services.RequestTargetSource,System.Object,System.Object,System.String,System.String)">
            <summary>
            Handle the contents under the link element
            </summary>
            <param name="link">syndication link element</param>
            <param name="targetSource">target source kind.</param>
            <param name="parentResource">parent resource/service operation which contains the link.</param>
            <param name="instance">instance of ResourceProperty or ServiceOperationParameter, depending on what this link represents.</param>
            <param name="typeParameterValue">type parameter value as specified in the type attribute.</param>
            <param name="name">name of the property or parameter that this link represents.</param>
            <returns>returns whether there are child elements under link element.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.SyndicationDeserializer.ContentFormat">
            <summary>returns the content format for the deserializer</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationDeserializer.LinkContent">
            <summary>
            Indicates the various form of data in the inline xml element
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationDeserializer.LinkContent.NoInlineElementSpecified">
            <summary>If the link element didn't not contain an inline element at all.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationDeserializer.LinkContent.EmptyInlineElementSpecified">
            <summary>If the link element contained an empty inline element.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationDeserializer.LinkContent.InlineElementContainsData">
            <summary>If the inline element under the link element contained some data.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationSerializer">
            <summary>Serializes results into System.ServiceModel.Syndication objects, which can then be formatted.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.QualifiedNullAttribute">
            <summary>Namespace-qualified attribute for null value annotations.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.EmptyPerson">
            <summary>Empty person singleton.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.QualifiedDataWebPrefix">
            <summary>Namespace-qualified namespace prefix for the DataWeb namespace.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.QualifiedDataWebMetadataPrefix">
            <summary>Namespace-qualified namespace prefix for the DataWebMetadata namespace.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.DataWebV2MetadataNamespace">
            <summary>The Xmlns for DataWeb V2</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.factory">
            <summary>Factory for syndication formatter implementation.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.lastUpdatedTime">
            <summary>Last updated time for <see cref="T:System.ServiceModel.Syndication.SyndicationItem"/> elements.</summary>
            <remarks>
            While this is currently an arbitrary decision, it at least saves us from re-querying the system time
            every time an item is generated.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.resultFeed">
            <summary>Top-level feed being built.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.resultItem">
            <summary>Top-level item being built.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,System.IO.Stream,System.Text.Encoding,System.String,System.Data.Services.Serializers.SyndicationFormatterFactory)">
            <summary>Initializes a new SyndicationSerializer instance.</summary>
            <param name="requestDescription">Request description.</param>
            <param name="absoluteServiceUri">Absolute URI to the service entry point.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="output">Stream to write to.</param>
            <param name="encoding">Encoding for text in output stream.</param>
            <param name="etag">HTTP ETag header value.</param>
            <param name="factory">Factory for formatter objects.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WritePrimitiveValue(System.Object,System.String,System.String,System.Data.Services.Serializers.DictionaryContent)">
            <summary>Writes a primitive value to the specified output.</summary>
            <param name="primitive">Primitive value to write.</param>
            <param name="propertyName">name of the property whose value needs to be written</param>
            <param name="expectedTypeName">Type name of the property</param>
            <param name="content">Content dictionary to which the value should be written.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteDeferredContentElement(System.String,System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>Writes an Atom link element.</summary>
            <param name="linkRelation">relation of the link element with the parent element</param>
            <param name="title">title of the deferred element</param>
            <param name="href">uri for the deferred element</param>
            <param name="linkType">link type for the deferred element</param>
            <param name="item">Item to write link in.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.Flush">
            <summary>Flushes the writer to the underlying stream.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Boolean)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Enumerator for elements to write.</param>
            <param name="hasMoved">Whether <paramref name="elements"/> was succesfully advanced to the first element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteRowCount">
            <summary>
            Write out the entry count
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteLink(System.Object)">
            <summary>
            Write out the uri for the given element
            </summary>
            <param name="element">element whose uri needs to be written out.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteLinkCollection(System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Write out the uri for the given elements
            </summary>
            <param name="elements">elements whose uri need to be writtne out</param>
            <param name="hasMoved">the current state of the enumerator.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.IncludeCommonNamespaces(System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.String})">
            <summary>Ensures that common namespaces are included in the topmost tag.</summary>
            <param name='attributeExtensions'>Attribute extensions to write namespaces to.</param>
            <remarks>
            This method should be called by any method that may write a 
            topmost element tag.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.SetEntryTypeName(System.ServiceModel.Syndication.SyndicationItem,System.String)">
            <summary>Sets the type name for the specified syndication entry.</summary>
            <param name="item">Item on which to set the type name.</param>
            <param name="fullName">Full type name for the entry.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteLinkRelations(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Write the link relation element
            </summary>
            <param name="title">title for the current element</param>
            <param name="linkRelation">link relation for the self uri</param>
            <param name="relativeUri">relative uri for the current element</param>
            <param name="item">Item to write to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.EpmNeedToSkip(System.Data.Services.Common.EpmSourcePathSegment,System.String,System.Func{System.Boolean})">
            <summary>
            Checks if a particular property value should be skipped from the content section due to 
            EntityProperty mappings for friendly feeds
            </summary>
            <param name="currentSourceRoot">Current root segment in the source tree for a resource type</param>
            <param name="propertyName">Name of the property being checked for</param>
            <param name="predicate">Condition to check</param>
            <returns>true if skipping of property value is needed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.EpmGetComplexPropertySegment(System.Data.Services.Common.EpmSourcePathSegment,System.String)">
            <summary>
            Obtains the child EPM segment corresponding to the given <paramref name="propertyName"/>
            </summary>
            <param name="currentSourceRoot">Current root segment</param>
            <param name="propertyName">Name of property</param>
            <returns>Child segment or null if there is not segment corresponding to the given <paramref name="propertyName"/></returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteComplexObjectValue(System.Object,System.String,System.Data.Services.Providers.ResourceType,System.String,System.Data.Services.Serializers.DictionaryContent,System.Data.Services.Common.EpmSourcePathSegment)">
            <summary>Writes the value of a complex object.</summary>
            <param name="element">Element to write.</param>
            <param name="propertyName">name of the property whose value needs to be written</param>
            <param name="expectedType">expected type of the property</param>
            <param name="relativeUri">relative uri for the complex type element</param>
            <param name="content">Content to write to.</param>
            <param name="currentSourceRoot">Epm source sub-tree corresponding to <paramref name="element"/></param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteEntryElement(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceType,System.Uri,System.String,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>Write the entry element.</summary>
            <param name="expanded">Expanded result provider for the specified <paramref name="element"/>.</param>
            <param name="element">element representing the entry element</param>
            <param name="expectedType">expected type of the entry element</param>
            <param name="absoluteUri">absolute uri for the entry element</param>
            <param name="relativeUri">relative uri for the entry element</param>
            <param name="target">Target to write to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteFeedElements(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Data.Services.Providers.ResourceType,System.String,System.Uri,System.String,System.Boolean,System.ServiceModel.Syndication.SyndicationFeed)">
            <summary>
            Writes the feed element for the atom payload
            </summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">collection of entries in the feed element</param>
            <param name="expectedType">expectedType of the elements in the collection</param>
            <param name="title">title of the feed element</param>
            <param name="absoluteUri">absolute uri representing the feed element</param>
            <param name="relativeUri">relative uri representing the feed element</param>
            <param name="hasMoved">whether the enumerator has successfully moved to the first element</param>
            <param name='feed'>Feed to write to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.NextPageLinkWriter(System.Object,System.Object,System.Uri)">
            <summary>
            Writes the next page link to the current xml writer corresponding to the feed
            </summary>
            <param name="lastElement">Object that will contain the keys for skip token</param>
            <param name="expandedResult"><see cref="T:System.Data.Services.IExpandedResult"/> of the object being written</param>
            <param name="absoluteUri">Absolute URI for the result</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.DeferredFeedItems(System.Data.Services.IExpandedResult,System.Collections.IEnumerator,System.Data.Services.Providers.ResourceType,System.Boolean,System.Object,System.Action{System.Object,System.Object})">
            <summary>Provides an enumeration of deferred feed items.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Elements to enumerate.</param>
            <param name="expectedType">Expected type of elements.</param>
            <param name="hasMoved">Whether the enumerator moved to the first element.</param>
            <param name="activeSegmentNames">The segment names active at this point in serialization.</param>
            <param name="nextPageLinkWriter">Delegate that writes the next page link if necessity arises</param>
            <returns>An object that can enumerate syndication items.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteOtherElements(System.Data.Services.Providers.ResourceType,System.String,System.Uri,System.String,System.ServiceModel.Syndication.SyndicationItem)">
            <summary>
            Write entry/feed elements, except the content element and related links
            </summary>
            <param name="type">resource type of the entry element</param>
            <param name="title">title for the current element</param>
            <param name="absoluteUri">absolute uri for the current element</param>
            <param name="relativeUri">relative uri for the current element</param>
            <param name="item">Item to write to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.WriteObjectProperties(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceType,System.Uri,System.String,System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Serializers.DictionaryContent,System.Data.Services.Common.EpmSourcePathSegment)">
            <summary>Writes all the properties of the specified resource or complex object.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="customObject">Resource or complex object with properties to write out.</param>
            <param name="resourceType">resourceType containing metadata about the current custom object</param>
            <param name="absoluteUri">absolute uri for the given resource</param>
            <param name="relativeUri">relative uri for the given resource</param>
            <param name="item">Item in which to place links / expansions.</param>
            <param name="content">Content in which to place values.</param>
            <param name="currentSourceRoot">Epm source sub-tree corresponding to <paramref name="element"/></param>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo">
            <summary>Stores the resource property, its value and a flag which indicates whether this is a open property or not.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.resourceProperty">
            <summary>refers to the property that this instance represents.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.value">
            <summary>Value of the property.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.isOpenProperty">
            <summary>True, if this property is a open property.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.#ctor(System.Data.Services.Providers.ResourceProperty,System.Object,System.Boolean)">
            <summary>
            Creates a new instance of ResourcePropertyInfo.
            </summary>
            <param name="resourceProperty">resource property instance.</param>
            <param name="value">value for the resource property.</param>
            <param name="isOpenProperty">true, if the property is an open property, otherwise false.</param>
        </member>
        <member name="P:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.Property">
            <summary>Returns the resource property.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.Value">
            <summary>Returns the value of the resource property.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SyndicationSerializer.ResourcePropertyInfo.IsOpenProperty">
            <summary>Returns true if this property </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem">
            <summary>Wrapper for an inline item.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.factory">
            <summary>Factory for item formatter.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.item">
            <summary>Item being serialized.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.#ctor">
            <summary>Empty constructor.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Data.Services.Serializers.SyndicationFormatterFactory)">
            <summary>Initializing constructor.</summary>
            <param name="item">Item being serialized.</param>
            <param name="factory">Factory for item formatter.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.GetSchema">
            <summary>Reserved method.</summary>
            <returns>null</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.ReadXml(System.Xml.XmlReader)">
            <summary>Generates an object from its XML representation.</summary>
            <param name='reader'>XmlReader with representation.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomItem.WriteXml(System.Xml.XmlWriter)">
            <summary>Converts an object into its XML representation.</summary>
            <param name='writer'>Writer to write representation into.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed">
            <summary>Wrapper for an inline feed.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.factory">
            <summary>Factory for item formatter.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.feed">
            <summary>Feed being serialized.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.#ctor">
            <summary>Empty constructor.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Data.Services.Serializers.SyndicationFormatterFactory)">
            <summary>Initializing constructor.</summary>
            <param name="feed">Feed being serialized.</param>
            <param name="factory">Factory for item formatter.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.GetSchema">
            <summary>Reserved method.</summary>
            <returns>null</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.ReadXml(System.Xml.XmlReader)">
            <summary>Generates an object from its XML representation.</summary>
            <param name='reader'>XmlReader with representation.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.SyndicationSerializer.InlineAtomFeed.WriteXml(System.Xml.XmlWriter)">
            <summary>Converts an object into its XML representation.</summary>
            <param name='writer'>Writer to write representation into.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.TextSerializer">
            <summary>
            Provides support for serializing responses in text format.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.TextSerializer.writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.TextSerializer.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.TextSerializer"/> for the specified stream.</summary>
            <param name="output">Stream to which output should be sent.</param>
            <param name="encoding">Encoding to be used to write the result.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.TextSerializer.WriteException(System.Data.Services.HandleExceptionArgs)">
            <summary>Serializes exception information.</summary>
            <param name="args">Description of exception to serialize.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.TextSerializer.WriteRequest(System.Object)">
            <summary>Handles the complete serialization for the specified content.</summary>
            <param name="content">Single Content to write..</param>
            <remarks><paramref name="content"/> should be a byte array.</remarks>
        </member>
        <member name="T:System.Data.Services.Strings">
            <summary>
               Strongly-typed and parameterized string resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ALinq_UnsupportedExpression(System.Object)">
            <summary>
            A string like "The expression type {0} is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.InvalidEnumValue(System.Object)">
            <summary>
            A string like "The value for the given enum type '{0}' is not valid. Please specify a valid enum value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.InvalidOpenTypeKindEnumValue(System.Object,System.Object)">
            <summary>
            A string like "'{0}' is not a valid value for the enum type '{1}'. Please specify a valid enum value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OpenNavigationPropertiesNotSupportedOnOpenTypes(System.Object)">
            <summary>
            A string like "Open navigation properties are not supported on OpenTypes. Property name: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_IEnumerableAlwaysMultiple(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has a method '{1}' which is a generic IEnumerable but is marked with a SingleResultAttribute. Only IQueryable methods support this attribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_OverloadingNotSupported(System.Object,System.Object)">
            <summary>
            A string like "Overloading is not supported but type '{0}' has an overloaded method '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ParameterNotIn(System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' has a parameter '{1}' which is not an [in] parameter."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ParameterTypeNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' has a parameter '{1}' of type '{2}' which is not supported for service operations. Only primitive types are supported as parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ServiceOperationMissingSingleEntitySet(System.Object,System.Object)">
            <summary>
            A string like "Service operation '{0}' produces instances of type '{1}', but having a single entity set for that type is required."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ServiceOperationTypeHasNoContainer(System.Object,System.Object)">
            <summary>
            A string like "Service operation '{0}' produces instances of type '{1}', but there are no visible entity sets for that type. The service operation should be hidden or a resource set for type '{1}' should be made visible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_UnsupportedReturnType(System.Object,System.Object)">
            <summary>
            A string like "Unable to load metadata for return type '{1}' of method '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_NavigationPropertiesOnDerivedEntityTypesNotSupported(System.Object,System.Object)">
            <summary>
            A string like "Navigation Properties are not supported on derived entity types. Entity Set '{1}' has a instance of type '{0}', which is an derived entity type and has navigation properties. Please remove all the navigation properties from type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BasicExpandProvider_DescriptionInitializerCountMismatch(System.Object,System.Object)">
            <summary>
            A string like "The value '{0}' set on the wrapper description does not have the expected '{1}' property names."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BasicExpandProvider_UnsupportedExpandBreadth(System.Object)">
            <summary>
            A string like "$expand does not support '{0}' properties expanded simultaneously on the same segment."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BasicExpandProvider_SDP_UnsupportedOrderingExpressionBreadth(System.Object)">
            <summary>
            A string like "$expand does not support '{0}' ordering expressions simultaneously on the top level type. Ordering expressions include top level $orderby expressions and the key columns in the top level entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_ContentExpected(System.Object)">
            <summary>
            A string like "Content was expected for the {0} operation."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_ContentUnexpected(System.Object)">
            <summary>
            A string like "Content is unexpected for the {0} operation."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidDelimiter(System.Object)">
            <summary>
            A string like "The boundary delimiter '{0}' is not valid. Please specify a valid boundary delimiter or make sure that the content length specified is correct."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Services.Strings.BatchStream_InvalidHeaderValueSpecified(System.Object)" -->
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidContentLengthSpecified(System.Object)">
            <summary>
            A string like "The content length '{0}' is not valid. The content length must be a valid Int32 literal and must be greater than 0."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidHttpMethodName(System.Object)">
            <summary>
            A string like "'{0}' is not a supported HTTP method."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidMethodHeaderSpecified(System.Object)">
            <summary>
            A string like "Error processing batch request. The following header is not valid '{0}'. The first header at the start of the each operation must be of the following format: 'HttpMethod RequestUrl HttpVersion'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidHttpVersionSpecified(System.Object,System.Object)">
            <summary>
            A string like "Error processing batch request. The HTTP version '{0}' is not valid. The value must be '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidNumberOfHeadersAtOperationStart(System.Object,System.Object)">
            <summary>
            A string like "Error processing batch request. At the start of every operation, exactly two headers need to be specified: '{0}' and '{1}'. Make sure these headers are present and have the correct values."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_MissingOrInvalidContentEncodingHeader(System.Object,System.Object)">
            <summary>
            A string like "Error processing batch request. At the start of every operation, '{0}' header must be specified and its value must be '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidNumberOfHeadersAtChangeSetStart(System.Object,System.Object)">
            <summary>
            A string like "Error processing batch request. At the start of each change set, only two headers can be specified - '{0}' and '{1}'. Custom headers are allowed only within each operation, along with the standard HTTP headers."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_MissingContentTypeHeader(System.Object)">
            <summary>
            A string like "Error processing batch request. Missing '{0}' header. This header must be specified at the start of each operation and change set."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BatchStream_InvalidContentTypeSpecified(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Error processing batch request. The '{0}' header value '{1}' is not valid. If this is the start of the change set, then the value must be '{2}', otherwise it must be '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ResourceContainerNotReadonly(System.Object)">
            <summary>
            A string like "Entity Set '{0}' returned by the provider is not read-only. Please make sure all the sets returned by the provider are set to read only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ResourceTypeNotReadonly(System.Object)">
            <summary>
            A string like "Resource Type '{0}' returned by the provider is not read-only. Please make sure all the types are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ResourcePropertyNotReadonly(System.Object)">
            <summary>
            A string like "Resource Property '{0}' returned by the provider is not read-only. Please make sure all the resource properties are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ServiceOperationNotReadonly(System.Object)">
            <summary>
            A string like "Service Operation '{0}' returned by the provider is not read-only. Please make sure all the service operations are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterShouldBeLambda(System.Object)">
            <summary>
            A string like "The filter for an expand segment should be a lambda type, but the specified filter is of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterBodyShouldReturnBool(System.Object)">
            <summary>
            A string like "The filter for an expand segment should return a boolean value, but the specified filter returns '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterBodyShouldTakeOneParameter(System.Object)">
            <summary>
            A string like "The filter for an expand segment should take a single parameter, but the specified filter takes '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_AmbiguousItemName(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Query parameter item '{0}' expected, but both '{1}' and '{2}' are inexact matches for it."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_IncomingTemplateMatchFragment(System.Object)">
            <summary>
            A string like "Fragment parts are not supported in template matches but the base URI '{0}' has one."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_IncomingTemplateMatchQuery(System.Object)">
            <summary>
            A string like "Query parts are not supported in template matches but the base URI '{0}' has one."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_XMethodIncorrectCount(System.Object)">
            <summary>
            A string like "The X-HTTP-Method header should have a single value, but has '{0}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_XMethodIncorrectValue(System.Object)">
            <summary>
            A string like "The X-HTTP-Method header should be 'PUT', 'MERGE' or 'DELETE', but is '{0}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_QueryParameterMustBeSpecifiedOnce(System.Object)">
            <summary>
            A string like "Query parameter '{0}' is specified, but it should be specified exactly once."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_UnknownQueryParameter(System.Object)">
            <summary>
            A string like "The query parameter '{0}' begins with a system-reserved '$' character but is not recognized."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EncodingNotSupported(System.Object)">
            <summary>
            A string like "Character set '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EscapeCharWithoutQuotes(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because it contained escape characters even though it was not quoted."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EscapeCharAtEnd(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because it terminated with escape character. Escape characters must always be followed by a character in a parameter value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_ClosingQuoteNotFound(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because the closing quote character could not be found while the parameter value started with a quote character."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.IgnorePropertiesAttribute_InvalidPropertyName(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' is not a valid property name for type '{1}'. Please specify a valid property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OpenTypeAttribute_PropertyNameIsNotValidIdentifier(System.Object)">
            <summary>
            A string like "Name '{0}' for open property is not a valid identifier."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PlainXml_EntityTypeNotSupported(System.Object)">
            <summary>
            A string like "Payloads of MIME type application/xml do not support entity type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PlainXml_IncorrectElementName(System.Object,System.Object)">
            <summary>
            A string like "Expecting XML element '{0}', but found '{1}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PlainXml_NavigationPropertyNotSupported(System.Object)">
            <summary>
            A string like "XML specified navigation property '{0}', but navigation properties are not supported for plain XML."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PlainXml_PropertyLacksElement(System.Object)">
            <summary>
            A string like "Error processing XML - expecting an XML element for property '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_BooleanExpressionsExpectedFor(System.Object)">
            <summary>
            A string like "Boolean expressions expected for operator '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_CloseParenOrCommaExpected(System.Object)">
            <summary>
            A string like "')' or ',' expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_CloseParenOrOperatorExpected(System.Object)">
            <summary>
            A string like "')' or operator expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_DigitExpected(System.Object)">
            <summary>
            A string like "Digit expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_ExpressionExpected(System.Object)">
            <summary>
            A string like "Expression expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_ExpressionTypeMismatch(System.Object,System.Object)">
            <summary>
            A string like "Expression of type '{0}' expected at position {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_IdentifierExpected(System.Object)">
            <summary>
            A string like "Identifier expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_IncompatibleOperand(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Operator '{0}' incompatible with operand type '{1}' at position {2}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_IncompatibleOperands(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Operator '{0}' incompatible with operand types '{1}' and '{2}' at position {3}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_InvalidCharacter(System.Object,System.Object)">
            <summary>
            A string like "Syntax error '{0}' at position {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NoApplicableFunction(System.Object,System.Object,System.Object)">
            <summary>
            A string like "No applicable function found for '{0}' at position {1} with the specified arguments. The functions considered are: {2}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NotDoesNotSupportType(System.Object)">
            <summary>
            A string like "'not' operator does not support type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NullOperatorUnsupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The operator '{0}' at position {1} of expression '{2}' is not supported for the 'null' literal; only equality checks are supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_OpenParenExpected(System.Object)">
            <summary>
            A string like "'(' expected at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_OrderByDoesNotSupportType(System.Object)">
            <summary>
            A string like "Ordering does not support expressions of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_SyntaxError(System.Object)">
            <summary>
            A string like "Syntax error at position {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownFunction(System.Object,System.Object)">
            <summary>
            A string like "Unknown function '{0}' at position {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownProperty(System.Object,System.Object,System.Object)">
            <summary>
            A string like "No property '{0}' exists in type '{1}' at position {2}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnrecognizedLiteral(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Unrecognized '{0}' literal '{1}' in '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnterminatedLiteral(System.Object,System.Object)">
            <summary>
            A string like "Unterminated literal at position {0} in '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnterminatedStringLiteral(System.Object,System.Object)">
            <summary>
            A string like "Unterminated string literal at position {0} in '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_IncorrectArgumentFormat(System.Object,System.Object)">
            <summary>
            A string like "Incorrect format for {0} argument '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_PropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' does not have a property named '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_ResourceNotFound(System.Object)">
            <summary>
            A string like "Resource not found for the segment '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_ValueSegmentAfterScalarPropertySegment(System.Object,System.Object)">
            <summary>
            A string like "The segment '{1}' in the request URI is not valid. Since the segment '{0}' refers to a primitive type property, the only supported value from the next segment is '$value'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed(System.Object)">
            <summary>
            A string like "Resource Not Found - '{0}' refers to a service operation which does not allow further composition."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotQueryCollections(System.Object)">
            <summary>
            A string like "The request URI is not valid. Since the segment '{0}' refers to a collection, this must be the last segment in the request URI. All intermediate segments must refer to a single resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_MustBeLeafSegment(System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' must be the last segment since its one of the following: $batch, $value, $metadata or a service operation which returns void."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' must refer to a navigation property since the previous segment identifier is '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_MissingSegmentAfterLink(System.Object)">
            <summary>
            A string like "The request URI is not valid. There must a segment specified after the '{0}' segment and the segment must refer to a entity resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotSpecifyAfterPostLinkSegment(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' is not valid. Since the uri contains the '{1}' segment, there must be only one segment specified after that."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CountNotSupported(System.Object)">
            <summary>
            A string like "The request URI is not valid, $count cannot be applied to the segment '{0}' since $count can only follow a resource segment."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotQuerySingletons(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid, since the segment '{0}' refers to a singleton, and the segment '{1}' can only follow a resource collection."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_IncorrectOpenProperty(System.Object)">
            <summary>
            A string like "Type '{0}' declares an open property, but no public instance property with the specified name can be found with a supported type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_Sealed(System.Object)">
            <summary>
            A string like "Resource Type '{0}' cannot be modified since its already set to read only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_MissingKeyPropertiesForEntity(System.Object)">
            <summary>
            A string like "The entity type '{0}' does not have any key properties. Please make sure the key properties are defined for this entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_PropertyWithSameNameAlreadyExists(System.Object,System.Object)">
            <summary>
            A string like "Property with same name '{0}' already exists in type '{1}'. Please make sure that there is no property with the same name defined in one of the ancestor types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_PropertyNotPresent(System.Object,System.Object)">
            <summary>
            A string like "Property with name '{0}' does not exist on type '{1}'. Please make sure the property is present in this type and is declared by this type. If the property is declared by one of its base type, then you need to call RemoveProperty on the base type which declares this property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_Sealed(System.Object)">
            <summary>
            A string like "Resource property '{0}' cannot be modified since its already been set to read only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeAttributeEmpty(System.Object)">
            <summary>
            A string like "MimeType for property '{0}' is not valid. Please make sure that the mime type is not empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeAttributeOnNonPrimitive(System.Object,System.Object)">
            <summary>
            A string like "MimeType attribute is specified for property '{0}', which is of type '{1}', but it should only be specified on properties of primitive types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeNotValid(System.Object,System.Object)">
            <summary>
            A string like "MIME type '{0}' for property '{1}' is not in 'type/subtype' format. Please specify a valid value for mime type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_PropertyKindAndResourceTypeKindMismatch(System.Object,System.Object)">
            <summary>
            A string like "'{0}' parameter does not match with the type of the resource type in parameter '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_CannotConvertValue(System.Object)">
            <summary>
            A string like "The resource contains value '{0}' which cannot be serialized."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_NullKeysAreNotSupported(System.Object)">
            <summary>
            A string like "The serialized resource has a null value in key member '{0}'. Null values are not supported in key members."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_ResultsExceedMax(System.Object)">
            <summary>
            A string like "The response exceeds the maximum {0} results per collection."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_UnsupportedTopLevelType(System.Object)">
            <summary>
            A string like "The top-level type '{0}' for this request is not supported for serialization."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_MimeTypeNotValid(System.Object,System.Object)">
            <summary>
            A string like "MIME type '{0}' for service operation '{1}' is not in 'type/subtype' format."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_MimeTypeCannotBeEmpty(System.Object)">
            <summary>
            A string like "MIME type specified for service operation '{0}' is not valid. Please make sure that the mime type is not empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_Sealed(System.Object)">
            <summary>
            A string like "Service Operation '{0}' cannot be modified since its already been set to read only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultTypeAndKindMustMatch(System.Object,System.Object,System.Object)">
            <summary>
            A string like "'{1}' parameter must be null if the '{0}' parameter value is '{2}' and '{1}' parameter cannot be null if the '{0}' parameter value is anything but '{2}'. Please make sure the '{0}' parameter value is set according to the '{1}' parameter value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_DuplicateParameterName(System.Object)">
            <summary>
            A string like "Parameter with name '{0}' already exists. Please make sure that every parameter has a unique name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_EntryContentTypeUnsupported(System.Object)">
            <summary>
            A string like "Content type '{0}' for entry is not supported. Expecting 'application/xml'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_ErrorReadingEntry(System.Object)">
            <summary>
            A string like "Error reading syndication item: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_ErrorReadingFeed(System.Object)">
            <summary>
            A string like "Error reading syndication feed: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_FeedElementForCollections(System.Object,System.Object)">
            <summary>
            A string like "The atom element name '{0}' is not valid for property '{1}'. Since the property refers to a collection of resources, the expected element is 'feed'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_EntryElementForReferenceProperties(System.Object,System.Object)">
            <summary>
            A string like "The atom element name '{0}' is not valid for property '{1}'. Since the property refers to a single resource, the expected element is 'entry'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_InvalidOpenPropertyType(System.Object)">
            <summary>
            A string like "The open property '{0}' has an value which is not of valid type.. Please make sure that the property type is supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_InvalidSourcePath(System.Object,System.Object)">
            <summary>
            A string like "The PropertyName property value '{1}' of EntityPropertyMappingAttribute on type '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_InaccessiblePropertyOnType(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not present or is inaccessible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_DuplicateEpmAttrsWithSameSourceName(System.Object,System.Object)">
            <summary>
            A string like "The PropertyName property value '{0}' on more than one EntityPropertyMappingAttribute on resource type '{1}' is provided more than once."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_EndsWithNonPrimitiveType(System.Object)">
            <summary>
            A string like "The property '{0}' provided at the end of the PropertyName property of the EntityPropertyMappingAttribute on a resource type is not a primitive type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_InvalidTargetPath(System.Object)">
            <summary>
            A string like "The TargetName property path '{0}' of EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_AttributeInMiddle(System.Object)">
            <summary>
            A string like "The attribute identifier '{0}' is provided in the middle of the TargetName property of EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_DuplicateEpmAttrsWithSameTargetName(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The TargetName property '{0}' on more than one EntityPropertyMappingAttribute on resource type '{1}' have the same value. Conflicting properties are '{2}' and '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmOnlyAllowedOnEntityTypes(System.Object)">
            <summary>
            A string like "EntityPropertyMapping attributes are only allowed to be specified on entity types. The attribute specification for resource type '{0}' is not allowed."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForEpmPropertyType(System.Object,System.Object)">
            <summary>
            A string like "The value of '{0}' property on type '{1}' is not one of the allowed values. Allowed values are 'true' or 'false'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForEpmPropertyMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The value of '{0}' property on member '{1}' of type '{2}' is not one of the allowed values. Allowed values are 'true' or 'false'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_MultipleValuesForSameExtendedAttributeType(System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' is provided more than once for type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_MultipleValuesForSameExtendedAttributeMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' is provided more than once for member '{1}' of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidAttributeForNonSyndicationItemsType(System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' on type '{1}' is not allowed for current EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidAttributeForNonSyndicationItemsMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' on member '{1}' of type '{2}' is not allowed for current EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_MissingExtendedAttributeType(System.Object,System.Object)">
            <summary>
            A string like "The required extended attribute '{0}' is missing for resource type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForTargetTextContentKindPropertyType(System.Object,System.Object)">
            <summary>
            A string like "The value for TargetTextContentKind property value of '{0}' on type '{1}' for EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForTargetTextContentKindPropertyMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The value for TargetTextContentKind property value of '{0}' on member '{1}' of type '{2}' for EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnknownPropertyNameInEpmAttributes(System.Object,System.Object)">
            <summary>
            A string like "The property path '{0}' specified for the EntityPropertyMappingAttribute does not correspond to any property in type '{1}' or one of its base types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmDeserialize_MixedContent(System.Object)">
            <summary>
            A string like "Error processing request stream. Mixed content is not supported. The structured type being evaluated is '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_BatchExceedMaxBatchCount(System.Object)">
            <summary>
            A string like "The batch request exceeds the maximum {0} operations per request."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_BatchExceedMaxChangeSetCount(System.Object)">
            <summary>
            A string like "The batch request operation exceeds the maximum {0} changes per change set."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ChangeInterceptorIncorrectParameterCount(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' is marked as a change interceptor method but has {2} parameters. Two parameters are expected."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContextTypeIsAbstract(System.Object,System.Object)">
            <summary>
            A string like "Unable to create data provider. Type '{0}' for data source in '{1}' is abstract."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ExpandCountExceeded(System.Object,System.Object)">
            <summary>
            A string like "The request includes {0} $expand segment(s), but the maximum allowed is {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ExpandDepthExceeded(System.Object,System.Object)">
            <summary>
            A string like "The request includes an $expand path with {0} segment(s), but the maximum allowed is {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_QueryInterceptorIncorrectParameterCount(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' is marked as a query interceptor method but has {2} parameters. Query interceptors should take no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AttributeEntitySetNotFound(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Entity set '{0}' declared on attribute for method '{1}' of type '{2}' was not found."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationMethodNotVoid(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' us marked as an authorization method but has a return type of '{2}' when no return value is expected."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationMethodVoid(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' returns no value, but a '{2}' return type is required for a query interceptor method."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationParameterNotAssignable(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Parameter '{0}' of method '{1}' on type '{2}' is of type '{3}' but a type assignable from '{4}' is required."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationParameterNotResourceAction(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Parameter '{0}' of method '{1}' on type '{2}' is of type '{3}' but should be of type System.Data.Web.ResourceAction."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationReturnedNullQuery(System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' returned a null expression."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationReturnTypeNotAssignable(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Return type of method '{0}' on type '{1}' is of type '{2}' but a type assignable to '{3}' is required for a query interceptor."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ParameterIsOut(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has a method '{1}' with parameter '{2}' declared as an [Out] parameter. The parameter should be declared as [In] only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ETagCannotBeSpecified(System.Object)">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified since the URI '{0}' refers to a collection of resources or has a $count or $link segment or has a $expand as one of the query parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_CannotPerformOperationWithoutETag(System.Object)">
            <summary>
            A string like "Since entity type '{0}' has one or more etag properties, If-Match HTTP header must be specified for DELETE/PUT operations on this type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContentIdMustBeAnInteger(System.Object)">
            <summary>
            A string like "'{0}' is not a valid value for the 'Content-ID' header. In batch requests, the 'Content-ID' header must be an integer value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContentIdMustBeUniqueInBatch(System.Object)">
            <summary>
            A string like "'{0}' is not a unique 'Content-ID' in the given batch requests. In batch requests, every 'Content-ID' must be a unique value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_InvalidResourceType(System.Object)">
            <summary>
            A string like "The type '{0}' is not a valid entity type name. Please make sure this type is registered using the RegisterKnownType API on the IDataServiceConfiguration."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_VersionCannotBeParsed(System.Object)">
            <summary>
            A string like "Request version '{0}' cannot be parsed."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_VersionNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Request version '{0}' is not supported for the request payload. The only supported version is '{1}.{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_VersionTooLow(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Request version '{0}' is too low for the response. The lowest supported version is '{1}.{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_CannotUpdateKeyProperties(System.Object)">
            <summary>
            A string like "Since '{0}' is a key property, it cannot be updated."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ETagValueNotValid(System.Object)">
            <summary>
            A string like "The etag value '{0}' specified in one of the request headers is not valid. Please make sure only one etag value is specified and is valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_SDP_PageSizeMustbeNonNegative(System.Object,System.Object)">
            <summary>
            A string like "The given page size {0} for entity set '{1}' should have a non-negative value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_SDP_SkipTokenNotMatchingOrdering(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The number of keys '{0}' in skip token with value '{1}' did not match the number of ordering constraints '{2}' for the resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_SDP_OpenTypePropertiesNotOrderable(System.Object)">
            <summary>
            A string like "Open properties within Open types can not be used with $orderby clauses. The ordering expression that failed is '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_NoChangesAllowed(System.Object)">
            <summary>
            A string like "No changes are allowed to the configuration after '{0}' is invoked."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ResourceNameNotFound(System.Object)">
            <summary>
            A string like "The given name '{0}' was not found in the entity sets."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ServiceNameNotFound(System.Object)">
            <summary>
            A string like "The given name '{0}' was not found in the service operations."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceHost_MoreThanOneQueryParameterSpecifiedWithTheGivenName(System.Object,System.Object)">
            <summary>
            A string like "More than one query parameter specified with the name '{0}' in request URI '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForPostOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for POST operation. For POST operations, the URI must refer to a service operation or an entity set."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForPutOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for PUT operation. The URI must point to a single resource for PUT operations."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForMergeOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for MERGE operation. The URI must point to a single resource for MERGE operations. MERGE operation against a media resource is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForDeleteOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for DELETE operation. The URI must refer to a single resource from an entity set or from a property referring to a set of resources."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForMediaResource(System.Object)">
            <summary>
            A string like ""The URI '{0}' is not valid. The segment before '$value' must be a Media Link Entry or a primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_KeyCountMismatch(System.Object)">
            <summary>
            A string like "The number of keys specified in the URI does not match number of key properties for the resource '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.InvalidUri_OpenCollectionPropertiesMustHaveParenthesis(System.Object)">
            <summary>
            A string like "The property '{0}' referred in the request URI is a open property and refers to a collection of resources. Please specify () after the property to address this property correctly."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PropertyRequiresNonNegativeNumber(System.Object)">
            <summary>
            A string like "Property '{0}' requires a non-negative value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_DeepRecursion(System.Object)">
            <summary>
            A string like "Recursion reached allowed limit: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_RequestUriDoesNotHaveTheRightBaseUri(System.Object,System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid since it is not based on '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.NoEmptyConstructorFoundForType(System.Object)">
            <summary>
            A string like "A constructor which accepts no parameters was not found for type '{0}'. Every entity type must have a constructor which accepts no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.CannotCreateInstancesOfAbstractType(System.Object)">
            <summary>
            A string like "The type '{0}' is an abstract type. For PUT, POST and DELETE operations, the type specified must be a concrete type with a constructor that accepts no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInConvertingPropertyValue(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. Error encountered in converting the value from request payload for property '{0}' to type '{1}', which is the property's expected type. See inner exception for more detail."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidPropertyNameSpecified(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The property name '{0}' specified for type '{1}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidParameterNameSpecified(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The parameter name '{0}' for service operation '{1}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidContentType(System.Object,System.Object)">
            <summary>
            A string like "The content type '{0}' is not valid for type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_UnsupportedRequestContentType(System.Object)">
            <summary>
            A string like "The content type '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_DereferencingNullPropertyValue(System.Object)">
            <summary>
            A string like "Error processing request stream. The value of the property '{0}' specified is null and hence you cannot dereference the property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSetCollectionsToNull(System.Object)">
            <summary>
            A string like "Error processing request stream. The property '{0}' represents a collection of resources and hence cannot be set to null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSetTopLevelResourceToNull(System.Object)">
            <summary>
            A string like "Error processing request stream. Since URI '{0}' points directly to a top level resource, it cannot be set to null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidContentTypeForRequestUri(System.Object,System.Object)">
            <summary>
            A string like "The content-type '{0}' is not a valid content type for this request. The content-type must be one of the following: {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInSettingPropertyValue(System.Object)">
            <summary>
            A string like "Error processing request stream. Error encountered in setting value for property '{0}'. Please verify that the value is correct."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_PropertyValueCannotBeSet(System.Object)">
            <summary>
            A string like "Error processing request stream. Property '{0}' is a read-only property and cannot be updated. Please make sure that this property is not present in the request payload."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_LoopsNotAllowedInComplexTypes(System.Object)">
            <summary>
            A string like "Circular loop was detected while serializing the properties. Complex property '{0}' has a value which causes the loop. Please make sure that there are no loops."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ExceedsMaxObjectCountOnInsert(System.Object)">
            <summary>
            A string like "The request exceeds the maximum {0} resources that can be referenced in a single POST request."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_MustSpecifyCanonicalUriInPayload(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid. The URI must refer to a single resource and must be canonical."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeName(System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeSpecified(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not valid for the given URI it represents. The expected type must be '{1}' or one of its derived types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInConvertingNumericValues(System.Object)">
            <summary>
            A string like "Error processing request stream. Values for properties of type 'decimal' and 'int64' must be quoted in the payload. Make sure the value for property '{0}' is quoted."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_InvalidKeyword(System.Object)">
            <summary>
            A string like "Error processing request stream. '{0}' is not a valid JSON literal. 'true', 'false' and 'null' are only valid JSON literals. Make sure they are all lower-case."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_MissingNameValueSeperator(System.Object)">
            <summary>
            A string like "Error processing request stream. Missing ':' after '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidNavigationPropertyName(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. There is no navigation property '{0}' on type '{1}'. title attribute value on related link elements must be a valid navigation property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidValue(System.Object)">
            <summary>
            A string like "Error processing request stream. The value specified for element '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSpecifyValueOrChildElementsForNullElement(System.Object)">
            <summary>
            A string like "Error processing request stream. Element '{0}' cannot have child elements or a value specified if it has a null attribute with true value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_OnlyEntityTypesMustBeSpecifiedInEntryElement(System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not an entity type and hence cannot be represented by an entry element in the payload."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_MimeTypeMustBeApplicationAtom(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The mime type '{0}' specified is not valid. The type attribute in link element must have '{1}' as the mime type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeParameterSpecifiedInMimeType(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The value '{0}' of the 'type' parameter in the 'type' attribute in link element is not valid. The value must be '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_LinkHrefMustReferToSingleResource(System.Object)">
            <summary>
            A string like "Error processing request stream. Since the property '{0}' refers to a reference property, the URI specified in the href attribute must refer to a single resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_MissingTypeParameterOnLinkElement(System.Object)">
            <summary>
            A string like "Error processing request stream. Since the property '{0}' is a open property, the type attribute must be specified on the link element."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeParameterInTypeAttributeInLink(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The type parameter value is not valid '{1}' in the type attribute for the link element representing '{0}' property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InlineElementMustContainValidElement(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. '{0}' is not a valid child element under '{1}' element. The '{1}' can only have '{2}' or '{3}' as child elements and they should live in the atom namespace."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_DifferentContainerRights(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Entity set '{0}' has rights '{1}' applied to it, but entity set '{2}' has rights '{3}'. Entity sets of the same type must have the same rights."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_HasStreamAttributeEmpty(System.Object)">
            <summary>
            A string like "HasStream attribute for entity type '{0}' cannot be empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidDefaultEntityContainerName(System.Object)">
            <summary>
            A string like "Default entity set name '{0}' is not valid. Please make sure that the entity set name is valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_NavigationPropertyUnbound(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Navigation property '{0}' on type '{1}' cannot be used because the entity set '{2}' does not have an association set specified for it."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnableToLoadMetadataForType(System.Object)">
            <summary>
            A string like "Unable to load metadata for type '{0}'. The mapped OSpace type was not found. Please make sure you register the mapped OSpace type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnsupportedStreamProperty(System.Object,System.Object)">
            <summary>
            A string like "Unsupported value '{0}' for HasStream attribute on entity type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_MultipleEntitySetsForSameType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Property '{0}' and '{1}' are IQueryable of types '{2}' and '{3}' and type '{2}' is an ancestor for type '{3}'. Please make sure that there is only one IQueryable property for each type hierarchy."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_InvalidProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a valid property. Make sure that the type of the property is a public type and a supported primitive type or a entity type with a valid key or a complex type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_CollectionOfPrimitiveOrComplexNotSupported(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a valid property. Properties whose types are collection of primitives or complex types are not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_EntityTypeHasKeyButNoEntitySet(System.Object)">
            <summary>
            A string like "Type '{0}' has a key defined through an explicit DataServiceKeyAttribute, but it is not exposed through a top-level IQueryable property on the data context."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_InvalidEntitySetProperty(System.Object,System.Object)">
            <summary>
            A string like "On data context type '{1}', there is a top IQueryable property '{0}' whose element type is not an entity type. Make sure that the IQueryable property is of entity type or specify the IgnoreProperties attribute on the data context type to ignore this property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_EntityPropertyWithNoEntitySet(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has property '{1}' of entity type. Either this property has no corresponding entity set in the data context or one of its inherited types has a corresponding entity set. Specify IgnoreProperties attribute on the entity type for this property or use a property type that has a corresponding entity set in the data context."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_AssociationEndHasNoCorrespondingSet(System.Object,System.Object)">
            <summary>
            A string like "The end '{0}' of association '{1}' has no corresponding entity set defined in the data context. This could happen if multiple entity sets have entity types that have a common ancestor and the ancestor has a property of derived entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_KeyPropertiesCannotBeIgnored(System.Object)">
            <summary>
            A string like "Key properties cannot be ignored using the IgnoreProperties attribute. For type '{0}', please make sure that there is a key property which is not ignored."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_ETagPropertyNameNotValid(System.Object,System.Object)">
            <summary>
            A string like "The property name'{0}' specified in the ETagAttribute on type '{1}' is not a valid property name. Please specify a valid property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_HasStreamAttributeOnlyAppliesToEntityType(System.Object)">
            <summary>
            A string like "Cannot apply the HasStreamAttribute to type '{0}'. HasStreamAttribute is only applicable to entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.TargetElementTypeOfTheUriSpecifiedDoesNotMatchWithTheExpectedType(System.Object,System.Object)">
            <summary>
            A string like "The entity type '{0}' that the URI refers to does not match with the expected entity type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_InvalidTypeSpecified(System.Object)">
            <summary>
            A string like "Internal Server Error. The type '{0}' is not a complex type or an entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnableToGetPropertyInfo(System.Object,System.Object)">
            <summary>
            A string like "Internal Server Error. Unable to find property '{1}' on type '{0}'. Please make sure that the property name is correct."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BasicExpandProvider_ExpandedPropertiesNotInitialized">
            <summary>
            A string like "Description for expanded properties has not been initialized."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BasicExpandProvider_ExpandNotSupportedForOpenProperties">
            <summary>
            A string like "$expand does not support open properties."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_GetMethodNotSupportedInChangeset">
            <summary>
            A string like "GET operation cannot be specified in a change set. Only PUT, POST and DELETE operations can be specified in a change set."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_InvalidBatchFormat">
            <summary>
            A string like "Error processing batch request. The request is not a valid batch request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_MissingEndChangesetDelimiter">
            <summary>
            A string like "Missing change set boundary delimiter. Please make sure that change set boundary delimiter is specified to mark the end of a change set."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_OnlyGETOperationsCanBeSpecifiedInBatch">
            <summary>
            A string like "Only GET operations can be specified in a batch. POST, PUT and DELETE operations must be specified within a change set."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_InvalidOperationHeaderSpecified">
            <summary>
            A string like "Header containing the HTTP method name, request URL and version can only be specified for GET operations in a batch or POST, PUT, DELETE operations in a change set."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_MoreDataAfterEndOfBatch">
            <summary>
            A string like "No data should be specified after the batch delimiter."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BatchStream_InternalBufferRequestTooSmall">
            <summary>
            A string like "Error processing batch request. An internal read request was too small."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ETagAttribute_MustSpecifyAtleastOnePropertyName">
            <summary>
            A string like "ETag attribute must specify at least one property name."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_WebOperationContextCurrentMissing">
            <summary>
            A string like "There is no System.ServiceModel.Web.WebOperationContext.Current instance."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_MalformedHeaderValue">
            <summary>
            A string like "Malformed value in request header."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_XMethodNotUsingPost">
            <summary>
            A string like "The X-HTTP-Method header can only be used with POST requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_ContentTypeMissing">
            <summary>
            A string like "Content-Type header value missing."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeMissingValue">
            <summary>
            A string like "Media type is missing a parameter value."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter">
            <summary>
            A string like "Media type requires a ';' character before a parameter definition."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSlash">
            <summary>
            A string like "Media type requires a '/' character."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSubType">
            <summary>
            A string like "Media type requires a subtype definition."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeUnspecified">
            <summary>
            A string like "Media type is unspecified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.IgnorePropertiesAttribute_PropertyNameCannotBeNullOrEmpty">
            <summary>
            A string like "The property name specified in the IgnoreProperties attribute cannot be null or empty. Please specify a valid property name."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.OpenTypeAttribute_PropertyNameCannotBeNull">
            <summary>
            A string like "Names for open properties cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.PlainXml_PayloadLacksElement">
            <summary>
            A string like "Error processing XML - expecting an XML element for payload."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryExpandOptionNotApplicable">
            <summary>
            A string like "Query option $expand cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryFilterOptionNotApplicable">
            <summary>
            A string like "Query option $filter cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryNoOptionsApplicable">
            <summary>
            A string like "Query options $expand, $filter, $orderby, $inlinecount, $skip and $top cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QuerySetOptionsNotApplicable">
            <summary>
            A string like "Query options $orderby, $inlinecount, $skip and $top cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_InvalidCountOptionError">
            <summary>
            A string like "Unknown $inlinecount option, only "allpages" and "none" are supported"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_RequestVerbCannotCountError">
            <summary>
            A string like "$count and $inlinecount only apply to an HTTP GET request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_InlineCountWithValueCount">
            <summary>
            A string like "$inlinecount cannot be applied to the resource segment '$count'"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteRequestUriCannotBeNull">
            <summary>
            A string like "The AbsoluteRequestUri property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteRequestUriMustBeAbsolute">
            <summary>
            A string like "The AbsoluteRequestUri property of the data service host must be an absolute URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteServiceUriCannotBeNull">
            <summary>
            A string like "The AbsoluteServiceUri property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteServiceUriMustBeAbsolute">
            <summary>
            A string like "The AbsoluteServiceUri property of the data service host must be an absolute URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_Forbidden">
            <summary>
            A string like "Forbidden"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_KeysMustBeNamed">
            <summary>
            A string like "Segments with multiple key values must specify them in 'name=value' form."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_MethodNotAllowed">
            <summary>
            A string like "Method Not Allowed"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_SyntaxError">
            <summary>
            A string like "Bad Request - Error in query syntax."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_TooManySegments">
            <summary>
            A string like "Too many segments in URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_EmptySegmentInRequestUrl">
            <summary>
            A string like "Empty segment encountered in request URL. Please make sure that a valid request URL is specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_CountOnRoot">
            <summary>
            A string like "The request URI is not valid, the segment $count cannot be applied to the root of the service."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceContainer_ContainerMustBeAssociatedWithEntityType">
            <summary>
            A string like "The ResourceTypeKind property of a ResourceType instance associated with a ResourceSet must be equal to 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_NoKeysInDerivedTypes">
            <summary>
            A string like "Key properties cannot be defined in derived types."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_KeyPropertiesOnlyOnEntityTypes">
            <summary>
            A string like "Key properties can only be added to ResourceType instances with a ResourceTypeKind equal to 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_ETagPropertiesOnlyOnEntityTypes">
            <summary>
            A string like "ETag properties can only be added to ResourceType instances with a ResourceTypeKind equal to 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_InvalidValueForResourceTypeKind">
            <summary>
            A string like "'Primitive' is not a valid value for resourceTypeKind."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_TypeCannotBeValueType">
            <summary>
            A string like "Clr type for the resource type cannot be a value type."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:System.Data.Services.Strings.ResourceProperty_KeyPropertiesCannotBeNullable" -->
        <member name="P:System.Data.Services.Strings.Serializer_ETagValueDoesNotMatch">
            <summary>
            A string like "The etag value in the request header does not match with the current etag value of the object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.Serializer_NoETagPropertiesForType">
            <summary>
            A string like "If-Match or If-None-Match headers cannot be specified if the target type does not have etag properties defined."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.SingleResourceExpected">
            <summary>
            A string like "A single resource was expected for the result, but multiple resources were found."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_SyndicationMappingForComplexPropertiesNotAllowed">
            <summary>
            A string like "EntityPropertyMapping for complex types is not allowed when being mapped to Syndication specific entities."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.EpmSerializer_PublishedHasWrongType">
            <summary>
            A string like "The property value corresponding to Published property in SyndicationItemProperty could not be converted to type DateTimeOffset."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.EpmDeserialize_InvalidXmlEntity">
            <summary>
            A string like "Unexpected xml entity was found in the request stream."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_BatchResourceOnlySupportsPost">
            <summary>
            A string like "The /$batch resource only supports POST method requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_CreateDataSourceNull">
            <summary>
            A string like "The method CreateDataService has been overridden but it returned a null value; a valid instance is required."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_EmptyHttpMethod">
            <summary>
            A string like "There is no HTTP method specified by the host."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_HostNotAttached">
            <summary>
            A string like "There is no host attached to this service. Call AttachHost to provide a valid host that can provide a request to process."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_NotImplementedException">
            <summary>
            A string like "Not Implemented"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_BothIfMatchAndIfNoneMatchHeaderSpecified">
            <summary>
            A string like "Both If-Match and If-None-Match HTTP headers cannot be specified at the same time. Please specify either one of the headers or none of them."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_ETagSpecifiedForPost">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified for POST operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_IfNoneMatchHeaderNotSupportedInDelete">
            <summary>
            A string like "If-None-Match HTTP header cannot be specified for DELETE operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_IfNoneMatchHeaderNotSupportedInPut">
            <summary>
            A string like "If-None-Match HTTP header cannot be specified for PUT operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidContentTypeForBatchRequest">
            <summary>
            A string like "The content type specified in not valid for batch requests. Content type must be 'multipart/mixed' and there must be a valid single boundary delimiter specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_OnlyGetOperationSupportedOnServiceUrl">
            <summary>
            A string like "The URL representing the root of the service only supports GET requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_SDP_PageSizeWithMaxResultsPerCollection">
            <summary>
            A string like "Specification of entity set page size is mutually exclusive with the specification of MaxResultsPerCollection property in configuration."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_SDP_TopLevelPagedResultWithOldExpandProvider">
            <summary>
            A string like "The service does not expose IExpandProvider2 interface which is required when top level results are paged. Request could not be processed."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_RegisterKnownTypeNotAllowedForIDSP">
            <summary>
            A string like "Adding types through RegisterKnownType() is not supported for custom data service providers."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidStreamFromGetWriteStream">
            <summary>
            A string like "IDataServiceStreamProvider.GetWriteStream() must return a valid writable stream."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidStreamFromGetReadStream">
            <summary>
            A string like "IDataServiceStreamProvider.GetReadStream() must return a valid readable stream."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceException_GeneralError">
            <summary>
            A string like "An error occurred while processing this request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceException_UnsupportedMediaType">
            <summary>
            A string like "Unsupported media type requested."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_NullRequestStream">
            <summary>
            A string like "Error in processing request - there is no request body available."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CannotNullifyValueTypeProperty">
            <summary>
            A string like "The request is not valid. To set a value to null, the URI must refer to a property whose type is not of value type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataSourceMustImplementIUpdatableToSupportUpdates">
            <summary>
            A string like "The data source must implement IUpdatable to support updates."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataSourceMustImplementIDataServiceStreamProviderToSupportStreaming">
            <summary>
            A string like "The data source must implement IDataServiceStreamProvider to support streaming."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ValuesCanBeReturnedForPrimitiveTypesOnly">
            <summary>
            A string like "$value must be only specified for primitive values. Please make sure that property is a primitive type property."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_InvalidUriSpecified">
            <summary>
            A string like "Error processing request stream. The URI specified is not valid."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingTypeInformationForOpenTypeProperties">
            <summary>
            A string like "Error processing request stream. Type information is not specified for open property."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_DeepUpdateNotSupported">
            <summary>
            A string like "Error processing request stream. Deep updates are not supported in PUT operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_TypeInformationMustBeSpecifiedForInhertiance">
            <summary>
            A string like "Error processing request stream. Type information must be specified for types that take part in inheritance."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_UriMissingForUpdateForDeepUpdates">
            <summary>
            A string like "Error processing request stream. In PUT operations, URI must be specified for binding operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation">
            <summary>
            A string like "Error processing request stream. In batch mode, a resource can be cross-referenced only for bind/unbind operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_MissingUriForLinkOperation">
            <summary>
            A string like "Missing URI element. For link operations, URI element must be specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CannotUpdateRelatedEntitiesInPut">
            <summary>
            A string like "Error processing request stream. Binding to new entities is not supported in PUT operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CollectionParametersAreNotSupported">
            <summary>
            A string like "Error processing request stream. For service operation, the parameters must be a primitive, complex or entity type. Collection parameters are not supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidResourceEntity">
            <summary>
            A string like "Error processing request stream. The request should be a valid top-level resource object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidMetadataContent">
            <summary>
            A string like "Error processing request stream. '__metadata' element must be a valid JSON object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidTypeMetadata">
            <summary>
            A string like "Error processing request stream. The 'type' element value in '__metadata' must be of string type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidUriMetadata">
            <summary>
            A string like "Error processing request stream. 'uri' element value must be of string type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidContent">
            <summary>
            A string like "Error processing request stream. JSON text specified is not valid."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ResourceSetPropertyMustBeArray">
            <summary>
            A string like "Error processing request stream. The payload must represent a valid array format for collections."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingArrayMemberSeperator">
            <summary>
            A string like "Error processing request stream. Missing ',' between array elements."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingMemberName">
            <summary>
            A string like "Error processing request stream. In JSON, every object is made up of name/value pairs and the name must be specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingMemberSeperator">
            <summary>
            A string like "Error processing request stream. In JSON, every object is made up of name/value pairs and every name/value pair must be separated by ','."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidJsonNameSpecifiedOrExtraComma">
            <summary>
            A string like "Error processing request stream. Either an extra comma is specified at the end or name is an empty string."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidJsonUnrecognizedEscapeSequence">
            <summary>
            A string like "Error processing request stream. Unrecognized escape sequence found in JSON string."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_MoreThanOneUriElementSpecified">
            <summary>
            A string like "Error processing request stream. Exactly one URI must be specified for link operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_DefaultEntityContainerNameMissing">
            <summary>
            A string like "Missing default entity set name. Please make sure that there is a valid default entity set name specified in the ObjectContext."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_ExpandTooDeep">
            <summary>
            A string like "The specified $expand option is too deep."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_ResolveResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. ResolveResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_CreateResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. CreateResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_ResetResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. ResetResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.TextResDescriptionAttribute.#ctor(System.String)">
            <summary>
                Constructs a new sys description.
            </summary>
            <param name='description'>
                description text.
            </param>
        </member>
        <member name="P:System.Data.Services.TextResDescriptionAttribute.Description">
            <summary>
                Retrieves the description text.
            </summary>
            <returns>
                description
            </returns>
        </member>
        <member name="T:System.Data.Services.TextRes">
             <summary>
                AutoGenerated resource class. Usage:
            
                    string s = TextRes.GetString(TextRes.MyIdenfitier);
             </summary>
        </member>
    </members>
</doc>
